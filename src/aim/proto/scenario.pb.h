// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: scenario.proto
// Protobuf C++ Version: 5.29.3

#ifndef scenario_2eproto_2epb_2eh
#define scenario_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "common.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_scenario_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_scenario_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_scenario_2eproto;
namespace aim {
class BarrelRoom;
struct BarrelRoomDefaultTypeInternal;
extern BarrelRoomDefaultTypeInternal _BarrelRoom_default_instance_;
class BarrelScenarioDef;
struct BarrelScenarioDefDefaultTypeInternal;
extern BarrelScenarioDefDefaultTypeInternal _BarrelScenarioDef_default_instance_;
class CenteringScenarioDef;
struct CenteringScenarioDefDefaultTypeInternal;
extern CenteringScenarioDefDefaultTypeInternal _CenteringScenarioDef_default_instance_;
class CircleTargetRegion;
struct CircleTargetRegionDefaultTypeInternal;
extern CircleTargetRegionDefaultTypeInternal _CircleTargetRegion_default_instance_;
class CylinderRoom;
struct CylinderRoomDefaultTypeInternal;
extern CylinderRoomDefaultTypeInternal _CylinderRoom_default_instance_;
class EllipseTargetRegion;
struct EllipseTargetRegionDefaultTypeInternal;
extern EllipseTargetRegionDefaultTypeInternal _EllipseTargetRegion_default_instance_;
class LinearScenarioDef;
struct LinearScenarioDefDefaultTypeInternal;
extern LinearScenarioDefDefaultTypeInternal _LinearScenarioDef_default_instance_;
class PillTargetDef;
struct PillTargetDefDefaultTypeInternal;
extern PillTargetDefDefaultTypeInternal _PillTargetDef_default_instance_;
class RectangleTargetRegion;
struct RectangleTargetRegionDefaultTypeInternal;
extern RectangleTargetRegionDefaultTypeInternal _RectangleTargetRegion_default_instance_;
class RegionLength;
struct RegionLengthDefaultTypeInternal;
extern RegionLengthDefaultTypeInternal _RegionLength_default_instance_;
class RegionVec2;
struct RegionVec2DefaultTypeInternal;
extern RegionVec2DefaultTypeInternal _RegionVec2_default_instance_;
class RegionVec3;
struct RegionVec3DefaultTypeInternal;
extern RegionVec3DefaultTypeInternal _RegionVec3_default_instance_;
class Room;
struct RoomDefaultTypeInternal;
extern RoomDefaultTypeInternal _Room_default_instance_;
class ScenarioDef;
struct ScenarioDefDefaultTypeInternal;
extern ScenarioDefDefaultTypeInternal _ScenarioDef_default_instance_;
class ScenarioReferenceOverrides;
struct ScenarioReferenceOverridesDefaultTypeInternal;
extern ScenarioReferenceOverridesDefaultTypeInternal _ScenarioReferenceOverrides_default_instance_;
class ShotType;
struct ShotTypeDefaultTypeInternal;
extern ShotTypeDefaultTypeInternal _ShotType_default_instance_;
class SimpleRoom;
struct SimpleRoomDefaultTypeInternal;
extern SimpleRoomDefaultTypeInternal _SimpleRoom_default_instance_;
class StaticScenarioDef;
struct StaticScenarioDefDefaultTypeInternal;
extern StaticScenarioDefDefaultTypeInternal _StaticScenarioDef_default_instance_;
class TargetDef;
struct TargetDefDefaultTypeInternal;
extern TargetDefDefaultTypeInternal _TargetDef_default_instance_;
class TargetPlacementStrategy;
struct TargetPlacementStrategyDefaultTypeInternal;
extern TargetPlacementStrategyDefaultTypeInternal _TargetPlacementStrategy_default_instance_;
class TargetProfile;
struct TargetProfileDefaultTypeInternal;
extern TargetProfileDefaultTypeInternal _TargetProfile_default_instance_;
class TargetRegion;
struct TargetRegionDefaultTypeInternal;
extern TargetRegionDefaultTypeInternal _TargetRegion_default_instance_;
}  // namespace aim
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace aim {

// ===================================================================


// -------------------------------------------------------------------

class SimpleRoom final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:aim.SimpleRoom) */ {
 public:
  inline SimpleRoom() : SimpleRoom(nullptr) {}
  ~SimpleRoom() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SimpleRoom* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SimpleRoom));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SimpleRoom(
      ::google::protobuf::internal::ConstantInitialized);

  inline SimpleRoom(const SimpleRoom& from) : SimpleRoom(nullptr, from) {}
  inline SimpleRoom(SimpleRoom&& from) noexcept
      : SimpleRoom(nullptr, std::move(from)) {}
  inline SimpleRoom& operator=(const SimpleRoom& from) {
    CopyFrom(from);
    return *this;
  }
  inline SimpleRoom& operator=(SimpleRoom&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SimpleRoom& default_instance() {
    return *internal_default_instance();
  }
  static inline const SimpleRoom* internal_default_instance() {
    return reinterpret_cast<const SimpleRoom*>(
        &_SimpleRoom_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(SimpleRoom& a, SimpleRoom& b) { a.Swap(&b); }
  inline void Swap(SimpleRoom* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SimpleRoom* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SimpleRoom* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SimpleRoom>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SimpleRoom& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SimpleRoom& from) { SimpleRoom::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SimpleRoom* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "aim.SimpleRoom"; }

 protected:
  explicit SimpleRoom(::google::protobuf::Arena* arena);
  SimpleRoom(::google::protobuf::Arena* arena, const SimpleRoom& from);
  SimpleRoom(::google::protobuf::Arena* arena, SimpleRoom&& from) noexcept
      : SimpleRoom(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHeightFieldNumber = 1,
    kWidthFieldNumber = 2,
    kDepthFieldNumber = 3,
  };
  // float height = 1;
  bool has_height() const;
  void clear_height() ;
  float height() const;
  void set_height(float value);

  private:
  float _internal_height() const;
  void _internal_set_height(float value);

  public:
  // float width = 2;
  bool has_width() const;
  void clear_width() ;
  float width() const;
  void set_width(float value);

  private:
  float _internal_width() const;
  void _internal_set_width(float value);

  public:
  // float depth = 3;
  bool has_depth() const;
  void clear_depth() ;
  float depth() const;
  void set_depth(float value);

  private:
  float _internal_depth() const;
  void _internal_set_depth(float value);

  public:
  // @@protoc_insertion_point(class_scope:aim.SimpleRoom)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SimpleRoom& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    float height_;
    float width_;
    float depth_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_scenario_2eproto;
};
// -------------------------------------------------------------------

class ShotType final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:aim.ShotType) */ {
 public:
  inline ShotType() : ShotType(nullptr) {}
  ~ShotType() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ShotType* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ShotType));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ShotType(
      ::google::protobuf::internal::ConstantInitialized);

  inline ShotType(const ShotType& from) : ShotType(nullptr, from) {}
  inline ShotType(ShotType&& from) noexcept
      : ShotType(nullptr, std::move(from)) {}
  inline ShotType& operator=(const ShotType& from) {
    CopyFrom(from);
    return *this;
  }
  inline ShotType& operator=(ShotType&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ShotType& default_instance() {
    return *internal_default_instance();
  }
  enum TypeCase {
    kPoke = 1,
    kTrackingKill = 2,
    kTrackingInvincible = 3,
    kClickSingle = 4,
    TYPE_NOT_SET = 0,
  };
  static inline const ShotType* internal_default_instance() {
    return reinterpret_cast<const ShotType*>(
        &_ShotType_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(ShotType& a, ShotType& b) { a.Swap(&b); }
  inline void Swap(ShotType* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ShotType* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ShotType* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ShotType>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ShotType& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ShotType& from) { ShotType::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ShotType* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "aim.ShotType"; }

 protected:
  explicit ShotType(::google::protobuf::Arena* arena);
  ShotType(::google::protobuf::Arena* arena, const ShotType& from);
  ShotType(::google::protobuf::Arena* arena, ShotType&& from) noexcept
      : ShotType(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPokeKillTimeSecondsFieldNumber = 10,
    kNoPartialKillsFieldNumber = 11,
    kPokeFieldNumber = 1,
    kTrackingKillFieldNumber = 2,
    kTrackingInvincibleFieldNumber = 3,
    kClickSingleFieldNumber = 4,
  };
  // float poke_kill_time_seconds = 10;
  bool has_poke_kill_time_seconds() const;
  void clear_poke_kill_time_seconds() ;
  float poke_kill_time_seconds() const;
  void set_poke_kill_time_seconds(float value);

  private:
  float _internal_poke_kill_time_seconds() const;
  void _internal_set_poke_kill_time_seconds(float value);

  public:
  // bool no_partial_kills = 11;
  bool has_no_partial_kills() const;
  void clear_no_partial_kills() ;
  bool no_partial_kills() const;
  void set_no_partial_kills(bool value);

  private:
  bool _internal_no_partial_kills() const;
  void _internal_set_no_partial_kills(bool value);

  public:
  // bool poke = 1;
  bool has_poke() const;
  void clear_poke() ;
  bool poke() const;
  void set_poke(bool value);

  private:
  bool _internal_poke() const;
  void _internal_set_poke(bool value);

  public:
  // bool tracking_kill = 2;
  bool has_tracking_kill() const;
  void clear_tracking_kill() ;
  bool tracking_kill() const;
  void set_tracking_kill(bool value);

  private:
  bool _internal_tracking_kill() const;
  void _internal_set_tracking_kill(bool value);

  public:
  // bool tracking_invincible = 3;
  bool has_tracking_invincible() const;
  void clear_tracking_invincible() ;
  bool tracking_invincible() const;
  void set_tracking_invincible(bool value);

  private:
  bool _internal_tracking_invincible() const;
  void _internal_set_tracking_invincible(bool value);

  public:
  // bool click_single = 4;
  bool has_click_single() const;
  void clear_click_single() ;
  bool click_single() const;
  void set_click_single(bool value);

  private:
  bool _internal_click_single() const;
  void _internal_set_click_single(bool value);

  public:
  void clear_type();
  TypeCase type_case() const;
  // @@protoc_insertion_point(class_scope:aim.ShotType)
 private:
  class _Internal;
  void set_has_poke();
  void set_has_tracking_kill();
  void set_has_tracking_invincible();
  void set_has_click_single();
  inline bool has_type() const;
  inline void clear_has_type();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 6, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ShotType& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    float poke_kill_time_seconds_;
    bool no_partial_kills_;
    union TypeUnion {
      constexpr TypeUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      bool poke_;
      bool tracking_kill_;
      bool tracking_invincible_;
      bool click_single_;
    } type_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_scenario_2eproto;
};
// -------------------------------------------------------------------

class ScenarioReferenceOverrides final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:aim.ScenarioReferenceOverrides) */ {
 public:
  inline ScenarioReferenceOverrides() : ScenarioReferenceOverrides(nullptr) {}
  ~ScenarioReferenceOverrides() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ScenarioReferenceOverrides* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ScenarioReferenceOverrides));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ScenarioReferenceOverrides(
      ::google::protobuf::internal::ConstantInitialized);

  inline ScenarioReferenceOverrides(const ScenarioReferenceOverrides& from) : ScenarioReferenceOverrides(nullptr, from) {}
  inline ScenarioReferenceOverrides(ScenarioReferenceOverrides&& from) noexcept
      : ScenarioReferenceOverrides(nullptr, std::move(from)) {}
  inline ScenarioReferenceOverrides& operator=(const ScenarioReferenceOverrides& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScenarioReferenceOverrides& operator=(ScenarioReferenceOverrides&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScenarioReferenceOverrides& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScenarioReferenceOverrides* internal_default_instance() {
    return reinterpret_cast<const ScenarioReferenceOverrides*>(
        &_ScenarioReferenceOverrides_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(ScenarioReferenceOverrides& a, ScenarioReferenceOverrides& b) { a.Swap(&b); }
  inline void Swap(ScenarioReferenceOverrides* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScenarioReferenceOverrides* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScenarioReferenceOverrides* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ScenarioReferenceOverrides>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ScenarioReferenceOverrides& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ScenarioReferenceOverrides& from) { ScenarioReferenceOverrides::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ScenarioReferenceOverrides* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "aim.ScenarioReferenceOverrides"; }

 protected:
  explicit ScenarioReferenceOverrides(::google::protobuf::Arena* arena);
  ScenarioReferenceOverrides(::google::protobuf::Arena* arena, const ScenarioReferenceOverrides& from);
  ScenarioReferenceOverrides(::google::protobuf::Arena* arena, ScenarioReferenceOverrides&& from) noexcept
      : ScenarioReferenceOverrides(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDurationSecondsFieldNumber = 1,
    kTargetRadiusMultiplierFieldNumber = 2,
    kNumTargetsFieldNumber = 3,
    kSpeedMultiplierFieldNumber = 4,
  };
  // float duration_seconds = 1;
  bool has_duration_seconds() const;
  void clear_duration_seconds() ;
  float duration_seconds() const;
  void set_duration_seconds(float value);

  private:
  float _internal_duration_seconds() const;
  void _internal_set_duration_seconds(float value);

  public:
  // float target_radius_multiplier = 2;
  bool has_target_radius_multiplier() const;
  void clear_target_radius_multiplier() ;
  float target_radius_multiplier() const;
  void set_target_radius_multiplier(float value);

  private:
  float _internal_target_radius_multiplier() const;
  void _internal_set_target_radius_multiplier(float value);

  public:
  // int32 num_targets = 3;
  bool has_num_targets() const;
  void clear_num_targets() ;
  ::int32_t num_targets() const;
  void set_num_targets(::int32_t value);

  private:
  ::int32_t _internal_num_targets() const;
  void _internal_set_num_targets(::int32_t value);

  public:
  // float speed_multiplier = 4;
  bool has_speed_multiplier() const;
  void clear_speed_multiplier() ;
  float speed_multiplier() const;
  void set_speed_multiplier(float value);

  private:
  float _internal_speed_multiplier() const;
  void _internal_set_speed_multiplier(float value);

  public:
  // @@protoc_insertion_point(class_scope:aim.ScenarioReferenceOverrides)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ScenarioReferenceOverrides& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    float duration_seconds_;
    float target_radius_multiplier_;
    ::int32_t num_targets_;
    float speed_multiplier_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_scenario_2eproto;
};
// -------------------------------------------------------------------

class RegionLength final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:aim.RegionLength) */ {
 public:
  inline RegionLength() : RegionLength(nullptr) {}
  ~RegionLength() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RegionLength* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RegionLength));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RegionLength(
      ::google::protobuf::internal::ConstantInitialized);

  inline RegionLength(const RegionLength& from) : RegionLength(nullptr, from) {}
  inline RegionLength(RegionLength&& from) noexcept
      : RegionLength(nullptr, std::move(from)) {}
  inline RegionLength& operator=(const RegionLength& from) {
    CopyFrom(from);
    return *this;
  }
  inline RegionLength& operator=(RegionLength&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RegionLength& default_instance() {
    return *internal_default_instance();
  }
  enum TypeCase {
    kXPercentValue = 1,
    kYPercentValue = 2,
    kValue = 3,
    TYPE_NOT_SET = 0,
  };
  static inline const RegionLength* internal_default_instance() {
    return reinterpret_cast<const RegionLength*>(
        &_RegionLength_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(RegionLength& a, RegionLength& b) { a.Swap(&b); }
  inline void Swap(RegionLength* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RegionLength* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RegionLength* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RegionLength>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RegionLength& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RegionLength& from) { RegionLength::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RegionLength* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "aim.RegionLength"; }

 protected:
  explicit RegionLength(::google::protobuf::Arena* arena);
  RegionLength(::google::protobuf::Arena* arena, const RegionLength& from);
  RegionLength(::google::protobuf::Arena* arena, RegionLength&& from) noexcept
      : RegionLength(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXPercentValueFieldNumber = 1,
    kYPercentValueFieldNumber = 2,
    kValueFieldNumber = 3,
  };
  // float x_percent_value = 1;
  bool has_x_percent_value() const;
  void clear_x_percent_value() ;
  float x_percent_value() const;
  void set_x_percent_value(float value);

  private:
  float _internal_x_percent_value() const;
  void _internal_set_x_percent_value(float value);

  public:
  // float y_percent_value = 2;
  bool has_y_percent_value() const;
  void clear_y_percent_value() ;
  float y_percent_value() const;
  void set_y_percent_value(float value);

  private:
  float _internal_y_percent_value() const;
  void _internal_set_y_percent_value(float value);

  public:
  // float value = 3;
  bool has_value() const;
  void clear_value() ;
  float value() const;
  void set_value(float value);

  private:
  float _internal_value() const;
  void _internal_set_value(float value);

  public:
  void clear_type();
  TypeCase type_case() const;
  // @@protoc_insertion_point(class_scope:aim.RegionLength)
 private:
  class _Internal;
  void set_has_x_percent_value();
  void set_has_y_percent_value();
  void set_has_value();
  inline bool has_type() const;
  inline void clear_has_type();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RegionLength& from_msg);
    union TypeUnion {
      constexpr TypeUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      float x_percent_value_;
      float y_percent_value_;
      float value_;
    } type_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_scenario_2eproto;
};
// -------------------------------------------------------------------

class CylinderRoom final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:aim.CylinderRoom) */ {
 public:
  inline CylinderRoom() : CylinderRoom(nullptr) {}
  ~CylinderRoom() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CylinderRoom* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CylinderRoom));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CylinderRoom(
      ::google::protobuf::internal::ConstantInitialized);

  inline CylinderRoom(const CylinderRoom& from) : CylinderRoom(nullptr, from) {}
  inline CylinderRoom(CylinderRoom&& from) noexcept
      : CylinderRoom(nullptr, std::move(from)) {}
  inline CylinderRoom& operator=(const CylinderRoom& from) {
    CopyFrom(from);
    return *this;
  }
  inline CylinderRoom& operator=(CylinderRoom&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CylinderRoom& default_instance() {
    return *internal_default_instance();
  }
  static inline const CylinderRoom* internal_default_instance() {
    return reinterpret_cast<const CylinderRoom*>(
        &_CylinderRoom_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(CylinderRoom& a, CylinderRoom& b) { a.Swap(&b); }
  inline void Swap(CylinderRoom* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CylinderRoom* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CylinderRoom* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CylinderRoom>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CylinderRoom& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CylinderRoom& from) { CylinderRoom::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CylinderRoom* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "aim.CylinderRoom"; }

 protected:
  explicit CylinderRoom(::google::protobuf::Arena* arena);
  CylinderRoom(::google::protobuf::Arena* arena, const CylinderRoom& from);
  CylinderRoom(::google::protobuf::Arena* arena, CylinderRoom&& from) noexcept
      : CylinderRoom(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHeightFieldNumber = 1,
    kRadiusFieldNumber = 2,
    kWidthFieldNumber = 3,
    kHideSidesFieldNumber = 4,
    kSideAngleDegreesFieldNumber = 5,
  };
  // float height = 1;
  bool has_height() const;
  void clear_height() ;
  float height() const;
  void set_height(float value);

  private:
  float _internal_height() const;
  void _internal_set_height(float value);

  public:
  // float radius = 2;
  bool has_radius() const;
  void clear_radius() ;
  float radius() const;
  void set_radius(float value);

  private:
  float _internal_radius() const;
  void _internal_set_radius(float value);

  public:
  // float width = 3;
  bool has_width() const;
  void clear_width() ;
  float width() const;
  void set_width(float value);

  private:
  float _internal_width() const;
  void _internal_set_width(float value);

  public:
  // bool hide_sides = 4;
  bool has_hide_sides() const;
  void clear_hide_sides() ;
  bool hide_sides() const;
  void set_hide_sides(bool value);

  private:
  bool _internal_hide_sides() const;
  void _internal_set_hide_sides(bool value);

  public:
  // float side_angle_degrees = 5;
  bool has_side_angle_degrees() const;
  void clear_side_angle_degrees() ;
  float side_angle_degrees() const;
  void set_side_angle_degrees(float value);

  private:
  float _internal_side_angle_degrees() const;
  void _internal_set_side_angle_degrees(float value);

  public:
  // @@protoc_insertion_point(class_scope:aim.CylinderRoom)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CylinderRoom& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    float height_;
    float radius_;
    float width_;
    bool hide_sides_;
    float side_angle_degrees_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_scenario_2eproto;
};
// -------------------------------------------------------------------

class BarrelRoom final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:aim.BarrelRoom) */ {
 public:
  inline BarrelRoom() : BarrelRoom(nullptr) {}
  ~BarrelRoom() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BarrelRoom* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BarrelRoom));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BarrelRoom(
      ::google::protobuf::internal::ConstantInitialized);

  inline BarrelRoom(const BarrelRoom& from) : BarrelRoom(nullptr, from) {}
  inline BarrelRoom(BarrelRoom&& from) noexcept
      : BarrelRoom(nullptr, std::move(from)) {}
  inline BarrelRoom& operator=(const BarrelRoom& from) {
    CopyFrom(from);
    return *this;
  }
  inline BarrelRoom& operator=(BarrelRoom&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BarrelRoom& default_instance() {
    return *internal_default_instance();
  }
  static inline const BarrelRoom* internal_default_instance() {
    return reinterpret_cast<const BarrelRoom*>(
        &_BarrelRoom_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(BarrelRoom& a, BarrelRoom& b) { a.Swap(&b); }
  inline void Swap(BarrelRoom* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BarrelRoom* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BarrelRoom* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BarrelRoom>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BarrelRoom& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BarrelRoom& from) { BarrelRoom::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BarrelRoom* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "aim.BarrelRoom"; }

 protected:
  explicit BarrelRoom(::google::protobuf::Arena* arena);
  BarrelRoom(::google::protobuf::Arena* arena, const BarrelRoom& from);
  BarrelRoom(::google::protobuf::Arena* arena, BarrelRoom&& from) noexcept
      : BarrelRoom(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRadiusFieldNumber = 1,
  };
  // float radius = 1;
  bool has_radius() const;
  void clear_radius() ;
  float radius() const;
  void set_radius(float value);

  private:
  float _internal_radius() const;
  void _internal_set_radius(float value);

  public:
  // @@protoc_insertion_point(class_scope:aim.BarrelRoom)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BarrelRoom& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    float radius_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_scenario_2eproto;
};
// -------------------------------------------------------------------

class Room final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:aim.Room) */ {
 public:
  inline Room() : Room(nullptr) {}
  ~Room() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Room* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Room));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Room(
      ::google::protobuf::internal::ConstantInitialized);

  inline Room(const Room& from) : Room(nullptr, from) {}
  inline Room(Room&& from) noexcept
      : Room(nullptr, std::move(from)) {}
  inline Room& operator=(const Room& from) {
    CopyFrom(from);
    return *this;
  }
  inline Room& operator=(Room&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Room& default_instance() {
    return *internal_default_instance();
  }
  enum TypeCase {
    kSimpleRoom = 4,
    kCylinderRoom = 5,
    kBarrelRoom = 6,
    TYPE_NOT_SET = 0,
  };
  static inline const Room* internal_default_instance() {
    return reinterpret_cast<const Room*>(
        &_Room_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(Room& a, Room& b) { a.Swap(&b); }
  inline void Swap(Room* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Room* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Room* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Room>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Room& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Room& from) { Room::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Room* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "aim.Room"; }

 protected:
  explicit Room(::google::protobuf::Arena* arena);
  Room(::google::protobuf::Arena* arena, const Room& from);
  Room(::google::protobuf::Arena* arena, Room&& from) noexcept
      : Room(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCameraPositionFieldNumber = 1,
    kStartPitchFieldNumber = 2,
    kStartYawFieldNumber = 3,
    kSimpleRoomFieldNumber = 4,
    kCylinderRoomFieldNumber = 5,
    kBarrelRoomFieldNumber = 6,
  };
  // .aim.StoredVec3 camera_position = 1;
  bool has_camera_position() const;
  void clear_camera_position() ;
  const ::aim::StoredVec3& camera_position() const;
  PROTOBUF_NODISCARD ::aim::StoredVec3* release_camera_position();
  ::aim::StoredVec3* mutable_camera_position();
  void set_allocated_camera_position(::aim::StoredVec3* value);
  void unsafe_arena_set_allocated_camera_position(::aim::StoredVec3* value);
  ::aim::StoredVec3* unsafe_arena_release_camera_position();

  private:
  const ::aim::StoredVec3& _internal_camera_position() const;
  ::aim::StoredVec3* _internal_mutable_camera_position();

  public:
  // float start_pitch = 2;
  bool has_start_pitch() const;
  void clear_start_pitch() ;
  float start_pitch() const;
  void set_start_pitch(float value);

  private:
  float _internal_start_pitch() const;
  void _internal_set_start_pitch(float value);

  public:
  // float start_yaw = 3;
  bool has_start_yaw() const;
  void clear_start_yaw() ;
  float start_yaw() const;
  void set_start_yaw(float value);

  private:
  float _internal_start_yaw() const;
  void _internal_set_start_yaw(float value);

  public:
  // .aim.SimpleRoom simple_room = 4;
  bool has_simple_room() const;
  private:
  bool _internal_has_simple_room() const;

  public:
  void clear_simple_room() ;
  const ::aim::SimpleRoom& simple_room() const;
  PROTOBUF_NODISCARD ::aim::SimpleRoom* release_simple_room();
  ::aim::SimpleRoom* mutable_simple_room();
  void set_allocated_simple_room(::aim::SimpleRoom* value);
  void unsafe_arena_set_allocated_simple_room(::aim::SimpleRoom* value);
  ::aim::SimpleRoom* unsafe_arena_release_simple_room();

  private:
  const ::aim::SimpleRoom& _internal_simple_room() const;
  ::aim::SimpleRoom* _internal_mutable_simple_room();

  public:
  // .aim.CylinderRoom cylinder_room = 5;
  bool has_cylinder_room() const;
  private:
  bool _internal_has_cylinder_room() const;

  public:
  void clear_cylinder_room() ;
  const ::aim::CylinderRoom& cylinder_room() const;
  PROTOBUF_NODISCARD ::aim::CylinderRoom* release_cylinder_room();
  ::aim::CylinderRoom* mutable_cylinder_room();
  void set_allocated_cylinder_room(::aim::CylinderRoom* value);
  void unsafe_arena_set_allocated_cylinder_room(::aim::CylinderRoom* value);
  ::aim::CylinderRoom* unsafe_arena_release_cylinder_room();

  private:
  const ::aim::CylinderRoom& _internal_cylinder_room() const;
  ::aim::CylinderRoom* _internal_mutable_cylinder_room();

  public:
  // .aim.BarrelRoom barrel_room = 6;
  bool has_barrel_room() const;
  private:
  bool _internal_has_barrel_room() const;

  public:
  void clear_barrel_room() ;
  const ::aim::BarrelRoom& barrel_room() const;
  PROTOBUF_NODISCARD ::aim::BarrelRoom* release_barrel_room();
  ::aim::BarrelRoom* mutable_barrel_room();
  void set_allocated_barrel_room(::aim::BarrelRoom* value);
  void unsafe_arena_set_allocated_barrel_room(::aim::BarrelRoom* value);
  ::aim::BarrelRoom* unsafe_arena_release_barrel_room();

  private:
  const ::aim::BarrelRoom& _internal_barrel_room() const;
  ::aim::BarrelRoom* _internal_mutable_barrel_room();

  public:
  void clear_type();
  TypeCase type_case() const;
  // @@protoc_insertion_point(class_scope:aim.Room)
 private:
  class _Internal;
  void set_has_simple_room();
  void set_has_cylinder_room();
  void set_has_barrel_room();
  inline bool has_type() const;
  inline void clear_has_type();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 6, 4,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Room& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::aim::StoredVec3* camera_position_;
    float start_pitch_;
    float start_yaw_;
    union TypeUnion {
      constexpr TypeUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::aim::SimpleRoom* simple_room_;
      ::aim::CylinderRoom* cylinder_room_;
      ::aim::BarrelRoom* barrel_room_;
    } type_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_scenario_2eproto;
};
// -------------------------------------------------------------------

class RegionVec3 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:aim.RegionVec3) */ {
 public:
  inline RegionVec3() : RegionVec3(nullptr) {}
  ~RegionVec3() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RegionVec3* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RegionVec3));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RegionVec3(
      ::google::protobuf::internal::ConstantInitialized);

  inline RegionVec3(const RegionVec3& from) : RegionVec3(nullptr, from) {}
  inline RegionVec3(RegionVec3&& from) noexcept
      : RegionVec3(nullptr, std::move(from)) {}
  inline RegionVec3& operator=(const RegionVec3& from) {
    CopyFrom(from);
    return *this;
  }
  inline RegionVec3& operator=(RegionVec3&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RegionVec3& default_instance() {
    return *internal_default_instance();
  }
  static inline const RegionVec3* internal_default_instance() {
    return reinterpret_cast<const RegionVec3*>(
        &_RegionVec3_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(RegionVec3& a, RegionVec3& b) { a.Swap(&b); }
  inline void Swap(RegionVec3* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RegionVec3* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RegionVec3* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RegionVec3>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RegionVec3& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RegionVec3& from) { RegionVec3::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RegionVec3* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "aim.RegionVec3"; }

 protected:
  explicit RegionVec3(::google::protobuf::Arena* arena);
  RegionVec3(::google::protobuf::Arena* arena, const RegionVec3& from);
  RegionVec3(::google::protobuf::Arena* arena, RegionVec3&& from) noexcept
      : RegionVec3(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
  };
  // .aim.RegionLength x = 1;
  bool has_x() const;
  void clear_x() ;
  const ::aim::RegionLength& x() const;
  PROTOBUF_NODISCARD ::aim::RegionLength* release_x();
  ::aim::RegionLength* mutable_x();
  void set_allocated_x(::aim::RegionLength* value);
  void unsafe_arena_set_allocated_x(::aim::RegionLength* value);
  ::aim::RegionLength* unsafe_arena_release_x();

  private:
  const ::aim::RegionLength& _internal_x() const;
  ::aim::RegionLength* _internal_mutable_x();

  public:
  // .aim.RegionLength y = 2;
  bool has_y() const;
  void clear_y() ;
  const ::aim::RegionLength& y() const;
  PROTOBUF_NODISCARD ::aim::RegionLength* release_y();
  ::aim::RegionLength* mutable_y();
  void set_allocated_y(::aim::RegionLength* value);
  void unsafe_arena_set_allocated_y(::aim::RegionLength* value);
  ::aim::RegionLength* unsafe_arena_release_y();

  private:
  const ::aim::RegionLength& _internal_y() const;
  ::aim::RegionLength* _internal_mutable_y();

  public:
  // .aim.RegionLength z = 3;
  bool has_z() const;
  void clear_z() ;
  const ::aim::RegionLength& z() const;
  PROTOBUF_NODISCARD ::aim::RegionLength* release_z();
  ::aim::RegionLength* mutable_z();
  void set_allocated_z(::aim::RegionLength* value);
  void unsafe_arena_set_allocated_z(::aim::RegionLength* value);
  ::aim::RegionLength* unsafe_arena_release_z();

  private:
  const ::aim::RegionLength& _internal_z() const;
  ::aim::RegionLength* _internal_mutable_z();

  public:
  // @@protoc_insertion_point(class_scope:aim.RegionVec3)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 3,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RegionVec3& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::aim::RegionLength* x_;
    ::aim::RegionLength* y_;
    ::aim::RegionLength* z_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_scenario_2eproto;
};
// -------------------------------------------------------------------

class RegionVec2 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:aim.RegionVec2) */ {
 public:
  inline RegionVec2() : RegionVec2(nullptr) {}
  ~RegionVec2() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RegionVec2* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RegionVec2));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RegionVec2(
      ::google::protobuf::internal::ConstantInitialized);

  inline RegionVec2(const RegionVec2& from) : RegionVec2(nullptr, from) {}
  inline RegionVec2(RegionVec2&& from) noexcept
      : RegionVec2(nullptr, std::move(from)) {}
  inline RegionVec2& operator=(const RegionVec2& from) {
    CopyFrom(from);
    return *this;
  }
  inline RegionVec2& operator=(RegionVec2&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RegionVec2& default_instance() {
    return *internal_default_instance();
  }
  static inline const RegionVec2* internal_default_instance() {
    return reinterpret_cast<const RegionVec2*>(
        &_RegionVec2_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(RegionVec2& a, RegionVec2& b) { a.Swap(&b); }
  inline void Swap(RegionVec2* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RegionVec2* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RegionVec2* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RegionVec2>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RegionVec2& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RegionVec2& from) { RegionVec2::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RegionVec2* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "aim.RegionVec2"; }

 protected:
  explicit RegionVec2(::google::protobuf::Arena* arena);
  RegionVec2(::google::protobuf::Arena* arena, const RegionVec2& from);
  RegionVec2(::google::protobuf::Arena* arena, RegionVec2&& from) noexcept
      : RegionVec2(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
  };
  // .aim.RegionLength x = 1;
  bool has_x() const;
  void clear_x() ;
  const ::aim::RegionLength& x() const;
  PROTOBUF_NODISCARD ::aim::RegionLength* release_x();
  ::aim::RegionLength* mutable_x();
  void set_allocated_x(::aim::RegionLength* value);
  void unsafe_arena_set_allocated_x(::aim::RegionLength* value);
  ::aim::RegionLength* unsafe_arena_release_x();

  private:
  const ::aim::RegionLength& _internal_x() const;
  ::aim::RegionLength* _internal_mutable_x();

  public:
  // .aim.RegionLength y = 2;
  bool has_y() const;
  void clear_y() ;
  const ::aim::RegionLength& y() const;
  PROTOBUF_NODISCARD ::aim::RegionLength* release_y();
  ::aim::RegionLength* mutable_y();
  void set_allocated_y(::aim::RegionLength* value);
  void unsafe_arena_set_allocated_y(::aim::RegionLength* value);
  ::aim::RegionLength* unsafe_arena_release_y();

  private:
  const ::aim::RegionLength& _internal_y() const;
  ::aim::RegionLength* _internal_mutable_y();

  public:
  // @@protoc_insertion_point(class_scope:aim.RegionVec2)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RegionVec2& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::aim::RegionLength* x_;
    ::aim::RegionLength* y_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_scenario_2eproto;
};
// -------------------------------------------------------------------

class RectangleTargetRegion final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:aim.RectangleTargetRegion) */ {
 public:
  inline RectangleTargetRegion() : RectangleTargetRegion(nullptr) {}
  ~RectangleTargetRegion() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RectangleTargetRegion* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RectangleTargetRegion));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RectangleTargetRegion(
      ::google::protobuf::internal::ConstantInitialized);

  inline RectangleTargetRegion(const RectangleTargetRegion& from) : RectangleTargetRegion(nullptr, from) {}
  inline RectangleTargetRegion(RectangleTargetRegion&& from) noexcept
      : RectangleTargetRegion(nullptr, std::move(from)) {}
  inline RectangleTargetRegion& operator=(const RectangleTargetRegion& from) {
    CopyFrom(from);
    return *this;
  }
  inline RectangleTargetRegion& operator=(RectangleTargetRegion&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RectangleTargetRegion& default_instance() {
    return *internal_default_instance();
  }
  static inline const RectangleTargetRegion* internal_default_instance() {
    return reinterpret_cast<const RectangleTargetRegion*>(
        &_RectangleTargetRegion_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(RectangleTargetRegion& a, RectangleTargetRegion& b) { a.Swap(&b); }
  inline void Swap(RectangleTargetRegion* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RectangleTargetRegion* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RectangleTargetRegion* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RectangleTargetRegion>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RectangleTargetRegion& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RectangleTargetRegion& from) { RectangleTargetRegion::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RectangleTargetRegion* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "aim.RectangleTargetRegion"; }

 protected:
  explicit RectangleTargetRegion(::google::protobuf::Arena* arena);
  RectangleTargetRegion(::google::protobuf::Arena* arena, const RectangleTargetRegion& from);
  RectangleTargetRegion(::google::protobuf::Arena* arena, RectangleTargetRegion&& from) noexcept
      : RectangleTargetRegion(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXLengthFieldNumber = 1,
    kYLengthFieldNumber = 2,
    kInnerXLengthFieldNumber = 3,
    kInnerYLengthFieldNumber = 4,
  };
  // .aim.RegionLength x_length = 1;
  bool has_x_length() const;
  void clear_x_length() ;
  const ::aim::RegionLength& x_length() const;
  PROTOBUF_NODISCARD ::aim::RegionLength* release_x_length();
  ::aim::RegionLength* mutable_x_length();
  void set_allocated_x_length(::aim::RegionLength* value);
  void unsafe_arena_set_allocated_x_length(::aim::RegionLength* value);
  ::aim::RegionLength* unsafe_arena_release_x_length();

  private:
  const ::aim::RegionLength& _internal_x_length() const;
  ::aim::RegionLength* _internal_mutable_x_length();

  public:
  // .aim.RegionLength y_length = 2;
  bool has_y_length() const;
  void clear_y_length() ;
  const ::aim::RegionLength& y_length() const;
  PROTOBUF_NODISCARD ::aim::RegionLength* release_y_length();
  ::aim::RegionLength* mutable_y_length();
  void set_allocated_y_length(::aim::RegionLength* value);
  void unsafe_arena_set_allocated_y_length(::aim::RegionLength* value);
  ::aim::RegionLength* unsafe_arena_release_y_length();

  private:
  const ::aim::RegionLength& _internal_y_length() const;
  ::aim::RegionLength* _internal_mutable_y_length();

  public:
  // .aim.RegionLength inner_x_length = 3;
  bool has_inner_x_length() const;
  void clear_inner_x_length() ;
  const ::aim::RegionLength& inner_x_length() const;
  PROTOBUF_NODISCARD ::aim::RegionLength* release_inner_x_length();
  ::aim::RegionLength* mutable_inner_x_length();
  void set_allocated_inner_x_length(::aim::RegionLength* value);
  void unsafe_arena_set_allocated_inner_x_length(::aim::RegionLength* value);
  ::aim::RegionLength* unsafe_arena_release_inner_x_length();

  private:
  const ::aim::RegionLength& _internal_inner_x_length() const;
  ::aim::RegionLength* _internal_mutable_inner_x_length();

  public:
  // .aim.RegionLength inner_y_length = 4;
  bool has_inner_y_length() const;
  void clear_inner_y_length() ;
  const ::aim::RegionLength& inner_y_length() const;
  PROTOBUF_NODISCARD ::aim::RegionLength* release_inner_y_length();
  ::aim::RegionLength* mutable_inner_y_length();
  void set_allocated_inner_y_length(::aim::RegionLength* value);
  void unsafe_arena_set_allocated_inner_y_length(::aim::RegionLength* value);
  ::aim::RegionLength* unsafe_arena_release_inner_y_length();

  private:
  const ::aim::RegionLength& _internal_inner_y_length() const;
  ::aim::RegionLength* _internal_mutable_inner_y_length();

  public:
  // @@protoc_insertion_point(class_scope:aim.RectangleTargetRegion)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 4,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RectangleTargetRegion& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::aim::RegionLength* x_length_;
    ::aim::RegionLength* y_length_;
    ::aim::RegionLength* inner_x_length_;
    ::aim::RegionLength* inner_y_length_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_scenario_2eproto;
};
// -------------------------------------------------------------------

class PillTargetDef final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:aim.PillTargetDef) */ {
 public:
  inline PillTargetDef() : PillTargetDef(nullptr) {}
  ~PillTargetDef() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PillTargetDef* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PillTargetDef));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PillTargetDef(
      ::google::protobuf::internal::ConstantInitialized);

  inline PillTargetDef(const PillTargetDef& from) : PillTargetDef(nullptr, from) {}
  inline PillTargetDef(PillTargetDef&& from) noexcept
      : PillTargetDef(nullptr, std::move(from)) {}
  inline PillTargetDef& operator=(const PillTargetDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline PillTargetDef& operator=(PillTargetDef&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PillTargetDef& default_instance() {
    return *internal_default_instance();
  }
  static inline const PillTargetDef* internal_default_instance() {
    return reinterpret_cast<const PillTargetDef*>(
        &_PillTargetDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(PillTargetDef& a, PillTargetDef& b) { a.Swap(&b); }
  inline void Swap(PillTargetDef* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PillTargetDef* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PillTargetDef* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PillTargetDef>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PillTargetDef& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PillTargetDef& from) { PillTargetDef::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PillTargetDef* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "aim.PillTargetDef"; }

 protected:
  explicit PillTargetDef(::google::protobuf::Arena* arena);
  PillTargetDef(::google::protobuf::Arena* arena, const PillTargetDef& from);
  PillTargetDef(::google::protobuf::Arena* arena, PillTargetDef&& from) noexcept
      : PillTargetDef(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUpFieldNumber = 2,
    kWallUpFieldNumber = 3,
    kHeightFieldNumber = 1,
  };
  // .aim.StoredVec3 up = 2;
  bool has_up() const;
  void clear_up() ;
  const ::aim::StoredVec3& up() const;
  PROTOBUF_NODISCARD ::aim::StoredVec3* release_up();
  ::aim::StoredVec3* mutable_up();
  void set_allocated_up(::aim::StoredVec3* value);
  void unsafe_arena_set_allocated_up(::aim::StoredVec3* value);
  ::aim::StoredVec3* unsafe_arena_release_up();

  private:
  const ::aim::StoredVec3& _internal_up() const;
  ::aim::StoredVec3* _internal_mutable_up();

  public:
  // .aim.StoredVec2 wall_up = 3;
  bool has_wall_up() const;
  void clear_wall_up() ;
  const ::aim::StoredVec2& wall_up() const;
  PROTOBUF_NODISCARD ::aim::StoredVec2* release_wall_up();
  ::aim::StoredVec2* mutable_wall_up();
  void set_allocated_wall_up(::aim::StoredVec2* value);
  void unsafe_arena_set_allocated_wall_up(::aim::StoredVec2* value);
  ::aim::StoredVec2* unsafe_arena_release_wall_up();

  private:
  const ::aim::StoredVec2& _internal_wall_up() const;
  ::aim::StoredVec2* _internal_mutable_wall_up();

  public:
  // float height = 1;
  bool has_height() const;
  void clear_height() ;
  float height() const;
  void set_height(float value);

  private:
  float _internal_height() const;
  void _internal_set_height(float value);

  public:
  // @@protoc_insertion_point(class_scope:aim.PillTargetDef)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PillTargetDef& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::aim::StoredVec3* up_;
    ::aim::StoredVec2* wall_up_;
    float height_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_scenario_2eproto;
};
// -------------------------------------------------------------------

class EllipseTargetRegion final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:aim.EllipseTargetRegion) */ {
 public:
  inline EllipseTargetRegion() : EllipseTargetRegion(nullptr) {}
  ~EllipseTargetRegion() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EllipseTargetRegion* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EllipseTargetRegion));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EllipseTargetRegion(
      ::google::protobuf::internal::ConstantInitialized);

  inline EllipseTargetRegion(const EllipseTargetRegion& from) : EllipseTargetRegion(nullptr, from) {}
  inline EllipseTargetRegion(EllipseTargetRegion&& from) noexcept
      : EllipseTargetRegion(nullptr, std::move(from)) {}
  inline EllipseTargetRegion& operator=(const EllipseTargetRegion& from) {
    CopyFrom(from);
    return *this;
  }
  inline EllipseTargetRegion& operator=(EllipseTargetRegion&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EllipseTargetRegion& default_instance() {
    return *internal_default_instance();
  }
  static inline const EllipseTargetRegion* internal_default_instance() {
    return reinterpret_cast<const EllipseTargetRegion*>(
        &_EllipseTargetRegion_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(EllipseTargetRegion& a, EllipseTargetRegion& b) { a.Swap(&b); }
  inline void Swap(EllipseTargetRegion* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EllipseTargetRegion* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EllipseTargetRegion* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EllipseTargetRegion>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EllipseTargetRegion& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EllipseTargetRegion& from) { EllipseTargetRegion::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EllipseTargetRegion* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "aim.EllipseTargetRegion"; }

 protected:
  explicit EllipseTargetRegion(::google::protobuf::Arena* arena);
  EllipseTargetRegion(::google::protobuf::Arena* arena, const EllipseTargetRegion& from);
  EllipseTargetRegion(::google::protobuf::Arena* arena, EllipseTargetRegion&& from) noexcept
      : EllipseTargetRegion(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXDiameterFieldNumber = 1,
    kYDiameterFieldNumber = 2,
  };
  // .aim.RegionLength x_diameter = 1;
  bool has_x_diameter() const;
  void clear_x_diameter() ;
  const ::aim::RegionLength& x_diameter() const;
  PROTOBUF_NODISCARD ::aim::RegionLength* release_x_diameter();
  ::aim::RegionLength* mutable_x_diameter();
  void set_allocated_x_diameter(::aim::RegionLength* value);
  void unsafe_arena_set_allocated_x_diameter(::aim::RegionLength* value);
  ::aim::RegionLength* unsafe_arena_release_x_diameter();

  private:
  const ::aim::RegionLength& _internal_x_diameter() const;
  ::aim::RegionLength* _internal_mutable_x_diameter();

  public:
  // .aim.RegionLength y_diameter = 2;
  bool has_y_diameter() const;
  void clear_y_diameter() ;
  const ::aim::RegionLength& y_diameter() const;
  PROTOBUF_NODISCARD ::aim::RegionLength* release_y_diameter();
  ::aim::RegionLength* mutable_y_diameter();
  void set_allocated_y_diameter(::aim::RegionLength* value);
  void unsafe_arena_set_allocated_y_diameter(::aim::RegionLength* value);
  ::aim::RegionLength* unsafe_arena_release_y_diameter();

  private:
  const ::aim::RegionLength& _internal_y_diameter() const;
  ::aim::RegionLength* _internal_mutable_y_diameter();

  public:
  // @@protoc_insertion_point(class_scope:aim.EllipseTargetRegion)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EllipseTargetRegion& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::aim::RegionLength* x_diameter_;
    ::aim::RegionLength* y_diameter_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_scenario_2eproto;
};
// -------------------------------------------------------------------

class CircleTargetRegion final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:aim.CircleTargetRegion) */ {
 public:
  inline CircleTargetRegion() : CircleTargetRegion(nullptr) {}
  ~CircleTargetRegion() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CircleTargetRegion* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CircleTargetRegion));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CircleTargetRegion(
      ::google::protobuf::internal::ConstantInitialized);

  inline CircleTargetRegion(const CircleTargetRegion& from) : CircleTargetRegion(nullptr, from) {}
  inline CircleTargetRegion(CircleTargetRegion&& from) noexcept
      : CircleTargetRegion(nullptr, std::move(from)) {}
  inline CircleTargetRegion& operator=(const CircleTargetRegion& from) {
    CopyFrom(from);
    return *this;
  }
  inline CircleTargetRegion& operator=(CircleTargetRegion&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CircleTargetRegion& default_instance() {
    return *internal_default_instance();
  }
  static inline const CircleTargetRegion* internal_default_instance() {
    return reinterpret_cast<const CircleTargetRegion*>(
        &_CircleTargetRegion_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(CircleTargetRegion& a, CircleTargetRegion& b) { a.Swap(&b); }
  inline void Swap(CircleTargetRegion* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CircleTargetRegion* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CircleTargetRegion* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CircleTargetRegion>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CircleTargetRegion& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CircleTargetRegion& from) { CircleTargetRegion::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CircleTargetRegion* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "aim.CircleTargetRegion"; }

 protected:
  explicit CircleTargetRegion(::google::protobuf::Arena* arena);
  CircleTargetRegion(::google::protobuf::Arena* arena, const CircleTargetRegion& from);
  CircleTargetRegion(::google::protobuf::Arena* arena, CircleTargetRegion&& from) noexcept
      : CircleTargetRegion(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDiameterFieldNumber = 1,
    kInnerDiameterFieldNumber = 2,
  };
  // .aim.RegionLength diameter = 1;
  bool has_diameter() const;
  void clear_diameter() ;
  const ::aim::RegionLength& diameter() const;
  PROTOBUF_NODISCARD ::aim::RegionLength* release_diameter();
  ::aim::RegionLength* mutable_diameter();
  void set_allocated_diameter(::aim::RegionLength* value);
  void unsafe_arena_set_allocated_diameter(::aim::RegionLength* value);
  ::aim::RegionLength* unsafe_arena_release_diameter();

  private:
  const ::aim::RegionLength& _internal_diameter() const;
  ::aim::RegionLength* _internal_mutable_diameter();

  public:
  // .aim.RegionLength inner_diameter = 2;
  bool has_inner_diameter() const;
  void clear_inner_diameter() ;
  const ::aim::RegionLength& inner_diameter() const;
  PROTOBUF_NODISCARD ::aim::RegionLength* release_inner_diameter();
  ::aim::RegionLength* mutable_inner_diameter();
  void set_allocated_inner_diameter(::aim::RegionLength* value);
  void unsafe_arena_set_allocated_inner_diameter(::aim::RegionLength* value);
  ::aim::RegionLength* unsafe_arena_release_inner_diameter();

  private:
  const ::aim::RegionLength& _internal_inner_diameter() const;
  ::aim::RegionLength* _internal_mutable_inner_diameter();

  public:
  // @@protoc_insertion_point(class_scope:aim.CircleTargetRegion)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CircleTargetRegion& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::aim::RegionLength* diameter_;
    ::aim::RegionLength* inner_diameter_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_scenario_2eproto;
};
// -------------------------------------------------------------------

class TargetRegion final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:aim.TargetRegion) */ {
 public:
  inline TargetRegion() : TargetRegion(nullptr) {}
  ~TargetRegion() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TargetRegion* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TargetRegion));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TargetRegion(
      ::google::protobuf::internal::ConstantInitialized);

  inline TargetRegion(const TargetRegion& from) : TargetRegion(nullptr, from) {}
  inline TargetRegion(TargetRegion&& from) noexcept
      : TargetRegion(nullptr, std::move(from)) {}
  inline TargetRegion& operator=(const TargetRegion& from) {
    CopyFrom(from);
    return *this;
  }
  inline TargetRegion& operator=(TargetRegion&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TargetRegion& default_instance() {
    return *internal_default_instance();
  }
  enum TypeCase {
    kRectangle = 4,
    kEllipse = 5,
    kCircle = 6,
    TYPE_NOT_SET = 0,
  };
  static inline const TargetRegion* internal_default_instance() {
    return reinterpret_cast<const TargetRegion*>(
        &_TargetRegion_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(TargetRegion& a, TargetRegion& b) { a.Swap(&b); }
  inline void Swap(TargetRegion* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TargetRegion* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TargetRegion* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TargetRegion>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TargetRegion& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TargetRegion& from) { TargetRegion::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TargetRegion* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "aim.TargetRegion"; }

 protected:
  explicit TargetRegion(::google::protobuf::Arena* arena);
  TargetRegion(::google::protobuf::Arena* arena, const TargetRegion& from);
  TargetRegion(::google::protobuf::Arena* arena, TargetRegion&& from) noexcept
      : TargetRegion(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXOffsetFieldNumber = 2,
    kYOffsetFieldNumber = 3,
    kPercentChanceFieldNumber = 1,
    kRectangleFieldNumber = 4,
    kEllipseFieldNumber = 5,
    kCircleFieldNumber = 6,
  };
  // .aim.RegionLength x_offset = 2;
  bool has_x_offset() const;
  void clear_x_offset() ;
  const ::aim::RegionLength& x_offset() const;
  PROTOBUF_NODISCARD ::aim::RegionLength* release_x_offset();
  ::aim::RegionLength* mutable_x_offset();
  void set_allocated_x_offset(::aim::RegionLength* value);
  void unsafe_arena_set_allocated_x_offset(::aim::RegionLength* value);
  ::aim::RegionLength* unsafe_arena_release_x_offset();

  private:
  const ::aim::RegionLength& _internal_x_offset() const;
  ::aim::RegionLength* _internal_mutable_x_offset();

  public:
  // .aim.RegionLength y_offset = 3;
  bool has_y_offset() const;
  void clear_y_offset() ;
  const ::aim::RegionLength& y_offset() const;
  PROTOBUF_NODISCARD ::aim::RegionLength* release_y_offset();
  ::aim::RegionLength* mutable_y_offset();
  void set_allocated_y_offset(::aim::RegionLength* value);
  void unsafe_arena_set_allocated_y_offset(::aim::RegionLength* value);
  ::aim::RegionLength* unsafe_arena_release_y_offset();

  private:
  const ::aim::RegionLength& _internal_y_offset() const;
  ::aim::RegionLength* _internal_mutable_y_offset();

  public:
  // float percent_chance = 1;
  bool has_percent_chance() const;
  void clear_percent_chance() ;
  float percent_chance() const;
  void set_percent_chance(float value);

  private:
  float _internal_percent_chance() const;
  void _internal_set_percent_chance(float value);

  public:
  // .aim.RectangleTargetRegion rectangle = 4;
  bool has_rectangle() const;
  private:
  bool _internal_has_rectangle() const;

  public:
  void clear_rectangle() ;
  const ::aim::RectangleTargetRegion& rectangle() const;
  PROTOBUF_NODISCARD ::aim::RectangleTargetRegion* release_rectangle();
  ::aim::RectangleTargetRegion* mutable_rectangle();
  void set_allocated_rectangle(::aim::RectangleTargetRegion* value);
  void unsafe_arena_set_allocated_rectangle(::aim::RectangleTargetRegion* value);
  ::aim::RectangleTargetRegion* unsafe_arena_release_rectangle();

  private:
  const ::aim::RectangleTargetRegion& _internal_rectangle() const;
  ::aim::RectangleTargetRegion* _internal_mutable_rectangle();

  public:
  // .aim.EllipseTargetRegion ellipse = 5;
  bool has_ellipse() const;
  private:
  bool _internal_has_ellipse() const;

  public:
  void clear_ellipse() ;
  const ::aim::EllipseTargetRegion& ellipse() const;
  PROTOBUF_NODISCARD ::aim::EllipseTargetRegion* release_ellipse();
  ::aim::EllipseTargetRegion* mutable_ellipse();
  void set_allocated_ellipse(::aim::EllipseTargetRegion* value);
  void unsafe_arena_set_allocated_ellipse(::aim::EllipseTargetRegion* value);
  ::aim::EllipseTargetRegion* unsafe_arena_release_ellipse();

  private:
  const ::aim::EllipseTargetRegion& _internal_ellipse() const;
  ::aim::EllipseTargetRegion* _internal_mutable_ellipse();

  public:
  // .aim.CircleTargetRegion circle = 6;
  bool has_circle() const;
  private:
  bool _internal_has_circle() const;

  public:
  void clear_circle() ;
  const ::aim::CircleTargetRegion& circle() const;
  PROTOBUF_NODISCARD ::aim::CircleTargetRegion* release_circle();
  ::aim::CircleTargetRegion* mutable_circle();
  void set_allocated_circle(::aim::CircleTargetRegion* value);
  void unsafe_arena_set_allocated_circle(::aim::CircleTargetRegion* value);
  ::aim::CircleTargetRegion* unsafe_arena_release_circle();

  private:
  const ::aim::CircleTargetRegion& _internal_circle() const;
  ::aim::CircleTargetRegion* _internal_mutable_circle();

  public:
  void clear_type();
  TypeCase type_case() const;
  // @@protoc_insertion_point(class_scope:aim.TargetRegion)
 private:
  class _Internal;
  void set_has_rectangle();
  void set_has_ellipse();
  void set_has_circle();
  inline bool has_type() const;
  inline void clear_has_type();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 6, 5,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TargetRegion& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::aim::RegionLength* x_offset_;
    ::aim::RegionLength* y_offset_;
    float percent_chance_;
    union TypeUnion {
      constexpr TypeUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::aim::RectangleTargetRegion* rectangle_;
      ::aim::EllipseTargetRegion* ellipse_;
      ::aim::CircleTargetRegion* circle_;
    } type_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_scenario_2eproto;
};
// -------------------------------------------------------------------

class TargetProfile final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:aim.TargetProfile) */ {
 public:
  inline TargetProfile() : TargetProfile(nullptr) {}
  ~TargetProfile() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TargetProfile* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TargetProfile));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TargetProfile(
      ::google::protobuf::internal::ConstantInitialized);

  inline TargetProfile(const TargetProfile& from) : TargetProfile(nullptr, from) {}
  inline TargetProfile(TargetProfile&& from) noexcept
      : TargetProfile(nullptr, std::move(from)) {}
  inline TargetProfile& operator=(const TargetProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline TargetProfile& operator=(TargetProfile&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TargetProfile& default_instance() {
    return *internal_default_instance();
  }
  enum TypeCase {
    kPill = 10,
    TYPE_NOT_SET = 0,
  };
  static inline const TargetProfile* internal_default_instance() {
    return reinterpret_cast<const TargetProfile*>(
        &_TargetProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(TargetProfile& a, TargetProfile& b) { a.Swap(&b); }
  inline void Swap(TargetProfile* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TargetProfile* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TargetProfile* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TargetProfile>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TargetProfile& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TargetProfile& from) { TargetProfile::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TargetProfile* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "aim.TargetProfile"; }

 protected:
  explicit TargetProfile(::google::protobuf::Arena* arena);
  TargetProfile(::google::protobuf::Arena* arena, const TargetProfile& from);
  TargetProfile(::google::protobuf::Arena* arena, TargetProfile&& from) noexcept
      : TargetProfile(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPercentChanceFieldNumber = 1,
    kTargetRadiusFieldNumber = 2,
    kTargetRadiusJitterFieldNumber = 3,
    kSpeedFieldNumber = 4,
    kSpeedJitterFieldNumber = 5,
    kHealthSecondsFieldNumber = 6,
    kHealthSecondsJitterFieldNumber = 7,
    kPillFieldNumber = 10,
  };
  // float percent_chance = 1;
  bool has_percent_chance() const;
  void clear_percent_chance() ;
  float percent_chance() const;
  void set_percent_chance(float value);

  private:
  float _internal_percent_chance() const;
  void _internal_set_percent_chance(float value);

  public:
  // float target_radius = 2;
  bool has_target_radius() const;
  void clear_target_radius() ;
  float target_radius() const;
  void set_target_radius(float value);

  private:
  float _internal_target_radius() const;
  void _internal_set_target_radius(float value);

  public:
  // float target_radius_jitter = 3;
  bool has_target_radius_jitter() const;
  void clear_target_radius_jitter() ;
  float target_radius_jitter() const;
  void set_target_radius_jitter(float value);

  private:
  float _internal_target_radius_jitter() const;
  void _internal_set_target_radius_jitter(float value);

  public:
  // float speed = 4;
  bool has_speed() const;
  void clear_speed() ;
  float speed() const;
  void set_speed(float value);

  private:
  float _internal_speed() const;
  void _internal_set_speed(float value);

  public:
  // float speed_jitter = 5;
  bool has_speed_jitter() const;
  void clear_speed_jitter() ;
  float speed_jitter() const;
  void set_speed_jitter(float value);

  private:
  float _internal_speed_jitter() const;
  void _internal_set_speed_jitter(float value);

  public:
  // float health_seconds = 6;
  bool has_health_seconds() const;
  void clear_health_seconds() ;
  float health_seconds() const;
  void set_health_seconds(float value);

  private:
  float _internal_health_seconds() const;
  void _internal_set_health_seconds(float value);

  public:
  // float health_seconds_jitter = 7;
  bool has_health_seconds_jitter() const;
  void clear_health_seconds_jitter() ;
  float health_seconds_jitter() const;
  void set_health_seconds_jitter(float value);

  private:
  float _internal_health_seconds_jitter() const;
  void _internal_set_health_seconds_jitter(float value);

  public:
  // .aim.PillTargetDef pill = 10;
  bool has_pill() const;
  private:
  bool _internal_has_pill() const;

  public:
  void clear_pill() ;
  const ::aim::PillTargetDef& pill() const;
  PROTOBUF_NODISCARD ::aim::PillTargetDef* release_pill();
  ::aim::PillTargetDef* mutable_pill();
  void set_allocated_pill(::aim::PillTargetDef* value);
  void unsafe_arena_set_allocated_pill(::aim::PillTargetDef* value);
  ::aim::PillTargetDef* unsafe_arena_release_pill();

  private:
  const ::aim::PillTargetDef& _internal_pill() const;
  ::aim::PillTargetDef* _internal_mutable_pill();

  public:
  void clear_type();
  TypeCase type_case() const;
  // @@protoc_insertion_point(class_scope:aim.TargetProfile)
 private:
  class _Internal;
  void set_has_pill();
  inline bool has_type() const;
  inline void clear_has_type();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TargetProfile& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    float percent_chance_;
    float target_radius_;
    float target_radius_jitter_;
    float speed_;
    float speed_jitter_;
    float health_seconds_;
    float health_seconds_jitter_;
    union TypeUnion {
      constexpr TypeUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::aim::PillTargetDef* pill_;
    } type_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_scenario_2eproto;
};
// -------------------------------------------------------------------

class TargetPlacementStrategy final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:aim.TargetPlacementStrategy) */ {
 public:
  inline TargetPlacementStrategy() : TargetPlacementStrategy(nullptr) {}
  ~TargetPlacementStrategy() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TargetPlacementStrategy* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TargetPlacementStrategy));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TargetPlacementStrategy(
      ::google::protobuf::internal::ConstantInitialized);

  inline TargetPlacementStrategy(const TargetPlacementStrategy& from) : TargetPlacementStrategy(nullptr, from) {}
  inline TargetPlacementStrategy(TargetPlacementStrategy&& from) noexcept
      : TargetPlacementStrategy(nullptr, std::move(from)) {}
  inline TargetPlacementStrategy& operator=(const TargetPlacementStrategy& from) {
    CopyFrom(from);
    return *this;
  }
  inline TargetPlacementStrategy& operator=(TargetPlacementStrategy&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TargetPlacementStrategy& default_instance() {
    return *internal_default_instance();
  }
  static inline const TargetPlacementStrategy* internal_default_instance() {
    return reinterpret_cast<const TargetPlacementStrategy*>(
        &_TargetPlacementStrategy_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(TargetPlacementStrategy& a, TargetPlacementStrategy& b) { a.Swap(&b); }
  inline void Swap(TargetPlacementStrategy* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TargetPlacementStrategy* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TargetPlacementStrategy* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TargetPlacementStrategy>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TargetPlacementStrategy& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TargetPlacementStrategy& from) { TargetPlacementStrategy::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TargetPlacementStrategy* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "aim.TargetPlacementStrategy"; }

 protected:
  explicit TargetPlacementStrategy(::google::protobuf::Arena* arena);
  TargetPlacementStrategy(::google::protobuf::Arena* arena, const TargetPlacementStrategy& from);
  TargetPlacementStrategy(::google::protobuf::Arena* arena, TargetPlacementStrategy&& from) noexcept
      : TargetPlacementStrategy(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRegionsFieldNumber = 1,
    kRegionOrderFieldNumber = 2,
    kMinDistanceFieldNumber = 3,
    kFixedDistanceFromLastTargetFieldNumber = 4,
    kFixedDistanceJitterFieldNumber = 5,
  };
  // repeated .aim.TargetRegion regions = 1;
  int regions_size() const;
  private:
  int _internal_regions_size() const;

  public:
  void clear_regions() ;
  ::aim::TargetRegion* mutable_regions(int index);
  ::google::protobuf::RepeatedPtrField<::aim::TargetRegion>* mutable_regions();

  private:
  const ::google::protobuf::RepeatedPtrField<::aim::TargetRegion>& _internal_regions() const;
  ::google::protobuf::RepeatedPtrField<::aim::TargetRegion>* _internal_mutable_regions();
  public:
  const ::aim::TargetRegion& regions(int index) const;
  ::aim::TargetRegion* add_regions();
  const ::google::protobuf::RepeatedPtrField<::aim::TargetRegion>& regions() const;
  // repeated int32 region_order = 2;
  int region_order_size() const;
  private:
  int _internal_region_order_size() const;

  public:
  void clear_region_order() ;
  ::int32_t region_order(int index) const;
  void set_region_order(int index, ::int32_t value);
  void add_region_order(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& region_order() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_region_order();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_region_order() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_region_order();

  public:
  // float min_distance = 3;
  bool has_min_distance() const;
  void clear_min_distance() ;
  float min_distance() const;
  void set_min_distance(float value);

  private:
  float _internal_min_distance() const;
  void _internal_set_min_distance(float value);

  public:
  // float fixed_distance_from_last_target = 4;
  bool has_fixed_distance_from_last_target() const;
  void clear_fixed_distance_from_last_target() ;
  float fixed_distance_from_last_target() const;
  void set_fixed_distance_from_last_target(float value);

  private:
  float _internal_fixed_distance_from_last_target() const;
  void _internal_set_fixed_distance_from_last_target(float value);

  public:
  // float fixed_distance_jitter = 5;
  bool has_fixed_distance_jitter() const;
  void clear_fixed_distance_jitter() ;
  float fixed_distance_jitter() const;
  void set_fixed_distance_jitter(float value);

  private:
  float _internal_fixed_distance_jitter() const;
  void _internal_set_fixed_distance_jitter(float value);

  public:
  // @@protoc_insertion_point(class_scope:aim.TargetPlacementStrategy)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TargetPlacementStrategy& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::aim::TargetRegion > regions_;
    ::google::protobuf::RepeatedField<::int32_t> region_order_;
    ::google::protobuf::internal::CachedSize _region_order_cached_byte_size_;
    float min_distance_;
    float fixed_distance_from_last_target_;
    float fixed_distance_jitter_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_scenario_2eproto;
};
// -------------------------------------------------------------------

class TargetDef final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:aim.TargetDef) */ {
 public:
  inline TargetDef() : TargetDef(nullptr) {}
  ~TargetDef() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TargetDef* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TargetDef));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TargetDef(
      ::google::protobuf::internal::ConstantInitialized);

  inline TargetDef(const TargetDef& from) : TargetDef(nullptr, from) {}
  inline TargetDef(TargetDef&& from) noexcept
      : TargetDef(nullptr, std::move(from)) {}
  inline TargetDef& operator=(const TargetDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline TargetDef& operator=(TargetDef&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TargetDef& default_instance() {
    return *internal_default_instance();
  }
  static inline const TargetDef* internal_default_instance() {
    return reinterpret_cast<const TargetDef*>(
        &_TargetDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(TargetDef& a, TargetDef& b) { a.Swap(&b); }
  inline void Swap(TargetDef* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TargetDef* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TargetDef* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TargetDef>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TargetDef& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TargetDef& from) { TargetDef::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TargetDef* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "aim.TargetDef"; }

 protected:
  explicit TargetDef(::google::protobuf::Arena* arena);
  TargetDef(::google::protobuf::Arena* arena, const TargetDef& from);
  TargetDef(::google::protobuf::Arena* arena, TargetDef&& from) noexcept
      : TargetDef(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProfilesFieldNumber = 1,
    kTargetOrderFieldNumber = 4,
    kNumTargetsFieldNumber = 2,
    kRemoveClosestOnMissFieldNumber = 3,
    kNewestTargetIsGhostFieldNumber = 5,
    kNewTargetDelaySecondsFieldNumber = 6,
    kRemoveTargetAfterSecondsFieldNumber = 7,
    kStaggerInitialTargetsSecondsFieldNumber = 8,
  };
  // repeated .aim.TargetProfile profiles = 1;
  int profiles_size() const;
  private:
  int _internal_profiles_size() const;

  public:
  void clear_profiles() ;
  ::aim::TargetProfile* mutable_profiles(int index);
  ::google::protobuf::RepeatedPtrField<::aim::TargetProfile>* mutable_profiles();

  private:
  const ::google::protobuf::RepeatedPtrField<::aim::TargetProfile>& _internal_profiles() const;
  ::google::protobuf::RepeatedPtrField<::aim::TargetProfile>* _internal_mutable_profiles();
  public:
  const ::aim::TargetProfile& profiles(int index) const;
  ::aim::TargetProfile* add_profiles();
  const ::google::protobuf::RepeatedPtrField<::aim::TargetProfile>& profiles() const;
  // repeated int32 target_order = 4;
  int target_order_size() const;
  private:
  int _internal_target_order_size() const;

  public:
  void clear_target_order() ;
  ::int32_t target_order(int index) const;
  void set_target_order(int index, ::int32_t value);
  void add_target_order(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& target_order() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_target_order();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_target_order() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_target_order();

  public:
  // int32 num_targets = 2;
  bool has_num_targets() const;
  void clear_num_targets() ;
  ::int32_t num_targets() const;
  void set_num_targets(::int32_t value);

  private:
  ::int32_t _internal_num_targets() const;
  void _internal_set_num_targets(::int32_t value);

  public:
  // bool remove_closest_on_miss = 3;
  bool has_remove_closest_on_miss() const;
  void clear_remove_closest_on_miss() ;
  bool remove_closest_on_miss() const;
  void set_remove_closest_on_miss(bool value);

  private:
  bool _internal_remove_closest_on_miss() const;
  void _internal_set_remove_closest_on_miss(bool value);

  public:
  // bool newest_target_is_ghost = 5;
  bool has_newest_target_is_ghost() const;
  void clear_newest_target_is_ghost() ;
  bool newest_target_is_ghost() const;
  void set_newest_target_is_ghost(bool value);

  private:
  bool _internal_newest_target_is_ghost() const;
  void _internal_set_newest_target_is_ghost(bool value);

  public:
  // float new_target_delay_seconds = 6;
  bool has_new_target_delay_seconds() const;
  void clear_new_target_delay_seconds() ;
  float new_target_delay_seconds() const;
  void set_new_target_delay_seconds(float value);

  private:
  float _internal_new_target_delay_seconds() const;
  void _internal_set_new_target_delay_seconds(float value);

  public:
  // float remove_target_after_seconds = 7;
  bool has_remove_target_after_seconds() const;
  void clear_remove_target_after_seconds() ;
  float remove_target_after_seconds() const;
  void set_remove_target_after_seconds(float value);

  private:
  float _internal_remove_target_after_seconds() const;
  void _internal_set_remove_target_after_seconds(float value);

  public:
  // float stagger_initial_targets_seconds = 8;
  bool has_stagger_initial_targets_seconds() const;
  void clear_stagger_initial_targets_seconds() ;
  float stagger_initial_targets_seconds() const;
  void set_stagger_initial_targets_seconds(float value);

  private:
  float _internal_stagger_initial_targets_seconds() const;
  void _internal_set_stagger_initial_targets_seconds(float value);

  public:
  // @@protoc_insertion_point(class_scope:aim.TargetDef)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TargetDef& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::aim::TargetProfile > profiles_;
    ::google::protobuf::RepeatedField<::int32_t> target_order_;
    ::google::protobuf::internal::CachedSize _target_order_cached_byte_size_;
    ::int32_t num_targets_;
    bool remove_closest_on_miss_;
    bool newest_target_is_ghost_;
    float new_target_delay_seconds_;
    float remove_target_after_seconds_;
    float stagger_initial_targets_seconds_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_scenario_2eproto;
};
// -------------------------------------------------------------------

class StaticScenarioDef final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:aim.StaticScenarioDef) */ {
 public:
  inline StaticScenarioDef() : StaticScenarioDef(nullptr) {}
  ~StaticScenarioDef() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StaticScenarioDef* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StaticScenarioDef));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StaticScenarioDef(
      ::google::protobuf::internal::ConstantInitialized);

  inline StaticScenarioDef(const StaticScenarioDef& from) : StaticScenarioDef(nullptr, from) {}
  inline StaticScenarioDef(StaticScenarioDef&& from) noexcept
      : StaticScenarioDef(nullptr, std::move(from)) {}
  inline StaticScenarioDef& operator=(const StaticScenarioDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline StaticScenarioDef& operator=(StaticScenarioDef&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StaticScenarioDef& default_instance() {
    return *internal_default_instance();
  }
  static inline const StaticScenarioDef* internal_default_instance() {
    return reinterpret_cast<const StaticScenarioDef*>(
        &_StaticScenarioDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(StaticScenarioDef& a, StaticScenarioDef& b) { a.Swap(&b); }
  inline void Swap(StaticScenarioDef* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StaticScenarioDef* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StaticScenarioDef* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StaticScenarioDef>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StaticScenarioDef& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StaticScenarioDef& from) { StaticScenarioDef::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StaticScenarioDef* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "aim.StaticScenarioDef"; }

 protected:
  explicit StaticScenarioDef(::google::protobuf::Arena* arena);
  StaticScenarioDef(::google::protobuf::Arena* arena, const StaticScenarioDef& from);
  StaticScenarioDef(::google::protobuf::Arena* arena, StaticScenarioDef&& from) noexcept
      : StaticScenarioDef(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTargetPlacementStrategyFieldNumber = 1,
  };
  // .aim.TargetPlacementStrategy target_placement_strategy = 1;
  bool has_target_placement_strategy() const;
  void clear_target_placement_strategy() ;
  const ::aim::TargetPlacementStrategy& target_placement_strategy() const;
  PROTOBUF_NODISCARD ::aim::TargetPlacementStrategy* release_target_placement_strategy();
  ::aim::TargetPlacementStrategy* mutable_target_placement_strategy();
  void set_allocated_target_placement_strategy(::aim::TargetPlacementStrategy* value);
  void unsafe_arena_set_allocated_target_placement_strategy(::aim::TargetPlacementStrategy* value);
  ::aim::TargetPlacementStrategy* unsafe_arena_release_target_placement_strategy();

  private:
  const ::aim::TargetPlacementStrategy& _internal_target_placement_strategy() const;
  ::aim::TargetPlacementStrategy* _internal_mutable_target_placement_strategy();

  public:
  // @@protoc_insertion_point(class_scope:aim.StaticScenarioDef)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StaticScenarioDef& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::aim::TargetPlacementStrategy* target_placement_strategy_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_scenario_2eproto;
};
// -------------------------------------------------------------------

class LinearScenarioDef final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:aim.LinearScenarioDef) */ {
 public:
  inline LinearScenarioDef() : LinearScenarioDef(nullptr) {}
  ~LinearScenarioDef() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LinearScenarioDef* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LinearScenarioDef));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LinearScenarioDef(
      ::google::protobuf::internal::ConstantInitialized);

  inline LinearScenarioDef(const LinearScenarioDef& from) : LinearScenarioDef(nullptr, from) {}
  inline LinearScenarioDef(LinearScenarioDef&& from) noexcept
      : LinearScenarioDef(nullptr, std::move(from)) {}
  inline LinearScenarioDef& operator=(const LinearScenarioDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline LinearScenarioDef& operator=(LinearScenarioDef&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LinearScenarioDef& default_instance() {
    return *internal_default_instance();
  }
  static inline const LinearScenarioDef* internal_default_instance() {
    return reinterpret_cast<const LinearScenarioDef*>(
        &_LinearScenarioDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(LinearScenarioDef& a, LinearScenarioDef& b) { a.Swap(&b); }
  inline void Swap(LinearScenarioDef* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LinearScenarioDef* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LinearScenarioDef* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LinearScenarioDef>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LinearScenarioDef& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LinearScenarioDef& from) { LinearScenarioDef::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LinearScenarioDef* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "aim.LinearScenarioDef"; }

 protected:
  explicit LinearScenarioDef(::google::protobuf::Arena* arena);
  LinearScenarioDef(::google::protobuf::Arena* arena, const LinearScenarioDef& from);
  LinearScenarioDef(::google::protobuf::Arena* arena, LinearScenarioDef&& from) noexcept
      : LinearScenarioDef(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTargetPlacementStrategyFieldNumber = 5,
    kAngleFieldNumber = 1,
    kAngleJitterFieldNumber = 2,
    kWidthFieldNumber = 3,
    kHeightFieldNumber = 4,
  };
  // .aim.TargetPlacementStrategy target_placement_strategy = 5;
  bool has_target_placement_strategy() const;
  void clear_target_placement_strategy() ;
  const ::aim::TargetPlacementStrategy& target_placement_strategy() const;
  PROTOBUF_NODISCARD ::aim::TargetPlacementStrategy* release_target_placement_strategy();
  ::aim::TargetPlacementStrategy* mutable_target_placement_strategy();
  void set_allocated_target_placement_strategy(::aim::TargetPlacementStrategy* value);
  void unsafe_arena_set_allocated_target_placement_strategy(::aim::TargetPlacementStrategy* value);
  ::aim::TargetPlacementStrategy* unsafe_arena_release_target_placement_strategy();

  private:
  const ::aim::TargetPlacementStrategy& _internal_target_placement_strategy() const;
  ::aim::TargetPlacementStrategy* _internal_mutable_target_placement_strategy();

  public:
  // float angle = 1;
  bool has_angle() const;
  void clear_angle() ;
  float angle() const;
  void set_angle(float value);

  private:
  float _internal_angle() const;
  void _internal_set_angle(float value);

  public:
  // float angle_jitter = 2;
  bool has_angle_jitter() const;
  void clear_angle_jitter() ;
  float angle_jitter() const;
  void set_angle_jitter(float value);

  private:
  float _internal_angle_jitter() const;
  void _internal_set_angle_jitter(float value);

  public:
  // float width = 3;
  bool has_width() const;
  void clear_width() ;
  float width() const;
  void set_width(float value);

  private:
  float _internal_width() const;
  void _internal_set_width(float value);

  public:
  // float height = 4;
  bool has_height() const;
  void clear_height() ;
  float height() const;
  void set_height(float value);

  private:
  float _internal_height() const;
  void _internal_set_height(float value);

  public:
  // @@protoc_insertion_point(class_scope:aim.LinearScenarioDef)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LinearScenarioDef& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::aim::TargetPlacementStrategy* target_placement_strategy_;
    float angle_;
    float angle_jitter_;
    float width_;
    float height_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_scenario_2eproto;
};
// -------------------------------------------------------------------

class CenteringScenarioDef final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:aim.CenteringScenarioDef) */ {
 public:
  inline CenteringScenarioDef() : CenteringScenarioDef(nullptr) {}
  ~CenteringScenarioDef() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CenteringScenarioDef* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CenteringScenarioDef));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CenteringScenarioDef(
      ::google::protobuf::internal::ConstantInitialized);

  inline CenteringScenarioDef(const CenteringScenarioDef& from) : CenteringScenarioDef(nullptr, from) {}
  inline CenteringScenarioDef(CenteringScenarioDef&& from) noexcept
      : CenteringScenarioDef(nullptr, std::move(from)) {}
  inline CenteringScenarioDef& operator=(const CenteringScenarioDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline CenteringScenarioDef& operator=(CenteringScenarioDef&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CenteringScenarioDef& default_instance() {
    return *internal_default_instance();
  }
  static inline const CenteringScenarioDef* internal_default_instance() {
    return reinterpret_cast<const CenteringScenarioDef*>(
        &_CenteringScenarioDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(CenteringScenarioDef& a, CenteringScenarioDef& b) { a.Swap(&b); }
  inline void Swap(CenteringScenarioDef* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CenteringScenarioDef* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CenteringScenarioDef* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CenteringScenarioDef>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CenteringScenarioDef& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CenteringScenarioDef& from) { CenteringScenarioDef::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CenteringScenarioDef* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "aim.CenteringScenarioDef"; }

 protected:
  explicit CenteringScenarioDef(::google::protobuf::Arena* arena);
  CenteringScenarioDef(::google::protobuf::Arena* arena, const CenteringScenarioDef& from);
  CenteringScenarioDef(::google::protobuf::Arena* arena, CenteringScenarioDef&& from) noexcept
      : CenteringScenarioDef(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWallPointsFieldNumber = 1,
    kTargetPlacementStrategyFieldNumber = 2,
    kOrientPillFieldNumber = 3,
  };
  // repeated .aim.RegionVec2 wall_points = 1;
  int wall_points_size() const;
  private:
  int _internal_wall_points_size() const;

  public:
  void clear_wall_points() ;
  ::aim::RegionVec2* mutable_wall_points(int index);
  ::google::protobuf::RepeatedPtrField<::aim::RegionVec2>* mutable_wall_points();

  private:
  const ::google::protobuf::RepeatedPtrField<::aim::RegionVec2>& _internal_wall_points() const;
  ::google::protobuf::RepeatedPtrField<::aim::RegionVec2>* _internal_mutable_wall_points();
  public:
  const ::aim::RegionVec2& wall_points(int index) const;
  ::aim::RegionVec2* add_wall_points();
  const ::google::protobuf::RepeatedPtrField<::aim::RegionVec2>& wall_points() const;
  // .aim.TargetPlacementStrategy target_placement_strategy = 2;
  bool has_target_placement_strategy() const;
  void clear_target_placement_strategy() ;
  const ::aim::TargetPlacementStrategy& target_placement_strategy() const;
  PROTOBUF_NODISCARD ::aim::TargetPlacementStrategy* release_target_placement_strategy();
  ::aim::TargetPlacementStrategy* mutable_target_placement_strategy();
  void set_allocated_target_placement_strategy(::aim::TargetPlacementStrategy* value);
  void unsafe_arena_set_allocated_target_placement_strategy(::aim::TargetPlacementStrategy* value);
  ::aim::TargetPlacementStrategy* unsafe_arena_release_target_placement_strategy();

  private:
  const ::aim::TargetPlacementStrategy& _internal_target_placement_strategy() const;
  ::aim::TargetPlacementStrategy* _internal_mutable_target_placement_strategy();

  public:
  // bool orient_pill = 3;
  bool has_orient_pill() const;
  void clear_orient_pill() ;
  bool orient_pill() const;
  void set_orient_pill(bool value);

  private:
  bool _internal_orient_pill() const;
  void _internal_set_orient_pill(bool value);

  public:
  // @@protoc_insertion_point(class_scope:aim.CenteringScenarioDef)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CenteringScenarioDef& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::aim::RegionVec2 > wall_points_;
    ::aim::TargetPlacementStrategy* target_placement_strategy_;
    bool orient_pill_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_scenario_2eproto;
};
// -------------------------------------------------------------------

class BarrelScenarioDef final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:aim.BarrelScenarioDef) */ {
 public:
  inline BarrelScenarioDef() : BarrelScenarioDef(nullptr) {}
  ~BarrelScenarioDef() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BarrelScenarioDef* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BarrelScenarioDef));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BarrelScenarioDef(
      ::google::protobuf::internal::ConstantInitialized);

  inline BarrelScenarioDef(const BarrelScenarioDef& from) : BarrelScenarioDef(nullptr, from) {}
  inline BarrelScenarioDef(BarrelScenarioDef&& from) noexcept
      : BarrelScenarioDef(nullptr, std::move(from)) {}
  inline BarrelScenarioDef& operator=(const BarrelScenarioDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline BarrelScenarioDef& operator=(BarrelScenarioDef&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BarrelScenarioDef& default_instance() {
    return *internal_default_instance();
  }
  static inline const BarrelScenarioDef* internal_default_instance() {
    return reinterpret_cast<const BarrelScenarioDef*>(
        &_BarrelScenarioDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(BarrelScenarioDef& a, BarrelScenarioDef& b) { a.Swap(&b); }
  inline void Swap(BarrelScenarioDef* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BarrelScenarioDef* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BarrelScenarioDef* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BarrelScenarioDef>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BarrelScenarioDef& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BarrelScenarioDef& from) { BarrelScenarioDef::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BarrelScenarioDef* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "aim.BarrelScenarioDef"; }

 protected:
  explicit BarrelScenarioDef(::google::protobuf::Arena* arena);
  BarrelScenarioDef(::google::protobuf::Arena* arena, const BarrelScenarioDef& from);
  BarrelScenarioDef(::google::protobuf::Arena* arena, BarrelScenarioDef&& from) noexcept
      : BarrelScenarioDef(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTargetPlacementStrategyFieldNumber = 1,
    kDirectionRadiusPercentFieldNumber = 2,
  };
  // .aim.TargetPlacementStrategy target_placement_strategy = 1;
  bool has_target_placement_strategy() const;
  void clear_target_placement_strategy() ;
  const ::aim::TargetPlacementStrategy& target_placement_strategy() const;
  PROTOBUF_NODISCARD ::aim::TargetPlacementStrategy* release_target_placement_strategy();
  ::aim::TargetPlacementStrategy* mutable_target_placement_strategy();
  void set_allocated_target_placement_strategy(::aim::TargetPlacementStrategy* value);
  void unsafe_arena_set_allocated_target_placement_strategy(::aim::TargetPlacementStrategy* value);
  ::aim::TargetPlacementStrategy* unsafe_arena_release_target_placement_strategy();

  private:
  const ::aim::TargetPlacementStrategy& _internal_target_placement_strategy() const;
  ::aim::TargetPlacementStrategy* _internal_mutable_target_placement_strategy();

  public:
  // float direction_radius_percent = 2;
  bool has_direction_radius_percent() const;
  void clear_direction_radius_percent() ;
  float direction_radius_percent() const;
  void set_direction_radius_percent(float value);

  private:
  float _internal_direction_radius_percent() const;
  void _internal_set_direction_radius_percent(float value);

  public:
  // @@protoc_insertion_point(class_scope:aim.BarrelScenarioDef)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BarrelScenarioDef& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::aim::TargetPlacementStrategy* target_placement_strategy_;
    float direction_radius_percent_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_scenario_2eproto;
};
// -------------------------------------------------------------------

class ScenarioDef final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:aim.ScenarioDef) */ {
 public:
  inline ScenarioDef() : ScenarioDef(nullptr) {}
  ~ScenarioDef() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ScenarioDef* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ScenarioDef));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ScenarioDef(
      ::google::protobuf::internal::ConstantInitialized);

  inline ScenarioDef(const ScenarioDef& from) : ScenarioDef(nullptr, from) {}
  inline ScenarioDef(ScenarioDef&& from) noexcept
      : ScenarioDef(nullptr, std::move(from)) {}
  inline ScenarioDef& operator=(const ScenarioDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScenarioDef& operator=(ScenarioDef&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScenarioDef& default_instance() {
    return *internal_default_instance();
  }
  enum TypeCase {
    kStaticDef = 10,
    kCenteringDef = 11,
    kBarrelDef = 12,
    kLinearDef = 13,
    TYPE_NOT_SET = 0,
  };
  static inline const ScenarioDef* internal_default_instance() {
    return reinterpret_cast<const ScenarioDef*>(
        &_ScenarioDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(ScenarioDef& a, ScenarioDef& b) { a.Swap(&b); }
  inline void Swap(ScenarioDef* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScenarioDef* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScenarioDef* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ScenarioDef>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ScenarioDef& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ScenarioDef& from) { ScenarioDef::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ScenarioDef* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "aim.ScenarioDef"; }

 protected:
  explicit ScenarioDef(::google::protobuf::Arena* arena);
  ScenarioDef(::google::protobuf::Arena* arena, const ScenarioDef& from);
  ScenarioDef(::google::protobuf::Arena* arena, ScenarioDef&& from) noexcept
      : ScenarioDef(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kScenarioIdFieldNumber = 1,
    kReferenceFieldNumber = 6,
    kRoomFieldNumber = 3,
    kTargetDefFieldNumber = 5,
    kOverridesFieldNumber = 7,
    kShotTypeFieldNumber = 8,
    kDurationSecondsFieldNumber = 2,
    kAccuracyPenaltyModifierFieldNumber = 9,
    kStaticDefFieldNumber = 10,
    kCenteringDefFieldNumber = 11,
    kBarrelDefFieldNumber = 12,
    kLinearDefFieldNumber = 13,
  };
  // string scenario_id = 1;
  bool has_scenario_id() const;
  void clear_scenario_id() ;
  const std::string& scenario_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_scenario_id(Arg_&& arg, Args_... args);
  std::string* mutable_scenario_id();
  PROTOBUF_NODISCARD std::string* release_scenario_id();
  void set_allocated_scenario_id(std::string* value);

  private:
  const std::string& _internal_scenario_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_scenario_id(
      const std::string& value);
  std::string* _internal_mutable_scenario_id();

  public:
  // string reference = 6;
  bool has_reference() const;
  void clear_reference() ;
  const std::string& reference() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_reference(Arg_&& arg, Args_... args);
  std::string* mutable_reference();
  PROTOBUF_NODISCARD std::string* release_reference();
  void set_allocated_reference(std::string* value);

  private:
  const std::string& _internal_reference() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_reference(
      const std::string& value);
  std::string* _internal_mutable_reference();

  public:
  // .aim.Room room = 3;
  bool has_room() const;
  void clear_room() ;
  const ::aim::Room& room() const;
  PROTOBUF_NODISCARD ::aim::Room* release_room();
  ::aim::Room* mutable_room();
  void set_allocated_room(::aim::Room* value);
  void unsafe_arena_set_allocated_room(::aim::Room* value);
  ::aim::Room* unsafe_arena_release_room();

  private:
  const ::aim::Room& _internal_room() const;
  ::aim::Room* _internal_mutable_room();

  public:
  // .aim.TargetDef target_def = 5;
  bool has_target_def() const;
  void clear_target_def() ;
  const ::aim::TargetDef& target_def() const;
  PROTOBUF_NODISCARD ::aim::TargetDef* release_target_def();
  ::aim::TargetDef* mutable_target_def();
  void set_allocated_target_def(::aim::TargetDef* value);
  void unsafe_arena_set_allocated_target_def(::aim::TargetDef* value);
  ::aim::TargetDef* unsafe_arena_release_target_def();

  private:
  const ::aim::TargetDef& _internal_target_def() const;
  ::aim::TargetDef* _internal_mutable_target_def();

  public:
  // .aim.ScenarioReferenceOverrides overrides = 7;
  bool has_overrides() const;
  void clear_overrides() ;
  const ::aim::ScenarioReferenceOverrides& overrides() const;
  PROTOBUF_NODISCARD ::aim::ScenarioReferenceOverrides* release_overrides();
  ::aim::ScenarioReferenceOverrides* mutable_overrides();
  void set_allocated_overrides(::aim::ScenarioReferenceOverrides* value);
  void unsafe_arena_set_allocated_overrides(::aim::ScenarioReferenceOverrides* value);
  ::aim::ScenarioReferenceOverrides* unsafe_arena_release_overrides();

  private:
  const ::aim::ScenarioReferenceOverrides& _internal_overrides() const;
  ::aim::ScenarioReferenceOverrides* _internal_mutable_overrides();

  public:
  // .aim.ShotType shot_type = 8;
  bool has_shot_type() const;
  void clear_shot_type() ;
  const ::aim::ShotType& shot_type() const;
  PROTOBUF_NODISCARD ::aim::ShotType* release_shot_type();
  ::aim::ShotType* mutable_shot_type();
  void set_allocated_shot_type(::aim::ShotType* value);
  void unsafe_arena_set_allocated_shot_type(::aim::ShotType* value);
  ::aim::ShotType* unsafe_arena_release_shot_type();

  private:
  const ::aim::ShotType& _internal_shot_type() const;
  ::aim::ShotType* _internal_mutable_shot_type();

  public:
  // float duration_seconds = 2;
  bool has_duration_seconds() const;
  void clear_duration_seconds() ;
  float duration_seconds() const;
  void set_duration_seconds(float value);

  private:
  float _internal_duration_seconds() const;
  void _internal_set_duration_seconds(float value);

  public:
  // float accuracy_penalty_modifier = 9;
  bool has_accuracy_penalty_modifier() const;
  void clear_accuracy_penalty_modifier() ;
  float accuracy_penalty_modifier() const;
  void set_accuracy_penalty_modifier(float value);

  private:
  float _internal_accuracy_penalty_modifier() const;
  void _internal_set_accuracy_penalty_modifier(float value);

  public:
  // .aim.StaticScenarioDef static_def = 10;
  bool has_static_def() const;
  private:
  bool _internal_has_static_def() const;

  public:
  void clear_static_def() ;
  const ::aim::StaticScenarioDef& static_def() const;
  PROTOBUF_NODISCARD ::aim::StaticScenarioDef* release_static_def();
  ::aim::StaticScenarioDef* mutable_static_def();
  void set_allocated_static_def(::aim::StaticScenarioDef* value);
  void unsafe_arena_set_allocated_static_def(::aim::StaticScenarioDef* value);
  ::aim::StaticScenarioDef* unsafe_arena_release_static_def();

  private:
  const ::aim::StaticScenarioDef& _internal_static_def() const;
  ::aim::StaticScenarioDef* _internal_mutable_static_def();

  public:
  // .aim.CenteringScenarioDef centering_def = 11;
  bool has_centering_def() const;
  private:
  bool _internal_has_centering_def() const;

  public:
  void clear_centering_def() ;
  const ::aim::CenteringScenarioDef& centering_def() const;
  PROTOBUF_NODISCARD ::aim::CenteringScenarioDef* release_centering_def();
  ::aim::CenteringScenarioDef* mutable_centering_def();
  void set_allocated_centering_def(::aim::CenteringScenarioDef* value);
  void unsafe_arena_set_allocated_centering_def(::aim::CenteringScenarioDef* value);
  ::aim::CenteringScenarioDef* unsafe_arena_release_centering_def();

  private:
  const ::aim::CenteringScenarioDef& _internal_centering_def() const;
  ::aim::CenteringScenarioDef* _internal_mutable_centering_def();

  public:
  // .aim.BarrelScenarioDef barrel_def = 12;
  bool has_barrel_def() const;
  private:
  bool _internal_has_barrel_def() const;

  public:
  void clear_barrel_def() ;
  const ::aim::BarrelScenarioDef& barrel_def() const;
  PROTOBUF_NODISCARD ::aim::BarrelScenarioDef* release_barrel_def();
  ::aim::BarrelScenarioDef* mutable_barrel_def();
  void set_allocated_barrel_def(::aim::BarrelScenarioDef* value);
  void unsafe_arena_set_allocated_barrel_def(::aim::BarrelScenarioDef* value);
  ::aim::BarrelScenarioDef* unsafe_arena_release_barrel_def();

  private:
  const ::aim::BarrelScenarioDef& _internal_barrel_def() const;
  ::aim::BarrelScenarioDef* _internal_mutable_barrel_def();

  public:
  // .aim.LinearScenarioDef linear_def = 13;
  bool has_linear_def() const;
  private:
  bool _internal_has_linear_def() const;

  public:
  void clear_linear_def() ;
  const ::aim::LinearScenarioDef& linear_def() const;
  PROTOBUF_NODISCARD ::aim::LinearScenarioDef* release_linear_def();
  ::aim::LinearScenarioDef* mutable_linear_def();
  void set_allocated_linear_def(::aim::LinearScenarioDef* value);
  void unsafe_arena_set_allocated_linear_def(::aim::LinearScenarioDef* value);
  ::aim::LinearScenarioDef* unsafe_arena_release_linear_def();

  private:
  const ::aim::LinearScenarioDef& _internal_linear_def() const;
  ::aim::LinearScenarioDef* _internal_mutable_linear_def();

  public:
  void clear_type();
  TypeCase type_case() const;
  // @@protoc_insertion_point(class_scope:aim.ScenarioDef)
 private:
  class _Internal;
  void set_has_static_def();
  void set_has_centering_def();
  void set_has_barrel_def();
  void set_has_linear_def();
  inline bool has_type() const;
  inline void clear_has_type();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 12, 8,
      52, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ScenarioDef& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr scenario_id_;
    ::google::protobuf::internal::ArenaStringPtr reference_;
    ::aim::Room* room_;
    ::aim::TargetDef* target_def_;
    ::aim::ScenarioReferenceOverrides* overrides_;
    ::aim::ShotType* shot_type_;
    float duration_seconds_;
    float accuracy_penalty_modifier_;
    union TypeUnion {
      constexpr TypeUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::aim::StaticScenarioDef* static_def_;
      ::aim::CenteringScenarioDef* centering_def_;
      ::aim::BarrelScenarioDef* barrel_def_;
      ::aim::LinearScenarioDef* linear_def_;
    } type_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_scenario_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SimpleRoom

// float height = 1;
inline bool SimpleRoom::has_height() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void SimpleRoom::clear_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float SimpleRoom::height() const {
  // @@protoc_insertion_point(field_get:aim.SimpleRoom.height)
  return _internal_height();
}
inline void SimpleRoom::set_height(float value) {
  _internal_set_height(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:aim.SimpleRoom.height)
}
inline float SimpleRoom::_internal_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.height_;
}
inline void SimpleRoom::_internal_set_height(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = value;
}

// float width = 2;
inline bool SimpleRoom::has_width() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void SimpleRoom::clear_width() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.width_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float SimpleRoom::width() const {
  // @@protoc_insertion_point(field_get:aim.SimpleRoom.width)
  return _internal_width();
}
inline void SimpleRoom::set_width(float value) {
  _internal_set_width(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:aim.SimpleRoom.width)
}
inline float SimpleRoom::_internal_width() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.width_;
}
inline void SimpleRoom::_internal_set_width(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.width_ = value;
}

// float depth = 3;
inline bool SimpleRoom::has_depth() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void SimpleRoom::clear_depth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.depth_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float SimpleRoom::depth() const {
  // @@protoc_insertion_point(field_get:aim.SimpleRoom.depth)
  return _internal_depth();
}
inline void SimpleRoom::set_depth(float value) {
  _internal_set_depth(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:aim.SimpleRoom.depth)
}
inline float SimpleRoom::_internal_depth() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.depth_;
}
inline void SimpleRoom::_internal_set_depth(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.depth_ = value;
}

// -------------------------------------------------------------------

// CylinderRoom

// float height = 1;
inline bool CylinderRoom::has_height() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CylinderRoom::clear_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float CylinderRoom::height() const {
  // @@protoc_insertion_point(field_get:aim.CylinderRoom.height)
  return _internal_height();
}
inline void CylinderRoom::set_height(float value) {
  _internal_set_height(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:aim.CylinderRoom.height)
}
inline float CylinderRoom::_internal_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.height_;
}
inline void CylinderRoom::_internal_set_height(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = value;
}

// float radius = 2;
inline bool CylinderRoom::has_radius() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CylinderRoom::clear_radius() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.radius_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float CylinderRoom::radius() const {
  // @@protoc_insertion_point(field_get:aim.CylinderRoom.radius)
  return _internal_radius();
}
inline void CylinderRoom::set_radius(float value) {
  _internal_set_radius(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:aim.CylinderRoom.radius)
}
inline float CylinderRoom::_internal_radius() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.radius_;
}
inline void CylinderRoom::_internal_set_radius(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.radius_ = value;
}

// float width = 3;
inline bool CylinderRoom::has_width() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CylinderRoom::clear_width() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.width_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float CylinderRoom::width() const {
  // @@protoc_insertion_point(field_get:aim.CylinderRoom.width)
  return _internal_width();
}
inline void CylinderRoom::set_width(float value) {
  _internal_set_width(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:aim.CylinderRoom.width)
}
inline float CylinderRoom::_internal_width() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.width_;
}
inline void CylinderRoom::_internal_set_width(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.width_ = value;
}

// bool hide_sides = 4;
inline bool CylinderRoom::has_hide_sides() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CylinderRoom::clear_hide_sides() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hide_sides_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool CylinderRoom::hide_sides() const {
  // @@protoc_insertion_point(field_get:aim.CylinderRoom.hide_sides)
  return _internal_hide_sides();
}
inline void CylinderRoom::set_hide_sides(bool value) {
  _internal_set_hide_sides(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:aim.CylinderRoom.hide_sides)
}
inline bool CylinderRoom::_internal_hide_sides() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hide_sides_;
}
inline void CylinderRoom::_internal_set_hide_sides(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hide_sides_ = value;
}

// float side_angle_degrees = 5;
inline bool CylinderRoom::has_side_angle_degrees() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CylinderRoom::clear_side_angle_degrees() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.side_angle_degrees_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline float CylinderRoom::side_angle_degrees() const {
  // @@protoc_insertion_point(field_get:aim.CylinderRoom.side_angle_degrees)
  return _internal_side_angle_degrees();
}
inline void CylinderRoom::set_side_angle_degrees(float value) {
  _internal_set_side_angle_degrees(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:aim.CylinderRoom.side_angle_degrees)
}
inline float CylinderRoom::_internal_side_angle_degrees() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.side_angle_degrees_;
}
inline void CylinderRoom::_internal_set_side_angle_degrees(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.side_angle_degrees_ = value;
}

// -------------------------------------------------------------------

// BarrelRoom

// float radius = 1;
inline bool BarrelRoom::has_radius() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void BarrelRoom::clear_radius() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.radius_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float BarrelRoom::radius() const {
  // @@protoc_insertion_point(field_get:aim.BarrelRoom.radius)
  return _internal_radius();
}
inline void BarrelRoom::set_radius(float value) {
  _internal_set_radius(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:aim.BarrelRoom.radius)
}
inline float BarrelRoom::_internal_radius() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.radius_;
}
inline void BarrelRoom::_internal_set_radius(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.radius_ = value;
}

// -------------------------------------------------------------------

// Room

// .aim.StoredVec3 camera_position = 1;
inline bool Room::has_camera_position() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.camera_position_ != nullptr);
  return value;
}
inline const ::aim::StoredVec3& Room::_internal_camera_position() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::aim::StoredVec3* p = _impl_.camera_position_;
  return p != nullptr ? *p : reinterpret_cast<const ::aim::StoredVec3&>(::aim::_StoredVec3_default_instance_);
}
inline const ::aim::StoredVec3& Room::camera_position() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:aim.Room.camera_position)
  return _internal_camera_position();
}
inline void Room::unsafe_arena_set_allocated_camera_position(::aim::StoredVec3* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.camera_position_);
  }
  _impl_.camera_position_ = reinterpret_cast<::aim::StoredVec3*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aim.Room.camera_position)
}
inline ::aim::StoredVec3* Room::release_camera_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::aim::StoredVec3* released = _impl_.camera_position_;
  _impl_.camera_position_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::aim::StoredVec3* Room::unsafe_arena_release_camera_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:aim.Room.camera_position)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::aim::StoredVec3* temp = _impl_.camera_position_;
  _impl_.camera_position_ = nullptr;
  return temp;
}
inline ::aim::StoredVec3* Room::_internal_mutable_camera_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_position_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::aim::StoredVec3>(GetArena());
    _impl_.camera_position_ = reinterpret_cast<::aim::StoredVec3*>(p);
  }
  return _impl_.camera_position_;
}
inline ::aim::StoredVec3* Room::mutable_camera_position() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::aim::StoredVec3* _msg = _internal_mutable_camera_position();
  // @@protoc_insertion_point(field_mutable:aim.Room.camera_position)
  return _msg;
}
inline void Room::set_allocated_camera_position(::aim::StoredVec3* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.camera_position_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.camera_position_ = reinterpret_cast<::aim::StoredVec3*>(value);
  // @@protoc_insertion_point(field_set_allocated:aim.Room.camera_position)
}

// float start_pitch = 2;
inline bool Room::has_start_pitch() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Room::clear_start_pitch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_pitch_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float Room::start_pitch() const {
  // @@protoc_insertion_point(field_get:aim.Room.start_pitch)
  return _internal_start_pitch();
}
inline void Room::set_start_pitch(float value) {
  _internal_set_start_pitch(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:aim.Room.start_pitch)
}
inline float Room::_internal_start_pitch() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.start_pitch_;
}
inline void Room::_internal_set_start_pitch(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_pitch_ = value;
}

// float start_yaw = 3;
inline bool Room::has_start_yaw() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void Room::clear_start_yaw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_yaw_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float Room::start_yaw() const {
  // @@protoc_insertion_point(field_get:aim.Room.start_yaw)
  return _internal_start_yaw();
}
inline void Room::set_start_yaw(float value) {
  _internal_set_start_yaw(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:aim.Room.start_yaw)
}
inline float Room::_internal_start_yaw() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.start_yaw_;
}
inline void Room::_internal_set_start_yaw(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_yaw_ = value;
}

// .aim.SimpleRoom simple_room = 4;
inline bool Room::has_simple_room() const {
  return type_case() == kSimpleRoom;
}
inline bool Room::_internal_has_simple_room() const {
  return type_case() == kSimpleRoom;
}
inline void Room::set_has_simple_room() {
  _impl_._oneof_case_[0] = kSimpleRoom;
}
inline void Room::clear_simple_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kSimpleRoom) {
    if (GetArena() == nullptr) {
      delete _impl_.type_.simple_room_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.simple_room_);
    }
    clear_has_type();
  }
}
inline ::aim::SimpleRoom* Room::release_simple_room() {
  // @@protoc_insertion_point(field_release:aim.Room.simple_room)
  if (type_case() == kSimpleRoom) {
    clear_has_type();
    auto* temp = _impl_.type_.simple_room_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.type_.simple_room_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::aim::SimpleRoom& Room::_internal_simple_room() const {
  return type_case() == kSimpleRoom ? *_impl_.type_.simple_room_ : reinterpret_cast<::aim::SimpleRoom&>(::aim::_SimpleRoom_default_instance_);
}
inline const ::aim::SimpleRoom& Room::simple_room() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:aim.Room.simple_room)
  return _internal_simple_room();
}
inline ::aim::SimpleRoom* Room::unsafe_arena_release_simple_room() {
  // @@protoc_insertion_point(field_unsafe_arena_release:aim.Room.simple_room)
  if (type_case() == kSimpleRoom) {
    clear_has_type();
    auto* temp = _impl_.type_.simple_room_;
    _impl_.type_.simple_room_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Room::unsafe_arena_set_allocated_simple_room(::aim::SimpleRoom* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_type();
  if (value) {
    set_has_simple_room();
    _impl_.type_.simple_room_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aim.Room.simple_room)
}
inline ::aim::SimpleRoom* Room::_internal_mutable_simple_room() {
  if (type_case() != kSimpleRoom) {
    clear_type();
    set_has_simple_room();
    _impl_.type_.simple_room_ =
        ::google::protobuf::Message::DefaultConstruct<::aim::SimpleRoom>(GetArena());
  }
  return _impl_.type_.simple_room_;
}
inline ::aim::SimpleRoom* Room::mutable_simple_room() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::aim::SimpleRoom* _msg = _internal_mutable_simple_room();
  // @@protoc_insertion_point(field_mutable:aim.Room.simple_room)
  return _msg;
}

// .aim.CylinderRoom cylinder_room = 5;
inline bool Room::has_cylinder_room() const {
  return type_case() == kCylinderRoom;
}
inline bool Room::_internal_has_cylinder_room() const {
  return type_case() == kCylinderRoom;
}
inline void Room::set_has_cylinder_room() {
  _impl_._oneof_case_[0] = kCylinderRoom;
}
inline void Room::clear_cylinder_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kCylinderRoom) {
    if (GetArena() == nullptr) {
      delete _impl_.type_.cylinder_room_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.cylinder_room_);
    }
    clear_has_type();
  }
}
inline ::aim::CylinderRoom* Room::release_cylinder_room() {
  // @@protoc_insertion_point(field_release:aim.Room.cylinder_room)
  if (type_case() == kCylinderRoom) {
    clear_has_type();
    auto* temp = _impl_.type_.cylinder_room_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.type_.cylinder_room_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::aim::CylinderRoom& Room::_internal_cylinder_room() const {
  return type_case() == kCylinderRoom ? *_impl_.type_.cylinder_room_ : reinterpret_cast<::aim::CylinderRoom&>(::aim::_CylinderRoom_default_instance_);
}
inline const ::aim::CylinderRoom& Room::cylinder_room() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:aim.Room.cylinder_room)
  return _internal_cylinder_room();
}
inline ::aim::CylinderRoom* Room::unsafe_arena_release_cylinder_room() {
  // @@protoc_insertion_point(field_unsafe_arena_release:aim.Room.cylinder_room)
  if (type_case() == kCylinderRoom) {
    clear_has_type();
    auto* temp = _impl_.type_.cylinder_room_;
    _impl_.type_.cylinder_room_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Room::unsafe_arena_set_allocated_cylinder_room(::aim::CylinderRoom* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_type();
  if (value) {
    set_has_cylinder_room();
    _impl_.type_.cylinder_room_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aim.Room.cylinder_room)
}
inline ::aim::CylinderRoom* Room::_internal_mutable_cylinder_room() {
  if (type_case() != kCylinderRoom) {
    clear_type();
    set_has_cylinder_room();
    _impl_.type_.cylinder_room_ =
        ::google::protobuf::Message::DefaultConstruct<::aim::CylinderRoom>(GetArena());
  }
  return _impl_.type_.cylinder_room_;
}
inline ::aim::CylinderRoom* Room::mutable_cylinder_room() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::aim::CylinderRoom* _msg = _internal_mutable_cylinder_room();
  // @@protoc_insertion_point(field_mutable:aim.Room.cylinder_room)
  return _msg;
}

// .aim.BarrelRoom barrel_room = 6;
inline bool Room::has_barrel_room() const {
  return type_case() == kBarrelRoom;
}
inline bool Room::_internal_has_barrel_room() const {
  return type_case() == kBarrelRoom;
}
inline void Room::set_has_barrel_room() {
  _impl_._oneof_case_[0] = kBarrelRoom;
}
inline void Room::clear_barrel_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kBarrelRoom) {
    if (GetArena() == nullptr) {
      delete _impl_.type_.barrel_room_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.barrel_room_);
    }
    clear_has_type();
  }
}
inline ::aim::BarrelRoom* Room::release_barrel_room() {
  // @@protoc_insertion_point(field_release:aim.Room.barrel_room)
  if (type_case() == kBarrelRoom) {
    clear_has_type();
    auto* temp = _impl_.type_.barrel_room_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.type_.barrel_room_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::aim::BarrelRoom& Room::_internal_barrel_room() const {
  return type_case() == kBarrelRoom ? *_impl_.type_.barrel_room_ : reinterpret_cast<::aim::BarrelRoom&>(::aim::_BarrelRoom_default_instance_);
}
inline const ::aim::BarrelRoom& Room::barrel_room() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:aim.Room.barrel_room)
  return _internal_barrel_room();
}
inline ::aim::BarrelRoom* Room::unsafe_arena_release_barrel_room() {
  // @@protoc_insertion_point(field_unsafe_arena_release:aim.Room.barrel_room)
  if (type_case() == kBarrelRoom) {
    clear_has_type();
    auto* temp = _impl_.type_.barrel_room_;
    _impl_.type_.barrel_room_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Room::unsafe_arena_set_allocated_barrel_room(::aim::BarrelRoom* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_type();
  if (value) {
    set_has_barrel_room();
    _impl_.type_.barrel_room_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aim.Room.barrel_room)
}
inline ::aim::BarrelRoom* Room::_internal_mutable_barrel_room() {
  if (type_case() != kBarrelRoom) {
    clear_type();
    set_has_barrel_room();
    _impl_.type_.barrel_room_ =
        ::google::protobuf::Message::DefaultConstruct<::aim::BarrelRoom>(GetArena());
  }
  return _impl_.type_.barrel_room_;
}
inline ::aim::BarrelRoom* Room::mutable_barrel_room() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::aim::BarrelRoom* _msg = _internal_mutable_barrel_room();
  // @@protoc_insertion_point(field_mutable:aim.Room.barrel_room)
  return _msg;
}

inline bool Room::has_type() const {
  return type_case() != TYPE_NOT_SET;
}
inline void Room::clear_has_type() {
  _impl_._oneof_case_[0] = TYPE_NOT_SET;
}
inline Room::TypeCase Room::type_case() const {
  return Room::TypeCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// RegionLength

// float x_percent_value = 1;
inline bool RegionLength::has_x_percent_value() const {
  return type_case() == kXPercentValue;
}
inline void RegionLength::set_has_x_percent_value() {
  _impl_._oneof_case_[0] = kXPercentValue;
}
inline void RegionLength::clear_x_percent_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kXPercentValue) {
    _impl_.type_.x_percent_value_ = 0;
    clear_has_type();
  }
}
inline float RegionLength::x_percent_value() const {
  // @@protoc_insertion_point(field_get:aim.RegionLength.x_percent_value)
  return _internal_x_percent_value();
}
inline void RegionLength::set_x_percent_value(float value) {
  if (type_case() != kXPercentValue) {
    clear_type();
    set_has_x_percent_value();
  }
  _impl_.type_.x_percent_value_ = value;
  // @@protoc_insertion_point(field_set:aim.RegionLength.x_percent_value)
}
inline float RegionLength::_internal_x_percent_value() const {
  if (type_case() == kXPercentValue) {
    return _impl_.type_.x_percent_value_;
  }
  return 0;
}

// float y_percent_value = 2;
inline bool RegionLength::has_y_percent_value() const {
  return type_case() == kYPercentValue;
}
inline void RegionLength::set_has_y_percent_value() {
  _impl_._oneof_case_[0] = kYPercentValue;
}
inline void RegionLength::clear_y_percent_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kYPercentValue) {
    _impl_.type_.y_percent_value_ = 0;
    clear_has_type();
  }
}
inline float RegionLength::y_percent_value() const {
  // @@protoc_insertion_point(field_get:aim.RegionLength.y_percent_value)
  return _internal_y_percent_value();
}
inline void RegionLength::set_y_percent_value(float value) {
  if (type_case() != kYPercentValue) {
    clear_type();
    set_has_y_percent_value();
  }
  _impl_.type_.y_percent_value_ = value;
  // @@protoc_insertion_point(field_set:aim.RegionLength.y_percent_value)
}
inline float RegionLength::_internal_y_percent_value() const {
  if (type_case() == kYPercentValue) {
    return _impl_.type_.y_percent_value_;
  }
  return 0;
}

// float value = 3;
inline bool RegionLength::has_value() const {
  return type_case() == kValue;
}
inline void RegionLength::set_has_value() {
  _impl_._oneof_case_[0] = kValue;
}
inline void RegionLength::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kValue) {
    _impl_.type_.value_ = 0;
    clear_has_type();
  }
}
inline float RegionLength::value() const {
  // @@protoc_insertion_point(field_get:aim.RegionLength.value)
  return _internal_value();
}
inline void RegionLength::set_value(float value) {
  if (type_case() != kValue) {
    clear_type();
    set_has_value();
  }
  _impl_.type_.value_ = value;
  // @@protoc_insertion_point(field_set:aim.RegionLength.value)
}
inline float RegionLength::_internal_value() const {
  if (type_case() == kValue) {
    return _impl_.type_.value_;
  }
  return 0;
}

inline bool RegionLength::has_type() const {
  return type_case() != TYPE_NOT_SET;
}
inline void RegionLength::clear_has_type() {
  _impl_._oneof_case_[0] = TYPE_NOT_SET;
}
inline RegionLength::TypeCase RegionLength::type_case() const {
  return RegionLength::TypeCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// RegionVec2

// .aim.RegionLength x = 1;
inline bool RegionVec2::has_x() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.x_ != nullptr);
  return value;
}
inline void RegionVec2::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.x_ != nullptr) _impl_.x_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::aim::RegionLength& RegionVec2::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::aim::RegionLength* p = _impl_.x_;
  return p != nullptr ? *p : reinterpret_cast<const ::aim::RegionLength&>(::aim::_RegionLength_default_instance_);
}
inline const ::aim::RegionLength& RegionVec2::x() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:aim.RegionVec2.x)
  return _internal_x();
}
inline void RegionVec2::unsafe_arena_set_allocated_x(::aim::RegionLength* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.x_);
  }
  _impl_.x_ = reinterpret_cast<::aim::RegionLength*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aim.RegionVec2.x)
}
inline ::aim::RegionLength* RegionVec2::release_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::aim::RegionLength* released = _impl_.x_;
  _impl_.x_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::aim::RegionLength* RegionVec2::unsafe_arena_release_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:aim.RegionVec2.x)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::aim::RegionLength* temp = _impl_.x_;
  _impl_.x_ = nullptr;
  return temp;
}
inline ::aim::RegionLength* RegionVec2::_internal_mutable_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.x_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::aim::RegionLength>(GetArena());
    _impl_.x_ = reinterpret_cast<::aim::RegionLength*>(p);
  }
  return _impl_.x_;
}
inline ::aim::RegionLength* RegionVec2::mutable_x() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::aim::RegionLength* _msg = _internal_mutable_x();
  // @@protoc_insertion_point(field_mutable:aim.RegionVec2.x)
  return _msg;
}
inline void RegionVec2::set_allocated_x(::aim::RegionLength* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.x_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.x_ = reinterpret_cast<::aim::RegionLength*>(value);
  // @@protoc_insertion_point(field_set_allocated:aim.RegionVec2.x)
}

// .aim.RegionLength y = 2;
inline bool RegionVec2::has_y() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.y_ != nullptr);
  return value;
}
inline void RegionVec2::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.y_ != nullptr) _impl_.y_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::aim::RegionLength& RegionVec2::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::aim::RegionLength* p = _impl_.y_;
  return p != nullptr ? *p : reinterpret_cast<const ::aim::RegionLength&>(::aim::_RegionLength_default_instance_);
}
inline const ::aim::RegionLength& RegionVec2::y() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:aim.RegionVec2.y)
  return _internal_y();
}
inline void RegionVec2::unsafe_arena_set_allocated_y(::aim::RegionLength* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.y_);
  }
  _impl_.y_ = reinterpret_cast<::aim::RegionLength*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aim.RegionVec2.y)
}
inline ::aim::RegionLength* RegionVec2::release_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::aim::RegionLength* released = _impl_.y_;
  _impl_.y_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::aim::RegionLength* RegionVec2::unsafe_arena_release_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:aim.RegionVec2.y)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::aim::RegionLength* temp = _impl_.y_;
  _impl_.y_ = nullptr;
  return temp;
}
inline ::aim::RegionLength* RegionVec2::_internal_mutable_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.y_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::aim::RegionLength>(GetArena());
    _impl_.y_ = reinterpret_cast<::aim::RegionLength*>(p);
  }
  return _impl_.y_;
}
inline ::aim::RegionLength* RegionVec2::mutable_y() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::aim::RegionLength* _msg = _internal_mutable_y();
  // @@protoc_insertion_point(field_mutable:aim.RegionVec2.y)
  return _msg;
}
inline void RegionVec2::set_allocated_y(::aim::RegionLength* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.y_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.y_ = reinterpret_cast<::aim::RegionLength*>(value);
  // @@protoc_insertion_point(field_set_allocated:aim.RegionVec2.y)
}

// -------------------------------------------------------------------

// RegionVec3

// .aim.RegionLength x = 1;
inline bool RegionVec3::has_x() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.x_ != nullptr);
  return value;
}
inline void RegionVec3::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.x_ != nullptr) _impl_.x_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::aim::RegionLength& RegionVec3::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::aim::RegionLength* p = _impl_.x_;
  return p != nullptr ? *p : reinterpret_cast<const ::aim::RegionLength&>(::aim::_RegionLength_default_instance_);
}
inline const ::aim::RegionLength& RegionVec3::x() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:aim.RegionVec3.x)
  return _internal_x();
}
inline void RegionVec3::unsafe_arena_set_allocated_x(::aim::RegionLength* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.x_);
  }
  _impl_.x_ = reinterpret_cast<::aim::RegionLength*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aim.RegionVec3.x)
}
inline ::aim::RegionLength* RegionVec3::release_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::aim::RegionLength* released = _impl_.x_;
  _impl_.x_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::aim::RegionLength* RegionVec3::unsafe_arena_release_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:aim.RegionVec3.x)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::aim::RegionLength* temp = _impl_.x_;
  _impl_.x_ = nullptr;
  return temp;
}
inline ::aim::RegionLength* RegionVec3::_internal_mutable_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.x_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::aim::RegionLength>(GetArena());
    _impl_.x_ = reinterpret_cast<::aim::RegionLength*>(p);
  }
  return _impl_.x_;
}
inline ::aim::RegionLength* RegionVec3::mutable_x() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::aim::RegionLength* _msg = _internal_mutable_x();
  // @@protoc_insertion_point(field_mutable:aim.RegionVec3.x)
  return _msg;
}
inline void RegionVec3::set_allocated_x(::aim::RegionLength* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.x_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.x_ = reinterpret_cast<::aim::RegionLength*>(value);
  // @@protoc_insertion_point(field_set_allocated:aim.RegionVec3.x)
}

// .aim.RegionLength y = 2;
inline bool RegionVec3::has_y() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.y_ != nullptr);
  return value;
}
inline void RegionVec3::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.y_ != nullptr) _impl_.y_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::aim::RegionLength& RegionVec3::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::aim::RegionLength* p = _impl_.y_;
  return p != nullptr ? *p : reinterpret_cast<const ::aim::RegionLength&>(::aim::_RegionLength_default_instance_);
}
inline const ::aim::RegionLength& RegionVec3::y() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:aim.RegionVec3.y)
  return _internal_y();
}
inline void RegionVec3::unsafe_arena_set_allocated_y(::aim::RegionLength* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.y_);
  }
  _impl_.y_ = reinterpret_cast<::aim::RegionLength*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aim.RegionVec3.y)
}
inline ::aim::RegionLength* RegionVec3::release_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::aim::RegionLength* released = _impl_.y_;
  _impl_.y_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::aim::RegionLength* RegionVec3::unsafe_arena_release_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:aim.RegionVec3.y)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::aim::RegionLength* temp = _impl_.y_;
  _impl_.y_ = nullptr;
  return temp;
}
inline ::aim::RegionLength* RegionVec3::_internal_mutable_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.y_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::aim::RegionLength>(GetArena());
    _impl_.y_ = reinterpret_cast<::aim::RegionLength*>(p);
  }
  return _impl_.y_;
}
inline ::aim::RegionLength* RegionVec3::mutable_y() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::aim::RegionLength* _msg = _internal_mutable_y();
  // @@protoc_insertion_point(field_mutable:aim.RegionVec3.y)
  return _msg;
}
inline void RegionVec3::set_allocated_y(::aim::RegionLength* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.y_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.y_ = reinterpret_cast<::aim::RegionLength*>(value);
  // @@protoc_insertion_point(field_set_allocated:aim.RegionVec3.y)
}

// .aim.RegionLength z = 3;
inline bool RegionVec3::has_z() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.z_ != nullptr);
  return value;
}
inline void RegionVec3::clear_z() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.z_ != nullptr) _impl_.z_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::aim::RegionLength& RegionVec3::_internal_z() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::aim::RegionLength* p = _impl_.z_;
  return p != nullptr ? *p : reinterpret_cast<const ::aim::RegionLength&>(::aim::_RegionLength_default_instance_);
}
inline const ::aim::RegionLength& RegionVec3::z() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:aim.RegionVec3.z)
  return _internal_z();
}
inline void RegionVec3::unsafe_arena_set_allocated_z(::aim::RegionLength* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.z_);
  }
  _impl_.z_ = reinterpret_cast<::aim::RegionLength*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aim.RegionVec3.z)
}
inline ::aim::RegionLength* RegionVec3::release_z() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::aim::RegionLength* released = _impl_.z_;
  _impl_.z_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::aim::RegionLength* RegionVec3::unsafe_arena_release_z() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:aim.RegionVec3.z)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::aim::RegionLength* temp = _impl_.z_;
  _impl_.z_ = nullptr;
  return temp;
}
inline ::aim::RegionLength* RegionVec3::_internal_mutable_z() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.z_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::aim::RegionLength>(GetArena());
    _impl_.z_ = reinterpret_cast<::aim::RegionLength*>(p);
  }
  return _impl_.z_;
}
inline ::aim::RegionLength* RegionVec3::mutable_z() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::aim::RegionLength* _msg = _internal_mutable_z();
  // @@protoc_insertion_point(field_mutable:aim.RegionVec3.z)
  return _msg;
}
inline void RegionVec3::set_allocated_z(::aim::RegionLength* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.z_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.z_ = reinterpret_cast<::aim::RegionLength*>(value);
  // @@protoc_insertion_point(field_set_allocated:aim.RegionVec3.z)
}

// -------------------------------------------------------------------

// TargetRegion

// float percent_chance = 1;
inline bool TargetRegion::has_percent_chance() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TargetRegion::clear_percent_chance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.percent_chance_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float TargetRegion::percent_chance() const {
  // @@protoc_insertion_point(field_get:aim.TargetRegion.percent_chance)
  return _internal_percent_chance();
}
inline void TargetRegion::set_percent_chance(float value) {
  _internal_set_percent_chance(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:aim.TargetRegion.percent_chance)
}
inline float TargetRegion::_internal_percent_chance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.percent_chance_;
}
inline void TargetRegion::_internal_set_percent_chance(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.percent_chance_ = value;
}

// .aim.RegionLength x_offset = 2;
inline bool TargetRegion::has_x_offset() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.x_offset_ != nullptr);
  return value;
}
inline void TargetRegion::clear_x_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.x_offset_ != nullptr) _impl_.x_offset_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::aim::RegionLength& TargetRegion::_internal_x_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::aim::RegionLength* p = _impl_.x_offset_;
  return p != nullptr ? *p : reinterpret_cast<const ::aim::RegionLength&>(::aim::_RegionLength_default_instance_);
}
inline const ::aim::RegionLength& TargetRegion::x_offset() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:aim.TargetRegion.x_offset)
  return _internal_x_offset();
}
inline void TargetRegion::unsafe_arena_set_allocated_x_offset(::aim::RegionLength* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.x_offset_);
  }
  _impl_.x_offset_ = reinterpret_cast<::aim::RegionLength*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aim.TargetRegion.x_offset)
}
inline ::aim::RegionLength* TargetRegion::release_x_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::aim::RegionLength* released = _impl_.x_offset_;
  _impl_.x_offset_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::aim::RegionLength* TargetRegion::unsafe_arena_release_x_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:aim.TargetRegion.x_offset)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::aim::RegionLength* temp = _impl_.x_offset_;
  _impl_.x_offset_ = nullptr;
  return temp;
}
inline ::aim::RegionLength* TargetRegion::_internal_mutable_x_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.x_offset_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::aim::RegionLength>(GetArena());
    _impl_.x_offset_ = reinterpret_cast<::aim::RegionLength*>(p);
  }
  return _impl_.x_offset_;
}
inline ::aim::RegionLength* TargetRegion::mutable_x_offset() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::aim::RegionLength* _msg = _internal_mutable_x_offset();
  // @@protoc_insertion_point(field_mutable:aim.TargetRegion.x_offset)
  return _msg;
}
inline void TargetRegion::set_allocated_x_offset(::aim::RegionLength* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.x_offset_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.x_offset_ = reinterpret_cast<::aim::RegionLength*>(value);
  // @@protoc_insertion_point(field_set_allocated:aim.TargetRegion.x_offset)
}

// .aim.RegionLength y_offset = 3;
inline bool TargetRegion::has_y_offset() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.y_offset_ != nullptr);
  return value;
}
inline void TargetRegion::clear_y_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.y_offset_ != nullptr) _impl_.y_offset_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::aim::RegionLength& TargetRegion::_internal_y_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::aim::RegionLength* p = _impl_.y_offset_;
  return p != nullptr ? *p : reinterpret_cast<const ::aim::RegionLength&>(::aim::_RegionLength_default_instance_);
}
inline const ::aim::RegionLength& TargetRegion::y_offset() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:aim.TargetRegion.y_offset)
  return _internal_y_offset();
}
inline void TargetRegion::unsafe_arena_set_allocated_y_offset(::aim::RegionLength* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.y_offset_);
  }
  _impl_.y_offset_ = reinterpret_cast<::aim::RegionLength*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aim.TargetRegion.y_offset)
}
inline ::aim::RegionLength* TargetRegion::release_y_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::aim::RegionLength* released = _impl_.y_offset_;
  _impl_.y_offset_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::aim::RegionLength* TargetRegion::unsafe_arena_release_y_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:aim.TargetRegion.y_offset)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::aim::RegionLength* temp = _impl_.y_offset_;
  _impl_.y_offset_ = nullptr;
  return temp;
}
inline ::aim::RegionLength* TargetRegion::_internal_mutable_y_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.y_offset_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::aim::RegionLength>(GetArena());
    _impl_.y_offset_ = reinterpret_cast<::aim::RegionLength*>(p);
  }
  return _impl_.y_offset_;
}
inline ::aim::RegionLength* TargetRegion::mutable_y_offset() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::aim::RegionLength* _msg = _internal_mutable_y_offset();
  // @@protoc_insertion_point(field_mutable:aim.TargetRegion.y_offset)
  return _msg;
}
inline void TargetRegion::set_allocated_y_offset(::aim::RegionLength* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.y_offset_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.y_offset_ = reinterpret_cast<::aim::RegionLength*>(value);
  // @@protoc_insertion_point(field_set_allocated:aim.TargetRegion.y_offset)
}

// .aim.RectangleTargetRegion rectangle = 4;
inline bool TargetRegion::has_rectangle() const {
  return type_case() == kRectangle;
}
inline bool TargetRegion::_internal_has_rectangle() const {
  return type_case() == kRectangle;
}
inline void TargetRegion::set_has_rectangle() {
  _impl_._oneof_case_[0] = kRectangle;
}
inline void TargetRegion::clear_rectangle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kRectangle) {
    if (GetArena() == nullptr) {
      delete _impl_.type_.rectangle_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.rectangle_);
    }
    clear_has_type();
  }
}
inline ::aim::RectangleTargetRegion* TargetRegion::release_rectangle() {
  // @@protoc_insertion_point(field_release:aim.TargetRegion.rectangle)
  if (type_case() == kRectangle) {
    clear_has_type();
    auto* temp = _impl_.type_.rectangle_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.type_.rectangle_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::aim::RectangleTargetRegion& TargetRegion::_internal_rectangle() const {
  return type_case() == kRectangle ? *_impl_.type_.rectangle_ : reinterpret_cast<::aim::RectangleTargetRegion&>(::aim::_RectangleTargetRegion_default_instance_);
}
inline const ::aim::RectangleTargetRegion& TargetRegion::rectangle() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:aim.TargetRegion.rectangle)
  return _internal_rectangle();
}
inline ::aim::RectangleTargetRegion* TargetRegion::unsafe_arena_release_rectangle() {
  // @@protoc_insertion_point(field_unsafe_arena_release:aim.TargetRegion.rectangle)
  if (type_case() == kRectangle) {
    clear_has_type();
    auto* temp = _impl_.type_.rectangle_;
    _impl_.type_.rectangle_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TargetRegion::unsafe_arena_set_allocated_rectangle(::aim::RectangleTargetRegion* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_type();
  if (value) {
    set_has_rectangle();
    _impl_.type_.rectangle_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aim.TargetRegion.rectangle)
}
inline ::aim::RectangleTargetRegion* TargetRegion::_internal_mutable_rectangle() {
  if (type_case() != kRectangle) {
    clear_type();
    set_has_rectangle();
    _impl_.type_.rectangle_ =
        ::google::protobuf::Message::DefaultConstruct<::aim::RectangleTargetRegion>(GetArena());
  }
  return _impl_.type_.rectangle_;
}
inline ::aim::RectangleTargetRegion* TargetRegion::mutable_rectangle() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::aim::RectangleTargetRegion* _msg = _internal_mutable_rectangle();
  // @@protoc_insertion_point(field_mutable:aim.TargetRegion.rectangle)
  return _msg;
}

// .aim.EllipseTargetRegion ellipse = 5;
inline bool TargetRegion::has_ellipse() const {
  return type_case() == kEllipse;
}
inline bool TargetRegion::_internal_has_ellipse() const {
  return type_case() == kEllipse;
}
inline void TargetRegion::set_has_ellipse() {
  _impl_._oneof_case_[0] = kEllipse;
}
inline void TargetRegion::clear_ellipse() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kEllipse) {
    if (GetArena() == nullptr) {
      delete _impl_.type_.ellipse_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.ellipse_);
    }
    clear_has_type();
  }
}
inline ::aim::EllipseTargetRegion* TargetRegion::release_ellipse() {
  // @@protoc_insertion_point(field_release:aim.TargetRegion.ellipse)
  if (type_case() == kEllipse) {
    clear_has_type();
    auto* temp = _impl_.type_.ellipse_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.type_.ellipse_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::aim::EllipseTargetRegion& TargetRegion::_internal_ellipse() const {
  return type_case() == kEllipse ? *_impl_.type_.ellipse_ : reinterpret_cast<::aim::EllipseTargetRegion&>(::aim::_EllipseTargetRegion_default_instance_);
}
inline const ::aim::EllipseTargetRegion& TargetRegion::ellipse() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:aim.TargetRegion.ellipse)
  return _internal_ellipse();
}
inline ::aim::EllipseTargetRegion* TargetRegion::unsafe_arena_release_ellipse() {
  // @@protoc_insertion_point(field_unsafe_arena_release:aim.TargetRegion.ellipse)
  if (type_case() == kEllipse) {
    clear_has_type();
    auto* temp = _impl_.type_.ellipse_;
    _impl_.type_.ellipse_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TargetRegion::unsafe_arena_set_allocated_ellipse(::aim::EllipseTargetRegion* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_type();
  if (value) {
    set_has_ellipse();
    _impl_.type_.ellipse_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aim.TargetRegion.ellipse)
}
inline ::aim::EllipseTargetRegion* TargetRegion::_internal_mutable_ellipse() {
  if (type_case() != kEllipse) {
    clear_type();
    set_has_ellipse();
    _impl_.type_.ellipse_ =
        ::google::protobuf::Message::DefaultConstruct<::aim::EllipseTargetRegion>(GetArena());
  }
  return _impl_.type_.ellipse_;
}
inline ::aim::EllipseTargetRegion* TargetRegion::mutable_ellipse() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::aim::EllipseTargetRegion* _msg = _internal_mutable_ellipse();
  // @@protoc_insertion_point(field_mutable:aim.TargetRegion.ellipse)
  return _msg;
}

// .aim.CircleTargetRegion circle = 6;
inline bool TargetRegion::has_circle() const {
  return type_case() == kCircle;
}
inline bool TargetRegion::_internal_has_circle() const {
  return type_case() == kCircle;
}
inline void TargetRegion::set_has_circle() {
  _impl_._oneof_case_[0] = kCircle;
}
inline void TargetRegion::clear_circle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kCircle) {
    if (GetArena() == nullptr) {
      delete _impl_.type_.circle_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.circle_);
    }
    clear_has_type();
  }
}
inline ::aim::CircleTargetRegion* TargetRegion::release_circle() {
  // @@protoc_insertion_point(field_release:aim.TargetRegion.circle)
  if (type_case() == kCircle) {
    clear_has_type();
    auto* temp = _impl_.type_.circle_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.type_.circle_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::aim::CircleTargetRegion& TargetRegion::_internal_circle() const {
  return type_case() == kCircle ? *_impl_.type_.circle_ : reinterpret_cast<::aim::CircleTargetRegion&>(::aim::_CircleTargetRegion_default_instance_);
}
inline const ::aim::CircleTargetRegion& TargetRegion::circle() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:aim.TargetRegion.circle)
  return _internal_circle();
}
inline ::aim::CircleTargetRegion* TargetRegion::unsafe_arena_release_circle() {
  // @@protoc_insertion_point(field_unsafe_arena_release:aim.TargetRegion.circle)
  if (type_case() == kCircle) {
    clear_has_type();
    auto* temp = _impl_.type_.circle_;
    _impl_.type_.circle_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TargetRegion::unsafe_arena_set_allocated_circle(::aim::CircleTargetRegion* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_type();
  if (value) {
    set_has_circle();
    _impl_.type_.circle_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aim.TargetRegion.circle)
}
inline ::aim::CircleTargetRegion* TargetRegion::_internal_mutable_circle() {
  if (type_case() != kCircle) {
    clear_type();
    set_has_circle();
    _impl_.type_.circle_ =
        ::google::protobuf::Message::DefaultConstruct<::aim::CircleTargetRegion>(GetArena());
  }
  return _impl_.type_.circle_;
}
inline ::aim::CircleTargetRegion* TargetRegion::mutable_circle() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::aim::CircleTargetRegion* _msg = _internal_mutable_circle();
  // @@protoc_insertion_point(field_mutable:aim.TargetRegion.circle)
  return _msg;
}

inline bool TargetRegion::has_type() const {
  return type_case() != TYPE_NOT_SET;
}
inline void TargetRegion::clear_has_type() {
  _impl_._oneof_case_[0] = TYPE_NOT_SET;
}
inline TargetRegion::TypeCase TargetRegion::type_case() const {
  return TargetRegion::TypeCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// RectangleTargetRegion

// .aim.RegionLength x_length = 1;
inline bool RectangleTargetRegion::has_x_length() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.x_length_ != nullptr);
  return value;
}
inline void RectangleTargetRegion::clear_x_length() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.x_length_ != nullptr) _impl_.x_length_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::aim::RegionLength& RectangleTargetRegion::_internal_x_length() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::aim::RegionLength* p = _impl_.x_length_;
  return p != nullptr ? *p : reinterpret_cast<const ::aim::RegionLength&>(::aim::_RegionLength_default_instance_);
}
inline const ::aim::RegionLength& RectangleTargetRegion::x_length() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:aim.RectangleTargetRegion.x_length)
  return _internal_x_length();
}
inline void RectangleTargetRegion::unsafe_arena_set_allocated_x_length(::aim::RegionLength* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.x_length_);
  }
  _impl_.x_length_ = reinterpret_cast<::aim::RegionLength*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aim.RectangleTargetRegion.x_length)
}
inline ::aim::RegionLength* RectangleTargetRegion::release_x_length() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::aim::RegionLength* released = _impl_.x_length_;
  _impl_.x_length_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::aim::RegionLength* RectangleTargetRegion::unsafe_arena_release_x_length() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:aim.RectangleTargetRegion.x_length)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::aim::RegionLength* temp = _impl_.x_length_;
  _impl_.x_length_ = nullptr;
  return temp;
}
inline ::aim::RegionLength* RectangleTargetRegion::_internal_mutable_x_length() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.x_length_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::aim::RegionLength>(GetArena());
    _impl_.x_length_ = reinterpret_cast<::aim::RegionLength*>(p);
  }
  return _impl_.x_length_;
}
inline ::aim::RegionLength* RectangleTargetRegion::mutable_x_length() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::aim::RegionLength* _msg = _internal_mutable_x_length();
  // @@protoc_insertion_point(field_mutable:aim.RectangleTargetRegion.x_length)
  return _msg;
}
inline void RectangleTargetRegion::set_allocated_x_length(::aim::RegionLength* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.x_length_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.x_length_ = reinterpret_cast<::aim::RegionLength*>(value);
  // @@protoc_insertion_point(field_set_allocated:aim.RectangleTargetRegion.x_length)
}

// .aim.RegionLength y_length = 2;
inline bool RectangleTargetRegion::has_y_length() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.y_length_ != nullptr);
  return value;
}
inline void RectangleTargetRegion::clear_y_length() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.y_length_ != nullptr) _impl_.y_length_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::aim::RegionLength& RectangleTargetRegion::_internal_y_length() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::aim::RegionLength* p = _impl_.y_length_;
  return p != nullptr ? *p : reinterpret_cast<const ::aim::RegionLength&>(::aim::_RegionLength_default_instance_);
}
inline const ::aim::RegionLength& RectangleTargetRegion::y_length() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:aim.RectangleTargetRegion.y_length)
  return _internal_y_length();
}
inline void RectangleTargetRegion::unsafe_arena_set_allocated_y_length(::aim::RegionLength* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.y_length_);
  }
  _impl_.y_length_ = reinterpret_cast<::aim::RegionLength*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aim.RectangleTargetRegion.y_length)
}
inline ::aim::RegionLength* RectangleTargetRegion::release_y_length() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::aim::RegionLength* released = _impl_.y_length_;
  _impl_.y_length_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::aim::RegionLength* RectangleTargetRegion::unsafe_arena_release_y_length() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:aim.RectangleTargetRegion.y_length)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::aim::RegionLength* temp = _impl_.y_length_;
  _impl_.y_length_ = nullptr;
  return temp;
}
inline ::aim::RegionLength* RectangleTargetRegion::_internal_mutable_y_length() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.y_length_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::aim::RegionLength>(GetArena());
    _impl_.y_length_ = reinterpret_cast<::aim::RegionLength*>(p);
  }
  return _impl_.y_length_;
}
inline ::aim::RegionLength* RectangleTargetRegion::mutable_y_length() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::aim::RegionLength* _msg = _internal_mutable_y_length();
  // @@protoc_insertion_point(field_mutable:aim.RectangleTargetRegion.y_length)
  return _msg;
}
inline void RectangleTargetRegion::set_allocated_y_length(::aim::RegionLength* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.y_length_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.y_length_ = reinterpret_cast<::aim::RegionLength*>(value);
  // @@protoc_insertion_point(field_set_allocated:aim.RectangleTargetRegion.y_length)
}

// .aim.RegionLength inner_x_length = 3;
inline bool RectangleTargetRegion::has_inner_x_length() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.inner_x_length_ != nullptr);
  return value;
}
inline void RectangleTargetRegion::clear_inner_x_length() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.inner_x_length_ != nullptr) _impl_.inner_x_length_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::aim::RegionLength& RectangleTargetRegion::_internal_inner_x_length() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::aim::RegionLength* p = _impl_.inner_x_length_;
  return p != nullptr ? *p : reinterpret_cast<const ::aim::RegionLength&>(::aim::_RegionLength_default_instance_);
}
inline const ::aim::RegionLength& RectangleTargetRegion::inner_x_length() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:aim.RectangleTargetRegion.inner_x_length)
  return _internal_inner_x_length();
}
inline void RectangleTargetRegion::unsafe_arena_set_allocated_inner_x_length(::aim::RegionLength* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.inner_x_length_);
  }
  _impl_.inner_x_length_ = reinterpret_cast<::aim::RegionLength*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aim.RectangleTargetRegion.inner_x_length)
}
inline ::aim::RegionLength* RectangleTargetRegion::release_inner_x_length() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::aim::RegionLength* released = _impl_.inner_x_length_;
  _impl_.inner_x_length_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::aim::RegionLength* RectangleTargetRegion::unsafe_arena_release_inner_x_length() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:aim.RectangleTargetRegion.inner_x_length)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::aim::RegionLength* temp = _impl_.inner_x_length_;
  _impl_.inner_x_length_ = nullptr;
  return temp;
}
inline ::aim::RegionLength* RectangleTargetRegion::_internal_mutable_inner_x_length() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.inner_x_length_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::aim::RegionLength>(GetArena());
    _impl_.inner_x_length_ = reinterpret_cast<::aim::RegionLength*>(p);
  }
  return _impl_.inner_x_length_;
}
inline ::aim::RegionLength* RectangleTargetRegion::mutable_inner_x_length() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::aim::RegionLength* _msg = _internal_mutable_inner_x_length();
  // @@protoc_insertion_point(field_mutable:aim.RectangleTargetRegion.inner_x_length)
  return _msg;
}
inline void RectangleTargetRegion::set_allocated_inner_x_length(::aim::RegionLength* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.inner_x_length_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.inner_x_length_ = reinterpret_cast<::aim::RegionLength*>(value);
  // @@protoc_insertion_point(field_set_allocated:aim.RectangleTargetRegion.inner_x_length)
}

// .aim.RegionLength inner_y_length = 4;
inline bool RectangleTargetRegion::has_inner_y_length() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.inner_y_length_ != nullptr);
  return value;
}
inline void RectangleTargetRegion::clear_inner_y_length() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.inner_y_length_ != nullptr) _impl_.inner_y_length_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::aim::RegionLength& RectangleTargetRegion::_internal_inner_y_length() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::aim::RegionLength* p = _impl_.inner_y_length_;
  return p != nullptr ? *p : reinterpret_cast<const ::aim::RegionLength&>(::aim::_RegionLength_default_instance_);
}
inline const ::aim::RegionLength& RectangleTargetRegion::inner_y_length() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:aim.RectangleTargetRegion.inner_y_length)
  return _internal_inner_y_length();
}
inline void RectangleTargetRegion::unsafe_arena_set_allocated_inner_y_length(::aim::RegionLength* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.inner_y_length_);
  }
  _impl_.inner_y_length_ = reinterpret_cast<::aim::RegionLength*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aim.RectangleTargetRegion.inner_y_length)
}
inline ::aim::RegionLength* RectangleTargetRegion::release_inner_y_length() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::aim::RegionLength* released = _impl_.inner_y_length_;
  _impl_.inner_y_length_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::aim::RegionLength* RectangleTargetRegion::unsafe_arena_release_inner_y_length() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:aim.RectangleTargetRegion.inner_y_length)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::aim::RegionLength* temp = _impl_.inner_y_length_;
  _impl_.inner_y_length_ = nullptr;
  return temp;
}
inline ::aim::RegionLength* RectangleTargetRegion::_internal_mutable_inner_y_length() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.inner_y_length_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::aim::RegionLength>(GetArena());
    _impl_.inner_y_length_ = reinterpret_cast<::aim::RegionLength*>(p);
  }
  return _impl_.inner_y_length_;
}
inline ::aim::RegionLength* RectangleTargetRegion::mutable_inner_y_length() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::aim::RegionLength* _msg = _internal_mutable_inner_y_length();
  // @@protoc_insertion_point(field_mutable:aim.RectangleTargetRegion.inner_y_length)
  return _msg;
}
inline void RectangleTargetRegion::set_allocated_inner_y_length(::aim::RegionLength* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.inner_y_length_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.inner_y_length_ = reinterpret_cast<::aim::RegionLength*>(value);
  // @@protoc_insertion_point(field_set_allocated:aim.RectangleTargetRegion.inner_y_length)
}

// -------------------------------------------------------------------

// EllipseTargetRegion

// .aim.RegionLength x_diameter = 1;
inline bool EllipseTargetRegion::has_x_diameter() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.x_diameter_ != nullptr);
  return value;
}
inline void EllipseTargetRegion::clear_x_diameter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.x_diameter_ != nullptr) _impl_.x_diameter_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::aim::RegionLength& EllipseTargetRegion::_internal_x_diameter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::aim::RegionLength* p = _impl_.x_diameter_;
  return p != nullptr ? *p : reinterpret_cast<const ::aim::RegionLength&>(::aim::_RegionLength_default_instance_);
}
inline const ::aim::RegionLength& EllipseTargetRegion::x_diameter() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:aim.EllipseTargetRegion.x_diameter)
  return _internal_x_diameter();
}
inline void EllipseTargetRegion::unsafe_arena_set_allocated_x_diameter(::aim::RegionLength* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.x_diameter_);
  }
  _impl_.x_diameter_ = reinterpret_cast<::aim::RegionLength*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aim.EllipseTargetRegion.x_diameter)
}
inline ::aim::RegionLength* EllipseTargetRegion::release_x_diameter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::aim::RegionLength* released = _impl_.x_diameter_;
  _impl_.x_diameter_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::aim::RegionLength* EllipseTargetRegion::unsafe_arena_release_x_diameter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:aim.EllipseTargetRegion.x_diameter)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::aim::RegionLength* temp = _impl_.x_diameter_;
  _impl_.x_diameter_ = nullptr;
  return temp;
}
inline ::aim::RegionLength* EllipseTargetRegion::_internal_mutable_x_diameter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.x_diameter_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::aim::RegionLength>(GetArena());
    _impl_.x_diameter_ = reinterpret_cast<::aim::RegionLength*>(p);
  }
  return _impl_.x_diameter_;
}
inline ::aim::RegionLength* EllipseTargetRegion::mutable_x_diameter() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::aim::RegionLength* _msg = _internal_mutable_x_diameter();
  // @@protoc_insertion_point(field_mutable:aim.EllipseTargetRegion.x_diameter)
  return _msg;
}
inline void EllipseTargetRegion::set_allocated_x_diameter(::aim::RegionLength* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.x_diameter_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.x_diameter_ = reinterpret_cast<::aim::RegionLength*>(value);
  // @@protoc_insertion_point(field_set_allocated:aim.EllipseTargetRegion.x_diameter)
}

// .aim.RegionLength y_diameter = 2;
inline bool EllipseTargetRegion::has_y_diameter() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.y_diameter_ != nullptr);
  return value;
}
inline void EllipseTargetRegion::clear_y_diameter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.y_diameter_ != nullptr) _impl_.y_diameter_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::aim::RegionLength& EllipseTargetRegion::_internal_y_diameter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::aim::RegionLength* p = _impl_.y_diameter_;
  return p != nullptr ? *p : reinterpret_cast<const ::aim::RegionLength&>(::aim::_RegionLength_default_instance_);
}
inline const ::aim::RegionLength& EllipseTargetRegion::y_diameter() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:aim.EllipseTargetRegion.y_diameter)
  return _internal_y_diameter();
}
inline void EllipseTargetRegion::unsafe_arena_set_allocated_y_diameter(::aim::RegionLength* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.y_diameter_);
  }
  _impl_.y_diameter_ = reinterpret_cast<::aim::RegionLength*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aim.EllipseTargetRegion.y_diameter)
}
inline ::aim::RegionLength* EllipseTargetRegion::release_y_diameter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::aim::RegionLength* released = _impl_.y_diameter_;
  _impl_.y_diameter_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::aim::RegionLength* EllipseTargetRegion::unsafe_arena_release_y_diameter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:aim.EllipseTargetRegion.y_diameter)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::aim::RegionLength* temp = _impl_.y_diameter_;
  _impl_.y_diameter_ = nullptr;
  return temp;
}
inline ::aim::RegionLength* EllipseTargetRegion::_internal_mutable_y_diameter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.y_diameter_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::aim::RegionLength>(GetArena());
    _impl_.y_diameter_ = reinterpret_cast<::aim::RegionLength*>(p);
  }
  return _impl_.y_diameter_;
}
inline ::aim::RegionLength* EllipseTargetRegion::mutable_y_diameter() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::aim::RegionLength* _msg = _internal_mutable_y_diameter();
  // @@protoc_insertion_point(field_mutable:aim.EllipseTargetRegion.y_diameter)
  return _msg;
}
inline void EllipseTargetRegion::set_allocated_y_diameter(::aim::RegionLength* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.y_diameter_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.y_diameter_ = reinterpret_cast<::aim::RegionLength*>(value);
  // @@protoc_insertion_point(field_set_allocated:aim.EllipseTargetRegion.y_diameter)
}

// -------------------------------------------------------------------

// CircleTargetRegion

// .aim.RegionLength diameter = 1;
inline bool CircleTargetRegion::has_diameter() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.diameter_ != nullptr);
  return value;
}
inline void CircleTargetRegion::clear_diameter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.diameter_ != nullptr) _impl_.diameter_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::aim::RegionLength& CircleTargetRegion::_internal_diameter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::aim::RegionLength* p = _impl_.diameter_;
  return p != nullptr ? *p : reinterpret_cast<const ::aim::RegionLength&>(::aim::_RegionLength_default_instance_);
}
inline const ::aim::RegionLength& CircleTargetRegion::diameter() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:aim.CircleTargetRegion.diameter)
  return _internal_diameter();
}
inline void CircleTargetRegion::unsafe_arena_set_allocated_diameter(::aim::RegionLength* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.diameter_);
  }
  _impl_.diameter_ = reinterpret_cast<::aim::RegionLength*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aim.CircleTargetRegion.diameter)
}
inline ::aim::RegionLength* CircleTargetRegion::release_diameter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::aim::RegionLength* released = _impl_.diameter_;
  _impl_.diameter_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::aim::RegionLength* CircleTargetRegion::unsafe_arena_release_diameter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:aim.CircleTargetRegion.diameter)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::aim::RegionLength* temp = _impl_.diameter_;
  _impl_.diameter_ = nullptr;
  return temp;
}
inline ::aim::RegionLength* CircleTargetRegion::_internal_mutable_diameter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.diameter_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::aim::RegionLength>(GetArena());
    _impl_.diameter_ = reinterpret_cast<::aim::RegionLength*>(p);
  }
  return _impl_.diameter_;
}
inline ::aim::RegionLength* CircleTargetRegion::mutable_diameter() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::aim::RegionLength* _msg = _internal_mutable_diameter();
  // @@protoc_insertion_point(field_mutable:aim.CircleTargetRegion.diameter)
  return _msg;
}
inline void CircleTargetRegion::set_allocated_diameter(::aim::RegionLength* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.diameter_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.diameter_ = reinterpret_cast<::aim::RegionLength*>(value);
  // @@protoc_insertion_point(field_set_allocated:aim.CircleTargetRegion.diameter)
}

// .aim.RegionLength inner_diameter = 2;
inline bool CircleTargetRegion::has_inner_diameter() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.inner_diameter_ != nullptr);
  return value;
}
inline void CircleTargetRegion::clear_inner_diameter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.inner_diameter_ != nullptr) _impl_.inner_diameter_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::aim::RegionLength& CircleTargetRegion::_internal_inner_diameter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::aim::RegionLength* p = _impl_.inner_diameter_;
  return p != nullptr ? *p : reinterpret_cast<const ::aim::RegionLength&>(::aim::_RegionLength_default_instance_);
}
inline const ::aim::RegionLength& CircleTargetRegion::inner_diameter() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:aim.CircleTargetRegion.inner_diameter)
  return _internal_inner_diameter();
}
inline void CircleTargetRegion::unsafe_arena_set_allocated_inner_diameter(::aim::RegionLength* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.inner_diameter_);
  }
  _impl_.inner_diameter_ = reinterpret_cast<::aim::RegionLength*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aim.CircleTargetRegion.inner_diameter)
}
inline ::aim::RegionLength* CircleTargetRegion::release_inner_diameter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::aim::RegionLength* released = _impl_.inner_diameter_;
  _impl_.inner_diameter_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::aim::RegionLength* CircleTargetRegion::unsafe_arena_release_inner_diameter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:aim.CircleTargetRegion.inner_diameter)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::aim::RegionLength* temp = _impl_.inner_diameter_;
  _impl_.inner_diameter_ = nullptr;
  return temp;
}
inline ::aim::RegionLength* CircleTargetRegion::_internal_mutable_inner_diameter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.inner_diameter_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::aim::RegionLength>(GetArena());
    _impl_.inner_diameter_ = reinterpret_cast<::aim::RegionLength*>(p);
  }
  return _impl_.inner_diameter_;
}
inline ::aim::RegionLength* CircleTargetRegion::mutable_inner_diameter() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::aim::RegionLength* _msg = _internal_mutable_inner_diameter();
  // @@protoc_insertion_point(field_mutable:aim.CircleTargetRegion.inner_diameter)
  return _msg;
}
inline void CircleTargetRegion::set_allocated_inner_diameter(::aim::RegionLength* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.inner_diameter_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.inner_diameter_ = reinterpret_cast<::aim::RegionLength*>(value);
  // @@protoc_insertion_point(field_set_allocated:aim.CircleTargetRegion.inner_diameter)
}

// -------------------------------------------------------------------

// TargetPlacementStrategy

// repeated .aim.TargetRegion regions = 1;
inline int TargetPlacementStrategy::_internal_regions_size() const {
  return _internal_regions().size();
}
inline int TargetPlacementStrategy::regions_size() const {
  return _internal_regions_size();
}
inline void TargetPlacementStrategy::clear_regions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.regions_.Clear();
}
inline ::aim::TargetRegion* TargetPlacementStrategy::mutable_regions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:aim.TargetPlacementStrategy.regions)
  return _internal_mutable_regions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::aim::TargetRegion>* TargetPlacementStrategy::mutable_regions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:aim.TargetPlacementStrategy.regions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_regions();
}
inline const ::aim::TargetRegion& TargetPlacementStrategy::regions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:aim.TargetPlacementStrategy.regions)
  return _internal_regions().Get(index);
}
inline ::aim::TargetRegion* TargetPlacementStrategy::add_regions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::aim::TargetRegion* _add = _internal_mutable_regions()->Add();
  // @@protoc_insertion_point(field_add:aim.TargetPlacementStrategy.regions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::aim::TargetRegion>& TargetPlacementStrategy::regions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:aim.TargetPlacementStrategy.regions)
  return _internal_regions();
}
inline const ::google::protobuf::RepeatedPtrField<::aim::TargetRegion>&
TargetPlacementStrategy::_internal_regions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.regions_;
}
inline ::google::protobuf::RepeatedPtrField<::aim::TargetRegion>*
TargetPlacementStrategy::_internal_mutable_regions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.regions_;
}

// repeated int32 region_order = 2;
inline int TargetPlacementStrategy::_internal_region_order_size() const {
  return _internal_region_order().size();
}
inline int TargetPlacementStrategy::region_order_size() const {
  return _internal_region_order_size();
}
inline void TargetPlacementStrategy::clear_region_order() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.region_order_.Clear();
}
inline ::int32_t TargetPlacementStrategy::region_order(int index) const {
  // @@protoc_insertion_point(field_get:aim.TargetPlacementStrategy.region_order)
  return _internal_region_order().Get(index);
}
inline void TargetPlacementStrategy::set_region_order(int index, ::int32_t value) {
  _internal_mutable_region_order()->Set(index, value);
  // @@protoc_insertion_point(field_set:aim.TargetPlacementStrategy.region_order)
}
inline void TargetPlacementStrategy::add_region_order(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_region_order()->Add(value);
  // @@protoc_insertion_point(field_add:aim.TargetPlacementStrategy.region_order)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& TargetPlacementStrategy::region_order() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:aim.TargetPlacementStrategy.region_order)
  return _internal_region_order();
}
inline ::google::protobuf::RepeatedField<::int32_t>* TargetPlacementStrategy::mutable_region_order()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:aim.TargetPlacementStrategy.region_order)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_region_order();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
TargetPlacementStrategy::_internal_region_order() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.region_order_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* TargetPlacementStrategy::_internal_mutable_region_order() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.region_order_;
}

// float min_distance = 3;
inline bool TargetPlacementStrategy::has_min_distance() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TargetPlacementStrategy::clear_min_distance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_distance_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float TargetPlacementStrategy::min_distance() const {
  // @@protoc_insertion_point(field_get:aim.TargetPlacementStrategy.min_distance)
  return _internal_min_distance();
}
inline void TargetPlacementStrategy::set_min_distance(float value) {
  _internal_set_min_distance(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:aim.TargetPlacementStrategy.min_distance)
}
inline float TargetPlacementStrategy::_internal_min_distance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_distance_;
}
inline void TargetPlacementStrategy::_internal_set_min_distance(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_distance_ = value;
}

// float fixed_distance_from_last_target = 4;
inline bool TargetPlacementStrategy::has_fixed_distance_from_last_target() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TargetPlacementStrategy::clear_fixed_distance_from_last_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fixed_distance_from_last_target_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float TargetPlacementStrategy::fixed_distance_from_last_target() const {
  // @@protoc_insertion_point(field_get:aim.TargetPlacementStrategy.fixed_distance_from_last_target)
  return _internal_fixed_distance_from_last_target();
}
inline void TargetPlacementStrategy::set_fixed_distance_from_last_target(float value) {
  _internal_set_fixed_distance_from_last_target(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:aim.TargetPlacementStrategy.fixed_distance_from_last_target)
}
inline float TargetPlacementStrategy::_internal_fixed_distance_from_last_target() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fixed_distance_from_last_target_;
}
inline void TargetPlacementStrategy::_internal_set_fixed_distance_from_last_target(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fixed_distance_from_last_target_ = value;
}

// float fixed_distance_jitter = 5;
inline bool TargetPlacementStrategy::has_fixed_distance_jitter() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TargetPlacementStrategy::clear_fixed_distance_jitter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fixed_distance_jitter_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float TargetPlacementStrategy::fixed_distance_jitter() const {
  // @@protoc_insertion_point(field_get:aim.TargetPlacementStrategy.fixed_distance_jitter)
  return _internal_fixed_distance_jitter();
}
inline void TargetPlacementStrategy::set_fixed_distance_jitter(float value) {
  _internal_set_fixed_distance_jitter(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:aim.TargetPlacementStrategy.fixed_distance_jitter)
}
inline float TargetPlacementStrategy::_internal_fixed_distance_jitter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fixed_distance_jitter_;
}
inline void TargetPlacementStrategy::_internal_set_fixed_distance_jitter(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fixed_distance_jitter_ = value;
}

// -------------------------------------------------------------------

// ScenarioReferenceOverrides

// float duration_seconds = 1;
inline bool ScenarioReferenceOverrides::has_duration_seconds() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ScenarioReferenceOverrides::clear_duration_seconds() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.duration_seconds_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float ScenarioReferenceOverrides::duration_seconds() const {
  // @@protoc_insertion_point(field_get:aim.ScenarioReferenceOverrides.duration_seconds)
  return _internal_duration_seconds();
}
inline void ScenarioReferenceOverrides::set_duration_seconds(float value) {
  _internal_set_duration_seconds(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:aim.ScenarioReferenceOverrides.duration_seconds)
}
inline float ScenarioReferenceOverrides::_internal_duration_seconds() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.duration_seconds_;
}
inline void ScenarioReferenceOverrides::_internal_set_duration_seconds(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.duration_seconds_ = value;
}

// float target_radius_multiplier = 2;
inline bool ScenarioReferenceOverrides::has_target_radius_multiplier() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void ScenarioReferenceOverrides::clear_target_radius_multiplier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_radius_multiplier_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float ScenarioReferenceOverrides::target_radius_multiplier() const {
  // @@protoc_insertion_point(field_get:aim.ScenarioReferenceOverrides.target_radius_multiplier)
  return _internal_target_radius_multiplier();
}
inline void ScenarioReferenceOverrides::set_target_radius_multiplier(float value) {
  _internal_set_target_radius_multiplier(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:aim.ScenarioReferenceOverrides.target_radius_multiplier)
}
inline float ScenarioReferenceOverrides::_internal_target_radius_multiplier() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_radius_multiplier_;
}
inline void ScenarioReferenceOverrides::_internal_set_target_radius_multiplier(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_radius_multiplier_ = value;
}

// int32 num_targets = 3;
inline bool ScenarioReferenceOverrides::has_num_targets() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void ScenarioReferenceOverrides::clear_num_targets() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_targets_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t ScenarioReferenceOverrides::num_targets() const {
  // @@protoc_insertion_point(field_get:aim.ScenarioReferenceOverrides.num_targets)
  return _internal_num_targets();
}
inline void ScenarioReferenceOverrides::set_num_targets(::int32_t value) {
  _internal_set_num_targets(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:aim.ScenarioReferenceOverrides.num_targets)
}
inline ::int32_t ScenarioReferenceOverrides::_internal_num_targets() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_targets_;
}
inline void ScenarioReferenceOverrides::_internal_set_num_targets(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_targets_ = value;
}

// float speed_multiplier = 4;
inline bool ScenarioReferenceOverrides::has_speed_multiplier() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void ScenarioReferenceOverrides::clear_speed_multiplier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_multiplier_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline float ScenarioReferenceOverrides::speed_multiplier() const {
  // @@protoc_insertion_point(field_get:aim.ScenarioReferenceOverrides.speed_multiplier)
  return _internal_speed_multiplier();
}
inline void ScenarioReferenceOverrides::set_speed_multiplier(float value) {
  _internal_set_speed_multiplier(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:aim.ScenarioReferenceOverrides.speed_multiplier)
}
inline float ScenarioReferenceOverrides::_internal_speed_multiplier() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.speed_multiplier_;
}
inline void ScenarioReferenceOverrides::_internal_set_speed_multiplier(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_multiplier_ = value;
}

// -------------------------------------------------------------------

// ShotType

// bool poke = 1;
inline bool ShotType::has_poke() const {
  return type_case() == kPoke;
}
inline void ShotType::set_has_poke() {
  _impl_._oneof_case_[0] = kPoke;
}
inline void ShotType::clear_poke() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kPoke) {
    _impl_.type_.poke_ = false;
    clear_has_type();
  }
}
inline bool ShotType::poke() const {
  // @@protoc_insertion_point(field_get:aim.ShotType.poke)
  return _internal_poke();
}
inline void ShotType::set_poke(bool value) {
  if (type_case() != kPoke) {
    clear_type();
    set_has_poke();
  }
  _impl_.type_.poke_ = value;
  // @@protoc_insertion_point(field_set:aim.ShotType.poke)
}
inline bool ShotType::_internal_poke() const {
  if (type_case() == kPoke) {
    return _impl_.type_.poke_;
  }
  return false;
}

// bool tracking_kill = 2;
inline bool ShotType::has_tracking_kill() const {
  return type_case() == kTrackingKill;
}
inline void ShotType::set_has_tracking_kill() {
  _impl_._oneof_case_[0] = kTrackingKill;
}
inline void ShotType::clear_tracking_kill() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kTrackingKill) {
    _impl_.type_.tracking_kill_ = false;
    clear_has_type();
  }
}
inline bool ShotType::tracking_kill() const {
  // @@protoc_insertion_point(field_get:aim.ShotType.tracking_kill)
  return _internal_tracking_kill();
}
inline void ShotType::set_tracking_kill(bool value) {
  if (type_case() != kTrackingKill) {
    clear_type();
    set_has_tracking_kill();
  }
  _impl_.type_.tracking_kill_ = value;
  // @@protoc_insertion_point(field_set:aim.ShotType.tracking_kill)
}
inline bool ShotType::_internal_tracking_kill() const {
  if (type_case() == kTrackingKill) {
    return _impl_.type_.tracking_kill_;
  }
  return false;
}

// bool tracking_invincible = 3;
inline bool ShotType::has_tracking_invincible() const {
  return type_case() == kTrackingInvincible;
}
inline void ShotType::set_has_tracking_invincible() {
  _impl_._oneof_case_[0] = kTrackingInvincible;
}
inline void ShotType::clear_tracking_invincible() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kTrackingInvincible) {
    _impl_.type_.tracking_invincible_ = false;
    clear_has_type();
  }
}
inline bool ShotType::tracking_invincible() const {
  // @@protoc_insertion_point(field_get:aim.ShotType.tracking_invincible)
  return _internal_tracking_invincible();
}
inline void ShotType::set_tracking_invincible(bool value) {
  if (type_case() != kTrackingInvincible) {
    clear_type();
    set_has_tracking_invincible();
  }
  _impl_.type_.tracking_invincible_ = value;
  // @@protoc_insertion_point(field_set:aim.ShotType.tracking_invincible)
}
inline bool ShotType::_internal_tracking_invincible() const {
  if (type_case() == kTrackingInvincible) {
    return _impl_.type_.tracking_invincible_;
  }
  return false;
}

// bool click_single = 4;
inline bool ShotType::has_click_single() const {
  return type_case() == kClickSingle;
}
inline void ShotType::set_has_click_single() {
  _impl_._oneof_case_[0] = kClickSingle;
}
inline void ShotType::clear_click_single() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kClickSingle) {
    _impl_.type_.click_single_ = false;
    clear_has_type();
  }
}
inline bool ShotType::click_single() const {
  // @@protoc_insertion_point(field_get:aim.ShotType.click_single)
  return _internal_click_single();
}
inline void ShotType::set_click_single(bool value) {
  if (type_case() != kClickSingle) {
    clear_type();
    set_has_click_single();
  }
  _impl_.type_.click_single_ = value;
  // @@protoc_insertion_point(field_set:aim.ShotType.click_single)
}
inline bool ShotType::_internal_click_single() const {
  if (type_case() == kClickSingle) {
    return _impl_.type_.click_single_;
  }
  return false;
}

// float poke_kill_time_seconds = 10;
inline bool ShotType::has_poke_kill_time_seconds() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ShotType::clear_poke_kill_time_seconds() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.poke_kill_time_seconds_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float ShotType::poke_kill_time_seconds() const {
  // @@protoc_insertion_point(field_get:aim.ShotType.poke_kill_time_seconds)
  return _internal_poke_kill_time_seconds();
}
inline void ShotType::set_poke_kill_time_seconds(float value) {
  _internal_set_poke_kill_time_seconds(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:aim.ShotType.poke_kill_time_seconds)
}
inline float ShotType::_internal_poke_kill_time_seconds() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.poke_kill_time_seconds_;
}
inline void ShotType::_internal_set_poke_kill_time_seconds(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.poke_kill_time_seconds_ = value;
}

// bool no_partial_kills = 11;
inline bool ShotType::has_no_partial_kills() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void ShotType::clear_no_partial_kills() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.no_partial_kills_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool ShotType::no_partial_kills() const {
  // @@protoc_insertion_point(field_get:aim.ShotType.no_partial_kills)
  return _internal_no_partial_kills();
}
inline void ShotType::set_no_partial_kills(bool value) {
  _internal_set_no_partial_kills(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:aim.ShotType.no_partial_kills)
}
inline bool ShotType::_internal_no_partial_kills() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.no_partial_kills_;
}
inline void ShotType::_internal_set_no_partial_kills(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.no_partial_kills_ = value;
}

inline bool ShotType::has_type() const {
  return type_case() != TYPE_NOT_SET;
}
inline void ShotType::clear_has_type() {
  _impl_._oneof_case_[0] = TYPE_NOT_SET;
}
inline ShotType::TypeCase ShotType::type_case() const {
  return ShotType::TypeCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// ScenarioDef

// string scenario_id = 1;
inline bool ScenarioDef::has_scenario_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ScenarioDef::clear_scenario_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scenario_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ScenarioDef::scenario_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:aim.ScenarioDef.scenario_id)
  return _internal_scenario_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScenarioDef::set_scenario_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.scenario_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:aim.ScenarioDef.scenario_id)
}
inline std::string* ScenarioDef::mutable_scenario_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_scenario_id();
  // @@protoc_insertion_point(field_mutable:aim.ScenarioDef.scenario_id)
  return _s;
}
inline const std::string& ScenarioDef::_internal_scenario_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scenario_id_.Get();
}
inline void ScenarioDef::_internal_set_scenario_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.scenario_id_.Set(value, GetArena());
}
inline std::string* ScenarioDef::_internal_mutable_scenario_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.scenario_id_.Mutable( GetArena());
}
inline std::string* ScenarioDef::release_scenario_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:aim.ScenarioDef.scenario_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.scenario_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.scenario_id_.Set("", GetArena());
  }
  return released;
}
inline void ScenarioDef::set_allocated_scenario_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.scenario_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.scenario_id_.IsDefault()) {
    _impl_.scenario_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:aim.ScenarioDef.scenario_id)
}

// float duration_seconds = 2;
inline bool ScenarioDef::has_duration_seconds() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void ScenarioDef::clear_duration_seconds() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.duration_seconds_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline float ScenarioDef::duration_seconds() const {
  // @@protoc_insertion_point(field_get:aim.ScenarioDef.duration_seconds)
  return _internal_duration_seconds();
}
inline void ScenarioDef::set_duration_seconds(float value) {
  _internal_set_duration_seconds(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:aim.ScenarioDef.duration_seconds)
}
inline float ScenarioDef::_internal_duration_seconds() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.duration_seconds_;
}
inline void ScenarioDef::_internal_set_duration_seconds(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.duration_seconds_ = value;
}

// .aim.Room room = 3;
inline bool ScenarioDef::has_room() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.room_ != nullptr);
  return value;
}
inline void ScenarioDef::clear_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.room_ != nullptr) _impl_.room_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::aim::Room& ScenarioDef::_internal_room() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::aim::Room* p = _impl_.room_;
  return p != nullptr ? *p : reinterpret_cast<const ::aim::Room&>(::aim::_Room_default_instance_);
}
inline const ::aim::Room& ScenarioDef::room() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:aim.ScenarioDef.room)
  return _internal_room();
}
inline void ScenarioDef::unsafe_arena_set_allocated_room(::aim::Room* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.room_);
  }
  _impl_.room_ = reinterpret_cast<::aim::Room*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aim.ScenarioDef.room)
}
inline ::aim::Room* ScenarioDef::release_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::aim::Room* released = _impl_.room_;
  _impl_.room_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::aim::Room* ScenarioDef::unsafe_arena_release_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:aim.ScenarioDef.room)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::aim::Room* temp = _impl_.room_;
  _impl_.room_ = nullptr;
  return temp;
}
inline ::aim::Room* ScenarioDef::_internal_mutable_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.room_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::aim::Room>(GetArena());
    _impl_.room_ = reinterpret_cast<::aim::Room*>(p);
  }
  return _impl_.room_;
}
inline ::aim::Room* ScenarioDef::mutable_room() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::aim::Room* _msg = _internal_mutable_room();
  // @@protoc_insertion_point(field_mutable:aim.ScenarioDef.room)
  return _msg;
}
inline void ScenarioDef::set_allocated_room(::aim::Room* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.room_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.room_ = reinterpret_cast<::aim::Room*>(value);
  // @@protoc_insertion_point(field_set_allocated:aim.ScenarioDef.room)
}

// .aim.TargetDef target_def = 5;
inline bool ScenarioDef::has_target_def() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.target_def_ != nullptr);
  return value;
}
inline void ScenarioDef::clear_target_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.target_def_ != nullptr) _impl_.target_def_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::aim::TargetDef& ScenarioDef::_internal_target_def() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::aim::TargetDef* p = _impl_.target_def_;
  return p != nullptr ? *p : reinterpret_cast<const ::aim::TargetDef&>(::aim::_TargetDef_default_instance_);
}
inline const ::aim::TargetDef& ScenarioDef::target_def() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:aim.ScenarioDef.target_def)
  return _internal_target_def();
}
inline void ScenarioDef::unsafe_arena_set_allocated_target_def(::aim::TargetDef* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.target_def_);
  }
  _impl_.target_def_ = reinterpret_cast<::aim::TargetDef*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aim.ScenarioDef.target_def)
}
inline ::aim::TargetDef* ScenarioDef::release_target_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::aim::TargetDef* released = _impl_.target_def_;
  _impl_.target_def_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::aim::TargetDef* ScenarioDef::unsafe_arena_release_target_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:aim.ScenarioDef.target_def)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::aim::TargetDef* temp = _impl_.target_def_;
  _impl_.target_def_ = nullptr;
  return temp;
}
inline ::aim::TargetDef* ScenarioDef::_internal_mutable_target_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.target_def_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::aim::TargetDef>(GetArena());
    _impl_.target_def_ = reinterpret_cast<::aim::TargetDef*>(p);
  }
  return _impl_.target_def_;
}
inline ::aim::TargetDef* ScenarioDef::mutable_target_def() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::aim::TargetDef* _msg = _internal_mutable_target_def();
  // @@protoc_insertion_point(field_mutable:aim.ScenarioDef.target_def)
  return _msg;
}
inline void ScenarioDef::set_allocated_target_def(::aim::TargetDef* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.target_def_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.target_def_ = reinterpret_cast<::aim::TargetDef*>(value);
  // @@protoc_insertion_point(field_set_allocated:aim.ScenarioDef.target_def)
}

// string reference = 6;
inline bool ScenarioDef::has_reference() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void ScenarioDef::clear_reference() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reference_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& ScenarioDef::reference() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:aim.ScenarioDef.reference)
  return _internal_reference();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScenarioDef::set_reference(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.reference_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:aim.ScenarioDef.reference)
}
inline std::string* ScenarioDef::mutable_reference() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_reference();
  // @@protoc_insertion_point(field_mutable:aim.ScenarioDef.reference)
  return _s;
}
inline const std::string& ScenarioDef::_internal_reference() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reference_.Get();
}
inline void ScenarioDef::_internal_set_reference(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.reference_.Set(value, GetArena());
}
inline std::string* ScenarioDef::_internal_mutable_reference() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.reference_.Mutable( GetArena());
}
inline std::string* ScenarioDef::release_reference() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:aim.ScenarioDef.reference)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.reference_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.reference_.Set("", GetArena());
  }
  return released;
}
inline void ScenarioDef::set_allocated_reference(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.reference_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.reference_.IsDefault()) {
    _impl_.reference_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:aim.ScenarioDef.reference)
}

// .aim.ScenarioReferenceOverrides overrides = 7;
inline bool ScenarioDef::has_overrides() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.overrides_ != nullptr);
  return value;
}
inline void ScenarioDef::clear_overrides() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.overrides_ != nullptr) _impl_.overrides_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::aim::ScenarioReferenceOverrides& ScenarioDef::_internal_overrides() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::aim::ScenarioReferenceOverrides* p = _impl_.overrides_;
  return p != nullptr ? *p : reinterpret_cast<const ::aim::ScenarioReferenceOverrides&>(::aim::_ScenarioReferenceOverrides_default_instance_);
}
inline const ::aim::ScenarioReferenceOverrides& ScenarioDef::overrides() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:aim.ScenarioDef.overrides)
  return _internal_overrides();
}
inline void ScenarioDef::unsafe_arena_set_allocated_overrides(::aim::ScenarioReferenceOverrides* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.overrides_);
  }
  _impl_.overrides_ = reinterpret_cast<::aim::ScenarioReferenceOverrides*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aim.ScenarioDef.overrides)
}
inline ::aim::ScenarioReferenceOverrides* ScenarioDef::release_overrides() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::aim::ScenarioReferenceOverrides* released = _impl_.overrides_;
  _impl_.overrides_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::aim::ScenarioReferenceOverrides* ScenarioDef::unsafe_arena_release_overrides() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:aim.ScenarioDef.overrides)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::aim::ScenarioReferenceOverrides* temp = _impl_.overrides_;
  _impl_.overrides_ = nullptr;
  return temp;
}
inline ::aim::ScenarioReferenceOverrides* ScenarioDef::_internal_mutable_overrides() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.overrides_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::aim::ScenarioReferenceOverrides>(GetArena());
    _impl_.overrides_ = reinterpret_cast<::aim::ScenarioReferenceOverrides*>(p);
  }
  return _impl_.overrides_;
}
inline ::aim::ScenarioReferenceOverrides* ScenarioDef::mutable_overrides() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::aim::ScenarioReferenceOverrides* _msg = _internal_mutable_overrides();
  // @@protoc_insertion_point(field_mutable:aim.ScenarioDef.overrides)
  return _msg;
}
inline void ScenarioDef::set_allocated_overrides(::aim::ScenarioReferenceOverrides* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.overrides_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.overrides_ = reinterpret_cast<::aim::ScenarioReferenceOverrides*>(value);
  // @@protoc_insertion_point(field_set_allocated:aim.ScenarioDef.overrides)
}

// .aim.ShotType shot_type = 8;
inline bool ScenarioDef::has_shot_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.shot_type_ != nullptr);
  return value;
}
inline void ScenarioDef::clear_shot_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.shot_type_ != nullptr) _impl_.shot_type_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const ::aim::ShotType& ScenarioDef::_internal_shot_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::aim::ShotType* p = _impl_.shot_type_;
  return p != nullptr ? *p : reinterpret_cast<const ::aim::ShotType&>(::aim::_ShotType_default_instance_);
}
inline const ::aim::ShotType& ScenarioDef::shot_type() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:aim.ScenarioDef.shot_type)
  return _internal_shot_type();
}
inline void ScenarioDef::unsafe_arena_set_allocated_shot_type(::aim::ShotType* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.shot_type_);
  }
  _impl_.shot_type_ = reinterpret_cast<::aim::ShotType*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aim.ScenarioDef.shot_type)
}
inline ::aim::ShotType* ScenarioDef::release_shot_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::aim::ShotType* released = _impl_.shot_type_;
  _impl_.shot_type_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::aim::ShotType* ScenarioDef::unsafe_arena_release_shot_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:aim.ScenarioDef.shot_type)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::aim::ShotType* temp = _impl_.shot_type_;
  _impl_.shot_type_ = nullptr;
  return temp;
}
inline ::aim::ShotType* ScenarioDef::_internal_mutable_shot_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.shot_type_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::aim::ShotType>(GetArena());
    _impl_.shot_type_ = reinterpret_cast<::aim::ShotType*>(p);
  }
  return _impl_.shot_type_;
}
inline ::aim::ShotType* ScenarioDef::mutable_shot_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::aim::ShotType* _msg = _internal_mutable_shot_type();
  // @@protoc_insertion_point(field_mutable:aim.ScenarioDef.shot_type)
  return _msg;
}
inline void ScenarioDef::set_allocated_shot_type(::aim::ShotType* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.shot_type_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.shot_type_ = reinterpret_cast<::aim::ShotType*>(value);
  // @@protoc_insertion_point(field_set_allocated:aim.ScenarioDef.shot_type)
}

// float accuracy_penalty_modifier = 9;
inline bool ScenarioDef::has_accuracy_penalty_modifier() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void ScenarioDef::clear_accuracy_penalty_modifier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accuracy_penalty_modifier_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline float ScenarioDef::accuracy_penalty_modifier() const {
  // @@protoc_insertion_point(field_get:aim.ScenarioDef.accuracy_penalty_modifier)
  return _internal_accuracy_penalty_modifier();
}
inline void ScenarioDef::set_accuracy_penalty_modifier(float value) {
  _internal_set_accuracy_penalty_modifier(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:aim.ScenarioDef.accuracy_penalty_modifier)
}
inline float ScenarioDef::_internal_accuracy_penalty_modifier() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accuracy_penalty_modifier_;
}
inline void ScenarioDef::_internal_set_accuracy_penalty_modifier(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accuracy_penalty_modifier_ = value;
}

// .aim.StaticScenarioDef static_def = 10;
inline bool ScenarioDef::has_static_def() const {
  return type_case() == kStaticDef;
}
inline bool ScenarioDef::_internal_has_static_def() const {
  return type_case() == kStaticDef;
}
inline void ScenarioDef::set_has_static_def() {
  _impl_._oneof_case_[0] = kStaticDef;
}
inline void ScenarioDef::clear_static_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kStaticDef) {
    if (GetArena() == nullptr) {
      delete _impl_.type_.static_def_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.static_def_);
    }
    clear_has_type();
  }
}
inline ::aim::StaticScenarioDef* ScenarioDef::release_static_def() {
  // @@protoc_insertion_point(field_release:aim.ScenarioDef.static_def)
  if (type_case() == kStaticDef) {
    clear_has_type();
    auto* temp = _impl_.type_.static_def_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.type_.static_def_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::aim::StaticScenarioDef& ScenarioDef::_internal_static_def() const {
  return type_case() == kStaticDef ? *_impl_.type_.static_def_ : reinterpret_cast<::aim::StaticScenarioDef&>(::aim::_StaticScenarioDef_default_instance_);
}
inline const ::aim::StaticScenarioDef& ScenarioDef::static_def() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:aim.ScenarioDef.static_def)
  return _internal_static_def();
}
inline ::aim::StaticScenarioDef* ScenarioDef::unsafe_arena_release_static_def() {
  // @@protoc_insertion_point(field_unsafe_arena_release:aim.ScenarioDef.static_def)
  if (type_case() == kStaticDef) {
    clear_has_type();
    auto* temp = _impl_.type_.static_def_;
    _impl_.type_.static_def_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ScenarioDef::unsafe_arena_set_allocated_static_def(::aim::StaticScenarioDef* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_type();
  if (value) {
    set_has_static_def();
    _impl_.type_.static_def_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aim.ScenarioDef.static_def)
}
inline ::aim::StaticScenarioDef* ScenarioDef::_internal_mutable_static_def() {
  if (type_case() != kStaticDef) {
    clear_type();
    set_has_static_def();
    _impl_.type_.static_def_ =
        ::google::protobuf::Message::DefaultConstruct<::aim::StaticScenarioDef>(GetArena());
  }
  return _impl_.type_.static_def_;
}
inline ::aim::StaticScenarioDef* ScenarioDef::mutable_static_def() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::aim::StaticScenarioDef* _msg = _internal_mutable_static_def();
  // @@protoc_insertion_point(field_mutable:aim.ScenarioDef.static_def)
  return _msg;
}

// .aim.CenteringScenarioDef centering_def = 11;
inline bool ScenarioDef::has_centering_def() const {
  return type_case() == kCenteringDef;
}
inline bool ScenarioDef::_internal_has_centering_def() const {
  return type_case() == kCenteringDef;
}
inline void ScenarioDef::set_has_centering_def() {
  _impl_._oneof_case_[0] = kCenteringDef;
}
inline void ScenarioDef::clear_centering_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kCenteringDef) {
    if (GetArena() == nullptr) {
      delete _impl_.type_.centering_def_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.centering_def_);
    }
    clear_has_type();
  }
}
inline ::aim::CenteringScenarioDef* ScenarioDef::release_centering_def() {
  // @@protoc_insertion_point(field_release:aim.ScenarioDef.centering_def)
  if (type_case() == kCenteringDef) {
    clear_has_type();
    auto* temp = _impl_.type_.centering_def_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.type_.centering_def_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::aim::CenteringScenarioDef& ScenarioDef::_internal_centering_def() const {
  return type_case() == kCenteringDef ? *_impl_.type_.centering_def_ : reinterpret_cast<::aim::CenteringScenarioDef&>(::aim::_CenteringScenarioDef_default_instance_);
}
inline const ::aim::CenteringScenarioDef& ScenarioDef::centering_def() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:aim.ScenarioDef.centering_def)
  return _internal_centering_def();
}
inline ::aim::CenteringScenarioDef* ScenarioDef::unsafe_arena_release_centering_def() {
  // @@protoc_insertion_point(field_unsafe_arena_release:aim.ScenarioDef.centering_def)
  if (type_case() == kCenteringDef) {
    clear_has_type();
    auto* temp = _impl_.type_.centering_def_;
    _impl_.type_.centering_def_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ScenarioDef::unsafe_arena_set_allocated_centering_def(::aim::CenteringScenarioDef* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_type();
  if (value) {
    set_has_centering_def();
    _impl_.type_.centering_def_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aim.ScenarioDef.centering_def)
}
inline ::aim::CenteringScenarioDef* ScenarioDef::_internal_mutable_centering_def() {
  if (type_case() != kCenteringDef) {
    clear_type();
    set_has_centering_def();
    _impl_.type_.centering_def_ =
        ::google::protobuf::Message::DefaultConstruct<::aim::CenteringScenarioDef>(GetArena());
  }
  return _impl_.type_.centering_def_;
}
inline ::aim::CenteringScenarioDef* ScenarioDef::mutable_centering_def() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::aim::CenteringScenarioDef* _msg = _internal_mutable_centering_def();
  // @@protoc_insertion_point(field_mutable:aim.ScenarioDef.centering_def)
  return _msg;
}

// .aim.BarrelScenarioDef barrel_def = 12;
inline bool ScenarioDef::has_barrel_def() const {
  return type_case() == kBarrelDef;
}
inline bool ScenarioDef::_internal_has_barrel_def() const {
  return type_case() == kBarrelDef;
}
inline void ScenarioDef::set_has_barrel_def() {
  _impl_._oneof_case_[0] = kBarrelDef;
}
inline void ScenarioDef::clear_barrel_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kBarrelDef) {
    if (GetArena() == nullptr) {
      delete _impl_.type_.barrel_def_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.barrel_def_);
    }
    clear_has_type();
  }
}
inline ::aim::BarrelScenarioDef* ScenarioDef::release_barrel_def() {
  // @@protoc_insertion_point(field_release:aim.ScenarioDef.barrel_def)
  if (type_case() == kBarrelDef) {
    clear_has_type();
    auto* temp = _impl_.type_.barrel_def_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.type_.barrel_def_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::aim::BarrelScenarioDef& ScenarioDef::_internal_barrel_def() const {
  return type_case() == kBarrelDef ? *_impl_.type_.barrel_def_ : reinterpret_cast<::aim::BarrelScenarioDef&>(::aim::_BarrelScenarioDef_default_instance_);
}
inline const ::aim::BarrelScenarioDef& ScenarioDef::barrel_def() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:aim.ScenarioDef.barrel_def)
  return _internal_barrel_def();
}
inline ::aim::BarrelScenarioDef* ScenarioDef::unsafe_arena_release_barrel_def() {
  // @@protoc_insertion_point(field_unsafe_arena_release:aim.ScenarioDef.barrel_def)
  if (type_case() == kBarrelDef) {
    clear_has_type();
    auto* temp = _impl_.type_.barrel_def_;
    _impl_.type_.barrel_def_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ScenarioDef::unsafe_arena_set_allocated_barrel_def(::aim::BarrelScenarioDef* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_type();
  if (value) {
    set_has_barrel_def();
    _impl_.type_.barrel_def_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aim.ScenarioDef.barrel_def)
}
inline ::aim::BarrelScenarioDef* ScenarioDef::_internal_mutable_barrel_def() {
  if (type_case() != kBarrelDef) {
    clear_type();
    set_has_barrel_def();
    _impl_.type_.barrel_def_ =
        ::google::protobuf::Message::DefaultConstruct<::aim::BarrelScenarioDef>(GetArena());
  }
  return _impl_.type_.barrel_def_;
}
inline ::aim::BarrelScenarioDef* ScenarioDef::mutable_barrel_def() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::aim::BarrelScenarioDef* _msg = _internal_mutable_barrel_def();
  // @@protoc_insertion_point(field_mutable:aim.ScenarioDef.barrel_def)
  return _msg;
}

// .aim.LinearScenarioDef linear_def = 13;
inline bool ScenarioDef::has_linear_def() const {
  return type_case() == kLinearDef;
}
inline bool ScenarioDef::_internal_has_linear_def() const {
  return type_case() == kLinearDef;
}
inline void ScenarioDef::set_has_linear_def() {
  _impl_._oneof_case_[0] = kLinearDef;
}
inline void ScenarioDef::clear_linear_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kLinearDef) {
    if (GetArena() == nullptr) {
      delete _impl_.type_.linear_def_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.linear_def_);
    }
    clear_has_type();
  }
}
inline ::aim::LinearScenarioDef* ScenarioDef::release_linear_def() {
  // @@protoc_insertion_point(field_release:aim.ScenarioDef.linear_def)
  if (type_case() == kLinearDef) {
    clear_has_type();
    auto* temp = _impl_.type_.linear_def_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.type_.linear_def_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::aim::LinearScenarioDef& ScenarioDef::_internal_linear_def() const {
  return type_case() == kLinearDef ? *_impl_.type_.linear_def_ : reinterpret_cast<::aim::LinearScenarioDef&>(::aim::_LinearScenarioDef_default_instance_);
}
inline const ::aim::LinearScenarioDef& ScenarioDef::linear_def() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:aim.ScenarioDef.linear_def)
  return _internal_linear_def();
}
inline ::aim::LinearScenarioDef* ScenarioDef::unsafe_arena_release_linear_def() {
  // @@protoc_insertion_point(field_unsafe_arena_release:aim.ScenarioDef.linear_def)
  if (type_case() == kLinearDef) {
    clear_has_type();
    auto* temp = _impl_.type_.linear_def_;
    _impl_.type_.linear_def_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ScenarioDef::unsafe_arena_set_allocated_linear_def(::aim::LinearScenarioDef* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_type();
  if (value) {
    set_has_linear_def();
    _impl_.type_.linear_def_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aim.ScenarioDef.linear_def)
}
inline ::aim::LinearScenarioDef* ScenarioDef::_internal_mutable_linear_def() {
  if (type_case() != kLinearDef) {
    clear_type();
    set_has_linear_def();
    _impl_.type_.linear_def_ =
        ::google::protobuf::Message::DefaultConstruct<::aim::LinearScenarioDef>(GetArena());
  }
  return _impl_.type_.linear_def_;
}
inline ::aim::LinearScenarioDef* ScenarioDef::mutable_linear_def() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::aim::LinearScenarioDef* _msg = _internal_mutable_linear_def();
  // @@protoc_insertion_point(field_mutable:aim.ScenarioDef.linear_def)
  return _msg;
}

inline bool ScenarioDef::has_type() const {
  return type_case() != TYPE_NOT_SET;
}
inline void ScenarioDef::clear_has_type() {
  _impl_._oneof_case_[0] = TYPE_NOT_SET;
}
inline ScenarioDef::TypeCase ScenarioDef::type_case() const {
  return ScenarioDef::TypeCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// StaticScenarioDef

// .aim.TargetPlacementStrategy target_placement_strategy = 1;
inline bool StaticScenarioDef::has_target_placement_strategy() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.target_placement_strategy_ != nullptr);
  return value;
}
inline void StaticScenarioDef::clear_target_placement_strategy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.target_placement_strategy_ != nullptr) _impl_.target_placement_strategy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::aim::TargetPlacementStrategy& StaticScenarioDef::_internal_target_placement_strategy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::aim::TargetPlacementStrategy* p = _impl_.target_placement_strategy_;
  return p != nullptr ? *p : reinterpret_cast<const ::aim::TargetPlacementStrategy&>(::aim::_TargetPlacementStrategy_default_instance_);
}
inline const ::aim::TargetPlacementStrategy& StaticScenarioDef::target_placement_strategy() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:aim.StaticScenarioDef.target_placement_strategy)
  return _internal_target_placement_strategy();
}
inline void StaticScenarioDef::unsafe_arena_set_allocated_target_placement_strategy(::aim::TargetPlacementStrategy* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.target_placement_strategy_);
  }
  _impl_.target_placement_strategy_ = reinterpret_cast<::aim::TargetPlacementStrategy*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aim.StaticScenarioDef.target_placement_strategy)
}
inline ::aim::TargetPlacementStrategy* StaticScenarioDef::release_target_placement_strategy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::aim::TargetPlacementStrategy* released = _impl_.target_placement_strategy_;
  _impl_.target_placement_strategy_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::aim::TargetPlacementStrategy* StaticScenarioDef::unsafe_arena_release_target_placement_strategy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:aim.StaticScenarioDef.target_placement_strategy)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::aim::TargetPlacementStrategy* temp = _impl_.target_placement_strategy_;
  _impl_.target_placement_strategy_ = nullptr;
  return temp;
}
inline ::aim::TargetPlacementStrategy* StaticScenarioDef::_internal_mutable_target_placement_strategy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.target_placement_strategy_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::aim::TargetPlacementStrategy>(GetArena());
    _impl_.target_placement_strategy_ = reinterpret_cast<::aim::TargetPlacementStrategy*>(p);
  }
  return _impl_.target_placement_strategy_;
}
inline ::aim::TargetPlacementStrategy* StaticScenarioDef::mutable_target_placement_strategy() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::aim::TargetPlacementStrategy* _msg = _internal_mutable_target_placement_strategy();
  // @@protoc_insertion_point(field_mutable:aim.StaticScenarioDef.target_placement_strategy)
  return _msg;
}
inline void StaticScenarioDef::set_allocated_target_placement_strategy(::aim::TargetPlacementStrategy* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.target_placement_strategy_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.target_placement_strategy_ = reinterpret_cast<::aim::TargetPlacementStrategy*>(value);
  // @@protoc_insertion_point(field_set_allocated:aim.StaticScenarioDef.target_placement_strategy)
}

// -------------------------------------------------------------------

// CenteringScenarioDef

// repeated .aim.RegionVec2 wall_points = 1;
inline int CenteringScenarioDef::_internal_wall_points_size() const {
  return _internal_wall_points().size();
}
inline int CenteringScenarioDef::wall_points_size() const {
  return _internal_wall_points_size();
}
inline void CenteringScenarioDef::clear_wall_points() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wall_points_.Clear();
}
inline ::aim::RegionVec2* CenteringScenarioDef::mutable_wall_points(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:aim.CenteringScenarioDef.wall_points)
  return _internal_mutable_wall_points()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::aim::RegionVec2>* CenteringScenarioDef::mutable_wall_points()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:aim.CenteringScenarioDef.wall_points)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_wall_points();
}
inline const ::aim::RegionVec2& CenteringScenarioDef::wall_points(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:aim.CenteringScenarioDef.wall_points)
  return _internal_wall_points().Get(index);
}
inline ::aim::RegionVec2* CenteringScenarioDef::add_wall_points() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::aim::RegionVec2* _add = _internal_mutable_wall_points()->Add();
  // @@protoc_insertion_point(field_add:aim.CenteringScenarioDef.wall_points)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::aim::RegionVec2>& CenteringScenarioDef::wall_points() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:aim.CenteringScenarioDef.wall_points)
  return _internal_wall_points();
}
inline const ::google::protobuf::RepeatedPtrField<::aim::RegionVec2>&
CenteringScenarioDef::_internal_wall_points() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.wall_points_;
}
inline ::google::protobuf::RepeatedPtrField<::aim::RegionVec2>*
CenteringScenarioDef::_internal_mutable_wall_points() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.wall_points_;
}

// .aim.TargetPlacementStrategy target_placement_strategy = 2;
inline bool CenteringScenarioDef::has_target_placement_strategy() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.target_placement_strategy_ != nullptr);
  return value;
}
inline void CenteringScenarioDef::clear_target_placement_strategy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.target_placement_strategy_ != nullptr) _impl_.target_placement_strategy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::aim::TargetPlacementStrategy& CenteringScenarioDef::_internal_target_placement_strategy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::aim::TargetPlacementStrategy* p = _impl_.target_placement_strategy_;
  return p != nullptr ? *p : reinterpret_cast<const ::aim::TargetPlacementStrategy&>(::aim::_TargetPlacementStrategy_default_instance_);
}
inline const ::aim::TargetPlacementStrategy& CenteringScenarioDef::target_placement_strategy() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:aim.CenteringScenarioDef.target_placement_strategy)
  return _internal_target_placement_strategy();
}
inline void CenteringScenarioDef::unsafe_arena_set_allocated_target_placement_strategy(::aim::TargetPlacementStrategy* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.target_placement_strategy_);
  }
  _impl_.target_placement_strategy_ = reinterpret_cast<::aim::TargetPlacementStrategy*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aim.CenteringScenarioDef.target_placement_strategy)
}
inline ::aim::TargetPlacementStrategy* CenteringScenarioDef::release_target_placement_strategy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::aim::TargetPlacementStrategy* released = _impl_.target_placement_strategy_;
  _impl_.target_placement_strategy_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::aim::TargetPlacementStrategy* CenteringScenarioDef::unsafe_arena_release_target_placement_strategy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:aim.CenteringScenarioDef.target_placement_strategy)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::aim::TargetPlacementStrategy* temp = _impl_.target_placement_strategy_;
  _impl_.target_placement_strategy_ = nullptr;
  return temp;
}
inline ::aim::TargetPlacementStrategy* CenteringScenarioDef::_internal_mutable_target_placement_strategy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.target_placement_strategy_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::aim::TargetPlacementStrategy>(GetArena());
    _impl_.target_placement_strategy_ = reinterpret_cast<::aim::TargetPlacementStrategy*>(p);
  }
  return _impl_.target_placement_strategy_;
}
inline ::aim::TargetPlacementStrategy* CenteringScenarioDef::mutable_target_placement_strategy() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::aim::TargetPlacementStrategy* _msg = _internal_mutable_target_placement_strategy();
  // @@protoc_insertion_point(field_mutable:aim.CenteringScenarioDef.target_placement_strategy)
  return _msg;
}
inline void CenteringScenarioDef::set_allocated_target_placement_strategy(::aim::TargetPlacementStrategy* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.target_placement_strategy_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.target_placement_strategy_ = reinterpret_cast<::aim::TargetPlacementStrategy*>(value);
  // @@protoc_insertion_point(field_set_allocated:aim.CenteringScenarioDef.target_placement_strategy)
}

// bool orient_pill = 3;
inline bool CenteringScenarioDef::has_orient_pill() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CenteringScenarioDef::clear_orient_pill() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.orient_pill_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool CenteringScenarioDef::orient_pill() const {
  // @@protoc_insertion_point(field_get:aim.CenteringScenarioDef.orient_pill)
  return _internal_orient_pill();
}
inline void CenteringScenarioDef::set_orient_pill(bool value) {
  _internal_set_orient_pill(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:aim.CenteringScenarioDef.orient_pill)
}
inline bool CenteringScenarioDef::_internal_orient_pill() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.orient_pill_;
}
inline void CenteringScenarioDef::_internal_set_orient_pill(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.orient_pill_ = value;
}

// -------------------------------------------------------------------

// BarrelScenarioDef

// .aim.TargetPlacementStrategy target_placement_strategy = 1;
inline bool BarrelScenarioDef::has_target_placement_strategy() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.target_placement_strategy_ != nullptr);
  return value;
}
inline void BarrelScenarioDef::clear_target_placement_strategy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.target_placement_strategy_ != nullptr) _impl_.target_placement_strategy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::aim::TargetPlacementStrategy& BarrelScenarioDef::_internal_target_placement_strategy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::aim::TargetPlacementStrategy* p = _impl_.target_placement_strategy_;
  return p != nullptr ? *p : reinterpret_cast<const ::aim::TargetPlacementStrategy&>(::aim::_TargetPlacementStrategy_default_instance_);
}
inline const ::aim::TargetPlacementStrategy& BarrelScenarioDef::target_placement_strategy() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:aim.BarrelScenarioDef.target_placement_strategy)
  return _internal_target_placement_strategy();
}
inline void BarrelScenarioDef::unsafe_arena_set_allocated_target_placement_strategy(::aim::TargetPlacementStrategy* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.target_placement_strategy_);
  }
  _impl_.target_placement_strategy_ = reinterpret_cast<::aim::TargetPlacementStrategy*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aim.BarrelScenarioDef.target_placement_strategy)
}
inline ::aim::TargetPlacementStrategy* BarrelScenarioDef::release_target_placement_strategy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::aim::TargetPlacementStrategy* released = _impl_.target_placement_strategy_;
  _impl_.target_placement_strategy_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::aim::TargetPlacementStrategy* BarrelScenarioDef::unsafe_arena_release_target_placement_strategy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:aim.BarrelScenarioDef.target_placement_strategy)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::aim::TargetPlacementStrategy* temp = _impl_.target_placement_strategy_;
  _impl_.target_placement_strategy_ = nullptr;
  return temp;
}
inline ::aim::TargetPlacementStrategy* BarrelScenarioDef::_internal_mutable_target_placement_strategy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.target_placement_strategy_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::aim::TargetPlacementStrategy>(GetArena());
    _impl_.target_placement_strategy_ = reinterpret_cast<::aim::TargetPlacementStrategy*>(p);
  }
  return _impl_.target_placement_strategy_;
}
inline ::aim::TargetPlacementStrategy* BarrelScenarioDef::mutable_target_placement_strategy() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::aim::TargetPlacementStrategy* _msg = _internal_mutable_target_placement_strategy();
  // @@protoc_insertion_point(field_mutable:aim.BarrelScenarioDef.target_placement_strategy)
  return _msg;
}
inline void BarrelScenarioDef::set_allocated_target_placement_strategy(::aim::TargetPlacementStrategy* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.target_placement_strategy_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.target_placement_strategy_ = reinterpret_cast<::aim::TargetPlacementStrategy*>(value);
  // @@protoc_insertion_point(field_set_allocated:aim.BarrelScenarioDef.target_placement_strategy)
}

// float direction_radius_percent = 2;
inline bool BarrelScenarioDef::has_direction_radius_percent() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void BarrelScenarioDef::clear_direction_radius_percent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_radius_percent_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float BarrelScenarioDef::direction_radius_percent() const {
  // @@protoc_insertion_point(field_get:aim.BarrelScenarioDef.direction_radius_percent)
  return _internal_direction_radius_percent();
}
inline void BarrelScenarioDef::set_direction_radius_percent(float value) {
  _internal_set_direction_radius_percent(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:aim.BarrelScenarioDef.direction_radius_percent)
}
inline float BarrelScenarioDef::_internal_direction_radius_percent() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.direction_radius_percent_;
}
inline void BarrelScenarioDef::_internal_set_direction_radius_percent(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_radius_percent_ = value;
}

// -------------------------------------------------------------------

// LinearScenarioDef

// float angle = 1;
inline bool LinearScenarioDef::has_angle() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void LinearScenarioDef::clear_angle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.angle_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float LinearScenarioDef::angle() const {
  // @@protoc_insertion_point(field_get:aim.LinearScenarioDef.angle)
  return _internal_angle();
}
inline void LinearScenarioDef::set_angle(float value) {
  _internal_set_angle(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:aim.LinearScenarioDef.angle)
}
inline float LinearScenarioDef::_internal_angle() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.angle_;
}
inline void LinearScenarioDef::_internal_set_angle(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.angle_ = value;
}

// float angle_jitter = 2;
inline bool LinearScenarioDef::has_angle_jitter() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void LinearScenarioDef::clear_angle_jitter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.angle_jitter_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float LinearScenarioDef::angle_jitter() const {
  // @@protoc_insertion_point(field_get:aim.LinearScenarioDef.angle_jitter)
  return _internal_angle_jitter();
}
inline void LinearScenarioDef::set_angle_jitter(float value) {
  _internal_set_angle_jitter(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:aim.LinearScenarioDef.angle_jitter)
}
inline float LinearScenarioDef::_internal_angle_jitter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.angle_jitter_;
}
inline void LinearScenarioDef::_internal_set_angle_jitter(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.angle_jitter_ = value;
}

// float width = 3;
inline bool LinearScenarioDef::has_width() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void LinearScenarioDef::clear_width() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.width_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline float LinearScenarioDef::width() const {
  // @@protoc_insertion_point(field_get:aim.LinearScenarioDef.width)
  return _internal_width();
}
inline void LinearScenarioDef::set_width(float value) {
  _internal_set_width(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:aim.LinearScenarioDef.width)
}
inline float LinearScenarioDef::_internal_width() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.width_;
}
inline void LinearScenarioDef::_internal_set_width(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.width_ = value;
}

// float height = 4;
inline bool LinearScenarioDef::has_height() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void LinearScenarioDef::clear_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline float LinearScenarioDef::height() const {
  // @@protoc_insertion_point(field_get:aim.LinearScenarioDef.height)
  return _internal_height();
}
inline void LinearScenarioDef::set_height(float value) {
  _internal_set_height(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:aim.LinearScenarioDef.height)
}
inline float LinearScenarioDef::_internal_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.height_;
}
inline void LinearScenarioDef::_internal_set_height(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = value;
}

// .aim.TargetPlacementStrategy target_placement_strategy = 5;
inline bool LinearScenarioDef::has_target_placement_strategy() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.target_placement_strategy_ != nullptr);
  return value;
}
inline void LinearScenarioDef::clear_target_placement_strategy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.target_placement_strategy_ != nullptr) _impl_.target_placement_strategy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::aim::TargetPlacementStrategy& LinearScenarioDef::_internal_target_placement_strategy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::aim::TargetPlacementStrategy* p = _impl_.target_placement_strategy_;
  return p != nullptr ? *p : reinterpret_cast<const ::aim::TargetPlacementStrategy&>(::aim::_TargetPlacementStrategy_default_instance_);
}
inline const ::aim::TargetPlacementStrategy& LinearScenarioDef::target_placement_strategy() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:aim.LinearScenarioDef.target_placement_strategy)
  return _internal_target_placement_strategy();
}
inline void LinearScenarioDef::unsafe_arena_set_allocated_target_placement_strategy(::aim::TargetPlacementStrategy* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.target_placement_strategy_);
  }
  _impl_.target_placement_strategy_ = reinterpret_cast<::aim::TargetPlacementStrategy*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aim.LinearScenarioDef.target_placement_strategy)
}
inline ::aim::TargetPlacementStrategy* LinearScenarioDef::release_target_placement_strategy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::aim::TargetPlacementStrategy* released = _impl_.target_placement_strategy_;
  _impl_.target_placement_strategy_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::aim::TargetPlacementStrategy* LinearScenarioDef::unsafe_arena_release_target_placement_strategy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:aim.LinearScenarioDef.target_placement_strategy)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::aim::TargetPlacementStrategy* temp = _impl_.target_placement_strategy_;
  _impl_.target_placement_strategy_ = nullptr;
  return temp;
}
inline ::aim::TargetPlacementStrategy* LinearScenarioDef::_internal_mutable_target_placement_strategy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.target_placement_strategy_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::aim::TargetPlacementStrategy>(GetArena());
    _impl_.target_placement_strategy_ = reinterpret_cast<::aim::TargetPlacementStrategy*>(p);
  }
  return _impl_.target_placement_strategy_;
}
inline ::aim::TargetPlacementStrategy* LinearScenarioDef::mutable_target_placement_strategy() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::aim::TargetPlacementStrategy* _msg = _internal_mutable_target_placement_strategy();
  // @@protoc_insertion_point(field_mutable:aim.LinearScenarioDef.target_placement_strategy)
  return _msg;
}
inline void LinearScenarioDef::set_allocated_target_placement_strategy(::aim::TargetPlacementStrategy* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.target_placement_strategy_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.target_placement_strategy_ = reinterpret_cast<::aim::TargetPlacementStrategy*>(value);
  // @@protoc_insertion_point(field_set_allocated:aim.LinearScenarioDef.target_placement_strategy)
}

// -------------------------------------------------------------------

// TargetDef

// repeated .aim.TargetProfile profiles = 1;
inline int TargetDef::_internal_profiles_size() const {
  return _internal_profiles().size();
}
inline int TargetDef::profiles_size() const {
  return _internal_profiles_size();
}
inline void TargetDef::clear_profiles() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.profiles_.Clear();
}
inline ::aim::TargetProfile* TargetDef::mutable_profiles(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:aim.TargetDef.profiles)
  return _internal_mutable_profiles()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::aim::TargetProfile>* TargetDef::mutable_profiles()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:aim.TargetDef.profiles)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_profiles();
}
inline const ::aim::TargetProfile& TargetDef::profiles(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:aim.TargetDef.profiles)
  return _internal_profiles().Get(index);
}
inline ::aim::TargetProfile* TargetDef::add_profiles() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::aim::TargetProfile* _add = _internal_mutable_profiles()->Add();
  // @@protoc_insertion_point(field_add:aim.TargetDef.profiles)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::aim::TargetProfile>& TargetDef::profiles() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:aim.TargetDef.profiles)
  return _internal_profiles();
}
inline const ::google::protobuf::RepeatedPtrField<::aim::TargetProfile>&
TargetDef::_internal_profiles() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.profiles_;
}
inline ::google::protobuf::RepeatedPtrField<::aim::TargetProfile>*
TargetDef::_internal_mutable_profiles() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.profiles_;
}

// int32 num_targets = 2;
inline bool TargetDef::has_num_targets() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TargetDef::clear_num_targets() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_targets_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t TargetDef::num_targets() const {
  // @@protoc_insertion_point(field_get:aim.TargetDef.num_targets)
  return _internal_num_targets();
}
inline void TargetDef::set_num_targets(::int32_t value) {
  _internal_set_num_targets(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:aim.TargetDef.num_targets)
}
inline ::int32_t TargetDef::_internal_num_targets() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_targets_;
}
inline void TargetDef::_internal_set_num_targets(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_targets_ = value;
}

// bool remove_closest_on_miss = 3;
inline bool TargetDef::has_remove_closest_on_miss() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TargetDef::clear_remove_closest_on_miss() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remove_closest_on_miss_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool TargetDef::remove_closest_on_miss() const {
  // @@protoc_insertion_point(field_get:aim.TargetDef.remove_closest_on_miss)
  return _internal_remove_closest_on_miss();
}
inline void TargetDef::set_remove_closest_on_miss(bool value) {
  _internal_set_remove_closest_on_miss(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:aim.TargetDef.remove_closest_on_miss)
}
inline bool TargetDef::_internal_remove_closest_on_miss() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.remove_closest_on_miss_;
}
inline void TargetDef::_internal_set_remove_closest_on_miss(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remove_closest_on_miss_ = value;
}

// repeated int32 target_order = 4;
inline int TargetDef::_internal_target_order_size() const {
  return _internal_target_order().size();
}
inline int TargetDef::target_order_size() const {
  return _internal_target_order_size();
}
inline void TargetDef::clear_target_order() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_order_.Clear();
}
inline ::int32_t TargetDef::target_order(int index) const {
  // @@protoc_insertion_point(field_get:aim.TargetDef.target_order)
  return _internal_target_order().Get(index);
}
inline void TargetDef::set_target_order(int index, ::int32_t value) {
  _internal_mutable_target_order()->Set(index, value);
  // @@protoc_insertion_point(field_set:aim.TargetDef.target_order)
}
inline void TargetDef::add_target_order(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_target_order()->Add(value);
  // @@protoc_insertion_point(field_add:aim.TargetDef.target_order)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& TargetDef::target_order() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:aim.TargetDef.target_order)
  return _internal_target_order();
}
inline ::google::protobuf::RepeatedField<::int32_t>* TargetDef::mutable_target_order()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:aim.TargetDef.target_order)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_target_order();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
TargetDef::_internal_target_order() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_order_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* TargetDef::_internal_mutable_target_order() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.target_order_;
}

// bool newest_target_is_ghost = 5;
inline bool TargetDef::has_newest_target_is_ghost() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TargetDef::clear_newest_target_is_ghost() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.newest_target_is_ghost_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool TargetDef::newest_target_is_ghost() const {
  // @@protoc_insertion_point(field_get:aim.TargetDef.newest_target_is_ghost)
  return _internal_newest_target_is_ghost();
}
inline void TargetDef::set_newest_target_is_ghost(bool value) {
  _internal_set_newest_target_is_ghost(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:aim.TargetDef.newest_target_is_ghost)
}
inline bool TargetDef::_internal_newest_target_is_ghost() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.newest_target_is_ghost_;
}
inline void TargetDef::_internal_set_newest_target_is_ghost(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.newest_target_is_ghost_ = value;
}

// float new_target_delay_seconds = 6;
inline bool TargetDef::has_new_target_delay_seconds() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void TargetDef::clear_new_target_delay_seconds() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_target_delay_seconds_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline float TargetDef::new_target_delay_seconds() const {
  // @@protoc_insertion_point(field_get:aim.TargetDef.new_target_delay_seconds)
  return _internal_new_target_delay_seconds();
}
inline void TargetDef::set_new_target_delay_seconds(float value) {
  _internal_set_new_target_delay_seconds(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:aim.TargetDef.new_target_delay_seconds)
}
inline float TargetDef::_internal_new_target_delay_seconds() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.new_target_delay_seconds_;
}
inline void TargetDef::_internal_set_new_target_delay_seconds(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_target_delay_seconds_ = value;
}

// float remove_target_after_seconds = 7;
inline bool TargetDef::has_remove_target_after_seconds() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void TargetDef::clear_remove_target_after_seconds() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remove_target_after_seconds_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline float TargetDef::remove_target_after_seconds() const {
  // @@protoc_insertion_point(field_get:aim.TargetDef.remove_target_after_seconds)
  return _internal_remove_target_after_seconds();
}
inline void TargetDef::set_remove_target_after_seconds(float value) {
  _internal_set_remove_target_after_seconds(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:aim.TargetDef.remove_target_after_seconds)
}
inline float TargetDef::_internal_remove_target_after_seconds() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.remove_target_after_seconds_;
}
inline void TargetDef::_internal_set_remove_target_after_seconds(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remove_target_after_seconds_ = value;
}

// float stagger_initial_targets_seconds = 8;
inline bool TargetDef::has_stagger_initial_targets_seconds() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void TargetDef::clear_stagger_initial_targets_seconds() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stagger_initial_targets_seconds_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline float TargetDef::stagger_initial_targets_seconds() const {
  // @@protoc_insertion_point(field_get:aim.TargetDef.stagger_initial_targets_seconds)
  return _internal_stagger_initial_targets_seconds();
}
inline void TargetDef::set_stagger_initial_targets_seconds(float value) {
  _internal_set_stagger_initial_targets_seconds(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:aim.TargetDef.stagger_initial_targets_seconds)
}
inline float TargetDef::_internal_stagger_initial_targets_seconds() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.stagger_initial_targets_seconds_;
}
inline void TargetDef::_internal_set_stagger_initial_targets_seconds(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stagger_initial_targets_seconds_ = value;
}

// -------------------------------------------------------------------

// PillTargetDef

// float height = 1;
inline bool PillTargetDef::has_height() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void PillTargetDef::clear_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float PillTargetDef::height() const {
  // @@protoc_insertion_point(field_get:aim.PillTargetDef.height)
  return _internal_height();
}
inline void PillTargetDef::set_height(float value) {
  _internal_set_height(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:aim.PillTargetDef.height)
}
inline float PillTargetDef::_internal_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.height_;
}
inline void PillTargetDef::_internal_set_height(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = value;
}

// .aim.StoredVec3 up = 2;
inline bool PillTargetDef::has_up() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.up_ != nullptr);
  return value;
}
inline const ::aim::StoredVec3& PillTargetDef::_internal_up() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::aim::StoredVec3* p = _impl_.up_;
  return p != nullptr ? *p : reinterpret_cast<const ::aim::StoredVec3&>(::aim::_StoredVec3_default_instance_);
}
inline const ::aim::StoredVec3& PillTargetDef::up() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:aim.PillTargetDef.up)
  return _internal_up();
}
inline void PillTargetDef::unsafe_arena_set_allocated_up(::aim::StoredVec3* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.up_);
  }
  _impl_.up_ = reinterpret_cast<::aim::StoredVec3*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aim.PillTargetDef.up)
}
inline ::aim::StoredVec3* PillTargetDef::release_up() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::aim::StoredVec3* released = _impl_.up_;
  _impl_.up_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::aim::StoredVec3* PillTargetDef::unsafe_arena_release_up() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:aim.PillTargetDef.up)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::aim::StoredVec3* temp = _impl_.up_;
  _impl_.up_ = nullptr;
  return temp;
}
inline ::aim::StoredVec3* PillTargetDef::_internal_mutable_up() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.up_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::aim::StoredVec3>(GetArena());
    _impl_.up_ = reinterpret_cast<::aim::StoredVec3*>(p);
  }
  return _impl_.up_;
}
inline ::aim::StoredVec3* PillTargetDef::mutable_up() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::aim::StoredVec3* _msg = _internal_mutable_up();
  // @@protoc_insertion_point(field_mutable:aim.PillTargetDef.up)
  return _msg;
}
inline void PillTargetDef::set_allocated_up(::aim::StoredVec3* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.up_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.up_ = reinterpret_cast<::aim::StoredVec3*>(value);
  // @@protoc_insertion_point(field_set_allocated:aim.PillTargetDef.up)
}

// .aim.StoredVec2 wall_up = 3;
inline bool PillTargetDef::has_wall_up() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.wall_up_ != nullptr);
  return value;
}
inline const ::aim::StoredVec2& PillTargetDef::_internal_wall_up() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::aim::StoredVec2* p = _impl_.wall_up_;
  return p != nullptr ? *p : reinterpret_cast<const ::aim::StoredVec2&>(::aim::_StoredVec2_default_instance_);
}
inline const ::aim::StoredVec2& PillTargetDef::wall_up() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:aim.PillTargetDef.wall_up)
  return _internal_wall_up();
}
inline void PillTargetDef::unsafe_arena_set_allocated_wall_up(::aim::StoredVec2* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.wall_up_);
  }
  _impl_.wall_up_ = reinterpret_cast<::aim::StoredVec2*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aim.PillTargetDef.wall_up)
}
inline ::aim::StoredVec2* PillTargetDef::release_wall_up() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::aim::StoredVec2* released = _impl_.wall_up_;
  _impl_.wall_up_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::aim::StoredVec2* PillTargetDef::unsafe_arena_release_wall_up() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:aim.PillTargetDef.wall_up)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::aim::StoredVec2* temp = _impl_.wall_up_;
  _impl_.wall_up_ = nullptr;
  return temp;
}
inline ::aim::StoredVec2* PillTargetDef::_internal_mutable_wall_up() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.wall_up_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::aim::StoredVec2>(GetArena());
    _impl_.wall_up_ = reinterpret_cast<::aim::StoredVec2*>(p);
  }
  return _impl_.wall_up_;
}
inline ::aim::StoredVec2* PillTargetDef::mutable_wall_up() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::aim::StoredVec2* _msg = _internal_mutable_wall_up();
  // @@protoc_insertion_point(field_mutable:aim.PillTargetDef.wall_up)
  return _msg;
}
inline void PillTargetDef::set_allocated_wall_up(::aim::StoredVec2* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.wall_up_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.wall_up_ = reinterpret_cast<::aim::StoredVec2*>(value);
  // @@protoc_insertion_point(field_set_allocated:aim.PillTargetDef.wall_up)
}

// -------------------------------------------------------------------

// TargetProfile

// float percent_chance = 1;
inline bool TargetProfile::has_percent_chance() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TargetProfile::clear_percent_chance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.percent_chance_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float TargetProfile::percent_chance() const {
  // @@protoc_insertion_point(field_get:aim.TargetProfile.percent_chance)
  return _internal_percent_chance();
}
inline void TargetProfile::set_percent_chance(float value) {
  _internal_set_percent_chance(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:aim.TargetProfile.percent_chance)
}
inline float TargetProfile::_internal_percent_chance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.percent_chance_;
}
inline void TargetProfile::_internal_set_percent_chance(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.percent_chance_ = value;
}

// float target_radius = 2;
inline bool TargetProfile::has_target_radius() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TargetProfile::clear_target_radius() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_radius_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float TargetProfile::target_radius() const {
  // @@protoc_insertion_point(field_get:aim.TargetProfile.target_radius)
  return _internal_target_radius();
}
inline void TargetProfile::set_target_radius(float value) {
  _internal_set_target_radius(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:aim.TargetProfile.target_radius)
}
inline float TargetProfile::_internal_target_radius() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_radius_;
}
inline void TargetProfile::_internal_set_target_radius(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_radius_ = value;
}

// float target_radius_jitter = 3;
inline bool TargetProfile::has_target_radius_jitter() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TargetProfile::clear_target_radius_jitter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_radius_jitter_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float TargetProfile::target_radius_jitter() const {
  // @@protoc_insertion_point(field_get:aim.TargetProfile.target_radius_jitter)
  return _internal_target_radius_jitter();
}
inline void TargetProfile::set_target_radius_jitter(float value) {
  _internal_set_target_radius_jitter(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:aim.TargetProfile.target_radius_jitter)
}
inline float TargetProfile::_internal_target_radius_jitter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_radius_jitter_;
}
inline void TargetProfile::_internal_set_target_radius_jitter(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_radius_jitter_ = value;
}

// float speed = 4;
inline bool TargetProfile::has_speed() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void TargetProfile::clear_speed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline float TargetProfile::speed() const {
  // @@protoc_insertion_point(field_get:aim.TargetProfile.speed)
  return _internal_speed();
}
inline void TargetProfile::set_speed(float value) {
  _internal_set_speed(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:aim.TargetProfile.speed)
}
inline float TargetProfile::_internal_speed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.speed_;
}
inline void TargetProfile::_internal_set_speed(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_ = value;
}

// float speed_jitter = 5;
inline bool TargetProfile::has_speed_jitter() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void TargetProfile::clear_speed_jitter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_jitter_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline float TargetProfile::speed_jitter() const {
  // @@protoc_insertion_point(field_get:aim.TargetProfile.speed_jitter)
  return _internal_speed_jitter();
}
inline void TargetProfile::set_speed_jitter(float value) {
  _internal_set_speed_jitter(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:aim.TargetProfile.speed_jitter)
}
inline float TargetProfile::_internal_speed_jitter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.speed_jitter_;
}
inline void TargetProfile::_internal_set_speed_jitter(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_jitter_ = value;
}

// float health_seconds = 6;
inline bool TargetProfile::has_health_seconds() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void TargetProfile::clear_health_seconds() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.health_seconds_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline float TargetProfile::health_seconds() const {
  // @@protoc_insertion_point(field_get:aim.TargetProfile.health_seconds)
  return _internal_health_seconds();
}
inline void TargetProfile::set_health_seconds(float value) {
  _internal_set_health_seconds(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:aim.TargetProfile.health_seconds)
}
inline float TargetProfile::_internal_health_seconds() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.health_seconds_;
}
inline void TargetProfile::_internal_set_health_seconds(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.health_seconds_ = value;
}

// float health_seconds_jitter = 7;
inline bool TargetProfile::has_health_seconds_jitter() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void TargetProfile::clear_health_seconds_jitter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.health_seconds_jitter_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline float TargetProfile::health_seconds_jitter() const {
  // @@protoc_insertion_point(field_get:aim.TargetProfile.health_seconds_jitter)
  return _internal_health_seconds_jitter();
}
inline void TargetProfile::set_health_seconds_jitter(float value) {
  _internal_set_health_seconds_jitter(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:aim.TargetProfile.health_seconds_jitter)
}
inline float TargetProfile::_internal_health_seconds_jitter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.health_seconds_jitter_;
}
inline void TargetProfile::_internal_set_health_seconds_jitter(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.health_seconds_jitter_ = value;
}

// .aim.PillTargetDef pill = 10;
inline bool TargetProfile::has_pill() const {
  return type_case() == kPill;
}
inline bool TargetProfile::_internal_has_pill() const {
  return type_case() == kPill;
}
inline void TargetProfile::set_has_pill() {
  _impl_._oneof_case_[0] = kPill;
}
inline void TargetProfile::clear_pill() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kPill) {
    if (GetArena() == nullptr) {
      delete _impl_.type_.pill_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.pill_);
    }
    clear_has_type();
  }
}
inline ::aim::PillTargetDef* TargetProfile::release_pill() {
  // @@protoc_insertion_point(field_release:aim.TargetProfile.pill)
  if (type_case() == kPill) {
    clear_has_type();
    auto* temp = _impl_.type_.pill_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.type_.pill_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::aim::PillTargetDef& TargetProfile::_internal_pill() const {
  return type_case() == kPill ? *_impl_.type_.pill_ : reinterpret_cast<::aim::PillTargetDef&>(::aim::_PillTargetDef_default_instance_);
}
inline const ::aim::PillTargetDef& TargetProfile::pill() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:aim.TargetProfile.pill)
  return _internal_pill();
}
inline ::aim::PillTargetDef* TargetProfile::unsafe_arena_release_pill() {
  // @@protoc_insertion_point(field_unsafe_arena_release:aim.TargetProfile.pill)
  if (type_case() == kPill) {
    clear_has_type();
    auto* temp = _impl_.type_.pill_;
    _impl_.type_.pill_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TargetProfile::unsafe_arena_set_allocated_pill(::aim::PillTargetDef* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_type();
  if (value) {
    set_has_pill();
    _impl_.type_.pill_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aim.TargetProfile.pill)
}
inline ::aim::PillTargetDef* TargetProfile::_internal_mutable_pill() {
  if (type_case() != kPill) {
    clear_type();
    set_has_pill();
    _impl_.type_.pill_ =
        ::google::protobuf::Message::DefaultConstruct<::aim::PillTargetDef>(GetArena());
  }
  return _impl_.type_.pill_;
}
inline ::aim::PillTargetDef* TargetProfile::mutable_pill() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::aim::PillTargetDef* _msg = _internal_mutable_pill();
  // @@protoc_insertion_point(field_mutable:aim.TargetProfile.pill)
  return _msg;
}

inline bool TargetProfile::has_type() const {
  return type_case() != TYPE_NOT_SET;
}
inline void TargetProfile::clear_has_type() {
  _impl_._oneof_case_[0] = TYPE_NOT_SET;
}
inline TargetProfile::TypeCase TargetProfile::type_case() const {
  return TargetProfile::TypeCase(_impl_._oneof_case_[0]);
}
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace aim


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // scenario_2eproto_2epb_2eh
