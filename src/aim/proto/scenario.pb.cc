// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: scenario.proto
// Protobuf C++ Version: 5.29.3

#include "scenario.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace aim {

inline constexpr SimpleRoom::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        height_{0},
        width_{0},
        depth_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SimpleRoom::SimpleRoom(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SimpleRoomDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SimpleRoomDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SimpleRoomDefaultTypeInternal() {}
  union {
    SimpleRoom _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SimpleRoomDefaultTypeInternal _SimpleRoom_default_instance_;

inline constexpr ShotType::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        poke_kill_time_seconds_{0},
        no_partial_kills_{false},
        type_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR ShotType::ShotType(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ShotTypeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShotTypeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShotTypeDefaultTypeInternal() {}
  union {
    ShotType _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShotTypeDefaultTypeInternal _ShotType_default_instance_;

inline constexpr ScenarioReferenceOverrides::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        duration_seconds_{0},
        target_radius_multiplier_{0},
        num_targets_{0},
        speed_multiplier_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ScenarioReferenceOverrides::ScenarioReferenceOverrides(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ScenarioReferenceOverridesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScenarioReferenceOverridesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScenarioReferenceOverridesDefaultTypeInternal() {}
  union {
    ScenarioReferenceOverrides _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScenarioReferenceOverridesDefaultTypeInternal _ScenarioReferenceOverrides_default_instance_;

inline constexpr RegionLength::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : type_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR RegionLength::RegionLength(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegionLengthDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegionLengthDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegionLengthDefaultTypeInternal() {}
  union {
    RegionLength _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegionLengthDefaultTypeInternal _RegionLength_default_instance_;

inline constexpr PillTargetDef::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        height_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PillTargetDef::PillTargetDef(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PillTargetDefDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PillTargetDefDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PillTargetDefDefaultTypeInternal() {}
  union {
    PillTargetDef _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PillTargetDefDefaultTypeInternal _PillTargetDef_default_instance_;

inline constexpr CircularRoom::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        height_{0},
        radius_{0},
        width_{0},
        hide_sides_{false},
        side_angle_degrees_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CircularRoom::CircularRoom(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CircularRoomDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CircularRoomDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CircularRoomDefaultTypeInternal() {}
  union {
    CircularRoom _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CircularRoomDefaultTypeInternal _CircularRoom_default_instance_;

inline constexpr BarrelRoom::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        radius_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BarrelRoom::BarrelRoom(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BarrelRoomDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BarrelRoomDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BarrelRoomDefaultTypeInternal() {}
  union {
    BarrelRoom _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BarrelRoomDefaultTypeInternal _BarrelRoom_default_instance_;

inline constexpr TargetProfile::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        percent_chance_{0},
        target_radius_{0},
        target_radius_jitter_{0},
        speed_{0},
        speed_jitter_{0},
        health_seconds_{0},
        health_seconds_jitter_{0},
        type_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR TargetProfile::TargetProfile(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TargetProfileDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TargetProfileDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TargetProfileDefaultTypeInternal() {}
  union {
    TargetProfile _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TargetProfileDefaultTypeInternal _TargetProfile_default_instance_;

inline constexpr Room::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_position_{nullptr},
        start_pitch_{0},
        start_yaw_{0},
        type_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Room::Room(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RoomDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoomDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoomDefaultTypeInternal() {}
  union {
    Room _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoomDefaultTypeInternal _Room_default_instance_;

inline constexpr RectangleTargetRegion::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        x_length_{nullptr},
        y_length_{nullptr},
        inner_x_length_{nullptr},
        inner_y_length_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RectangleTargetRegion::RectangleTargetRegion(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RectangleTargetRegionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RectangleTargetRegionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RectangleTargetRegionDefaultTypeInternal() {}
  union {
    RectangleTargetRegion _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RectangleTargetRegionDefaultTypeInternal _RectangleTargetRegion_default_instance_;

inline constexpr EllipseTargetRegion::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        x_diameter_{nullptr},
        y_diameter_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR EllipseTargetRegion::EllipseTargetRegion(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EllipseTargetRegionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EllipseTargetRegionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EllipseTargetRegionDefaultTypeInternal() {}
  union {
    EllipseTargetRegion _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EllipseTargetRegionDefaultTypeInternal _EllipseTargetRegion_default_instance_;

inline constexpr CircleTargetRegion::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        diameter_{nullptr},
        inner_diameter_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CircleTargetRegion::CircleTargetRegion(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CircleTargetRegionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CircleTargetRegionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CircleTargetRegionDefaultTypeInternal() {}
  union {
    CircleTargetRegion _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CircleTargetRegionDefaultTypeInternal _CircleTargetRegion_default_instance_;

inline constexpr CenteringScenarioDef::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        start_position_{nullptr},
        end_position_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CenteringScenarioDef::CenteringScenarioDef(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CenteringScenarioDefDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CenteringScenarioDefDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CenteringScenarioDefDefaultTypeInternal() {}
  union {
    CenteringScenarioDef _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CenteringScenarioDefDefaultTypeInternal _CenteringScenarioDef_default_instance_;

inline constexpr TargetRegion::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        x_offset_{nullptr},
        y_offset_{nullptr},
        percent_chance_{0},
        type_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR TargetRegion::TargetRegion(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TargetRegionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TargetRegionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TargetRegionDefaultTypeInternal() {}
  union {
    TargetRegion _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TargetRegionDefaultTypeInternal _TargetRegion_default_instance_;

inline constexpr TargetDef::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        profiles_{},
        target_order_{},
        _target_order_cached_byte_size_{0},
        num_targets_{0},
        remove_closest_on_miss_{false},
        newest_target_is_ghost_{false},
        new_target_delay_seconds_{0},
        remove_target_after_seconds_{0},
        stagger_initial_targets_seconds_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TargetDef::TargetDef(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TargetDefDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TargetDefDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TargetDefDefaultTypeInternal() {}
  union {
    TargetDef _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TargetDefDefaultTypeInternal _TargetDef_default_instance_;

inline constexpr TargetPlacementStrategy::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        regions_{},
        region_order_{},
        _region_order_cached_byte_size_{0},
        min_distance_{0},
        fixed_distance_from_last_target_{0},
        fixed_distance_jitter_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TargetPlacementStrategy::TargetPlacementStrategy(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TargetPlacementStrategyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TargetPlacementStrategyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TargetPlacementStrategyDefaultTypeInternal() {}
  union {
    TargetPlacementStrategy _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TargetPlacementStrategyDefaultTypeInternal _TargetPlacementStrategy_default_instance_;

inline constexpr StaticScenarioDef::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        target_placement_strategy_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR StaticScenarioDef::StaticScenarioDef(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StaticScenarioDefDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StaticScenarioDefDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StaticScenarioDefDefaultTypeInternal() {}
  union {
    StaticScenarioDef _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StaticScenarioDefDefaultTypeInternal _StaticScenarioDef_default_instance_;

inline constexpr LinearScenarioDef::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        target_placement_strategy_{nullptr},
        angle_{0},
        angle_jitter_{0},
        width_{0},
        height_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LinearScenarioDef::LinearScenarioDef(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LinearScenarioDefDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LinearScenarioDefDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LinearScenarioDefDefaultTypeInternal() {}
  union {
    LinearScenarioDef _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LinearScenarioDefDefaultTypeInternal _LinearScenarioDef_default_instance_;

inline constexpr BarrelScenarioDef::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        target_placement_strategy_{nullptr},
        direction_radius_percent_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BarrelScenarioDef::BarrelScenarioDef(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BarrelScenarioDefDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BarrelScenarioDefDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BarrelScenarioDefDefaultTypeInternal() {}
  union {
    BarrelScenarioDef _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BarrelScenarioDefDefaultTypeInternal _BarrelScenarioDef_default_instance_;

inline constexpr ScenarioDef::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        scenario_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        reference_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        room_{nullptr},
        target_def_{nullptr},
        overrides_{nullptr},
        shot_type_{nullptr},
        duration_seconds_{0},
        type_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR ScenarioDef::ScenarioDef(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ScenarioDefDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScenarioDefDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScenarioDefDefaultTypeInternal() {}
  union {
    ScenarioDef _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScenarioDefDefaultTypeInternal _ScenarioDef_default_instance_;
}  // namespace aim
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_scenario_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_scenario_2eproto = nullptr;
const ::uint32_t
    TableStruct_scenario_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::aim::SimpleRoom, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::aim::SimpleRoom, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::aim::SimpleRoom, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::aim::SimpleRoom, _impl_.width_),
        PROTOBUF_FIELD_OFFSET(::aim::SimpleRoom, _impl_.depth_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::aim::CircularRoom, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::aim::CircularRoom, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::aim::CircularRoom, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::aim::CircularRoom, _impl_.radius_),
        PROTOBUF_FIELD_OFFSET(::aim::CircularRoom, _impl_.width_),
        PROTOBUF_FIELD_OFFSET(::aim::CircularRoom, _impl_.hide_sides_),
        PROTOBUF_FIELD_OFFSET(::aim::CircularRoom, _impl_.side_angle_degrees_),
        0,
        1,
        2,
        3,
        4,
        PROTOBUF_FIELD_OFFSET(::aim::BarrelRoom, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::aim::BarrelRoom, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::aim::BarrelRoom, _impl_.radius_),
        0,
        PROTOBUF_FIELD_OFFSET(::aim::Room, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::aim::Room, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::aim::Room, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::aim::Room, _impl_.camera_position_),
        PROTOBUF_FIELD_OFFSET(::aim::Room, _impl_.start_pitch_),
        PROTOBUF_FIELD_OFFSET(::aim::Room, _impl_.start_yaw_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::aim::Room, _impl_.type_),
        0,
        1,
        2,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::aim::RegionLength, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::aim::RegionLength, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::aim::RegionLength, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::aim::TargetRegion, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::aim::TargetRegion, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::aim::TargetRegion, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::aim::TargetRegion, _impl_.percent_chance_),
        PROTOBUF_FIELD_OFFSET(::aim::TargetRegion, _impl_.x_offset_),
        PROTOBUF_FIELD_OFFSET(::aim::TargetRegion, _impl_.y_offset_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::aim::TargetRegion, _impl_.type_),
        2,
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::aim::RectangleTargetRegion, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::aim::RectangleTargetRegion, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::aim::RectangleTargetRegion, _impl_.x_length_),
        PROTOBUF_FIELD_OFFSET(::aim::RectangleTargetRegion, _impl_.y_length_),
        PROTOBUF_FIELD_OFFSET(::aim::RectangleTargetRegion, _impl_.inner_x_length_),
        PROTOBUF_FIELD_OFFSET(::aim::RectangleTargetRegion, _impl_.inner_y_length_),
        0,
        1,
        2,
        3,
        PROTOBUF_FIELD_OFFSET(::aim::EllipseTargetRegion, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::aim::EllipseTargetRegion, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::aim::EllipseTargetRegion, _impl_.x_diameter_),
        PROTOBUF_FIELD_OFFSET(::aim::EllipseTargetRegion, _impl_.y_diameter_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::aim::CircleTargetRegion, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::aim::CircleTargetRegion, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::aim::CircleTargetRegion, _impl_.diameter_),
        PROTOBUF_FIELD_OFFSET(::aim::CircleTargetRegion, _impl_.inner_diameter_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::aim::TargetPlacementStrategy, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::aim::TargetPlacementStrategy, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::aim::TargetPlacementStrategy, _impl_.regions_),
        PROTOBUF_FIELD_OFFSET(::aim::TargetPlacementStrategy, _impl_.region_order_),
        PROTOBUF_FIELD_OFFSET(::aim::TargetPlacementStrategy, _impl_.min_distance_),
        PROTOBUF_FIELD_OFFSET(::aim::TargetPlacementStrategy, _impl_.fixed_distance_from_last_target_),
        PROTOBUF_FIELD_OFFSET(::aim::TargetPlacementStrategy, _impl_.fixed_distance_jitter_),
        ~0u,
        ~0u,
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::aim::ScenarioReferenceOverrides, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::aim::ScenarioReferenceOverrides, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::aim::ScenarioReferenceOverrides, _impl_.duration_seconds_),
        PROTOBUF_FIELD_OFFSET(::aim::ScenarioReferenceOverrides, _impl_.target_radius_multiplier_),
        PROTOBUF_FIELD_OFFSET(::aim::ScenarioReferenceOverrides, _impl_.num_targets_),
        PROTOBUF_FIELD_OFFSET(::aim::ScenarioReferenceOverrides, _impl_.speed_multiplier_),
        0,
        1,
        2,
        3,
        PROTOBUF_FIELD_OFFSET(::aim::ShotType, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::aim::ShotType, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::aim::ShotType, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::aim::ShotType, _impl_.poke_kill_time_seconds_),
        PROTOBUF_FIELD_OFFSET(::aim::ShotType, _impl_.no_partial_kills_),
        PROTOBUF_FIELD_OFFSET(::aim::ShotType, _impl_.type_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::aim::ScenarioDef, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::aim::ScenarioDef, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::aim::ScenarioDef, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::aim::ScenarioDef, _impl_.scenario_id_),
        PROTOBUF_FIELD_OFFSET(::aim::ScenarioDef, _impl_.duration_seconds_),
        PROTOBUF_FIELD_OFFSET(::aim::ScenarioDef, _impl_.room_),
        PROTOBUF_FIELD_OFFSET(::aim::ScenarioDef, _impl_.target_def_),
        PROTOBUF_FIELD_OFFSET(::aim::ScenarioDef, _impl_.reference_),
        PROTOBUF_FIELD_OFFSET(::aim::ScenarioDef, _impl_.overrides_),
        PROTOBUF_FIELD_OFFSET(::aim::ScenarioDef, _impl_.shot_type_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::aim::ScenarioDef, _impl_.type_),
        0,
        6,
        2,
        3,
        1,
        4,
        5,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::aim::StaticScenarioDef, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::aim::StaticScenarioDef, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::aim::StaticScenarioDef, _impl_.target_placement_strategy_),
        0,
        PROTOBUF_FIELD_OFFSET(::aim::CenteringScenarioDef, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::aim::CenteringScenarioDef, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::aim::CenteringScenarioDef, _impl_.start_position_),
        PROTOBUF_FIELD_OFFSET(::aim::CenteringScenarioDef, _impl_.end_position_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::aim::BarrelScenarioDef, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::aim::BarrelScenarioDef, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::aim::BarrelScenarioDef, _impl_.target_placement_strategy_),
        PROTOBUF_FIELD_OFFSET(::aim::BarrelScenarioDef, _impl_.direction_radius_percent_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::aim::LinearScenarioDef, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::aim::LinearScenarioDef, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::aim::LinearScenarioDef, _impl_.angle_),
        PROTOBUF_FIELD_OFFSET(::aim::LinearScenarioDef, _impl_.angle_jitter_),
        PROTOBUF_FIELD_OFFSET(::aim::LinearScenarioDef, _impl_.width_),
        PROTOBUF_FIELD_OFFSET(::aim::LinearScenarioDef, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::aim::LinearScenarioDef, _impl_.target_placement_strategy_),
        1,
        2,
        3,
        4,
        0,
        PROTOBUF_FIELD_OFFSET(::aim::TargetDef, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::aim::TargetDef, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::aim::TargetDef, _impl_.profiles_),
        PROTOBUF_FIELD_OFFSET(::aim::TargetDef, _impl_.num_targets_),
        PROTOBUF_FIELD_OFFSET(::aim::TargetDef, _impl_.remove_closest_on_miss_),
        PROTOBUF_FIELD_OFFSET(::aim::TargetDef, _impl_.target_order_),
        PROTOBUF_FIELD_OFFSET(::aim::TargetDef, _impl_.newest_target_is_ghost_),
        PROTOBUF_FIELD_OFFSET(::aim::TargetDef, _impl_.new_target_delay_seconds_),
        PROTOBUF_FIELD_OFFSET(::aim::TargetDef, _impl_.remove_target_after_seconds_),
        PROTOBUF_FIELD_OFFSET(::aim::TargetDef, _impl_.stagger_initial_targets_seconds_),
        ~0u,
        0,
        1,
        ~0u,
        2,
        3,
        4,
        5,
        PROTOBUF_FIELD_OFFSET(::aim::PillTargetDef, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::aim::PillTargetDef, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::aim::PillTargetDef, _impl_.height_),
        0,
        PROTOBUF_FIELD_OFFSET(::aim::TargetProfile, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::aim::TargetProfile, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::aim::TargetProfile, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::aim::TargetProfile, _impl_.percent_chance_),
        PROTOBUF_FIELD_OFFSET(::aim::TargetProfile, _impl_.target_radius_),
        PROTOBUF_FIELD_OFFSET(::aim::TargetProfile, _impl_.target_radius_jitter_),
        PROTOBUF_FIELD_OFFSET(::aim::TargetProfile, _impl_.speed_),
        PROTOBUF_FIELD_OFFSET(::aim::TargetProfile, _impl_.speed_jitter_),
        PROTOBUF_FIELD_OFFSET(::aim::TargetProfile, _impl_.health_seconds_),
        PROTOBUF_FIELD_OFFSET(::aim::TargetProfile, _impl_.health_seconds_jitter_),
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::aim::TargetProfile, _impl_.type_),
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 11, -1, sizeof(::aim::SimpleRoom)},
        {14, 27, -1, sizeof(::aim::CircularRoom)},
        {32, 41, -1, sizeof(::aim::BarrelRoom)},
        {42, 57, -1, sizeof(::aim::Room)},
        {63, -1, -1, sizeof(::aim::RegionLength)},
        {75, 90, -1, sizeof(::aim::TargetRegion)},
        {96, 108, -1, sizeof(::aim::RectangleTargetRegion)},
        {112, 122, -1, sizeof(::aim::EllipseTargetRegion)},
        {124, 134, -1, sizeof(::aim::CircleTargetRegion)},
        {136, 149, -1, sizeof(::aim::TargetPlacementStrategy)},
        {154, 166, -1, sizeof(::aim::ScenarioReferenceOverrides)},
        {170, 185, -1, sizeof(::aim::ShotType)},
        {191, 211, -1, sizeof(::aim::ScenarioDef)},
        {222, 231, -1, sizeof(::aim::StaticScenarioDef)},
        {232, 242, -1, sizeof(::aim::CenteringScenarioDef)},
        {244, 254, -1, sizeof(::aim::BarrelScenarioDef)},
        {256, 269, -1, sizeof(::aim::LinearScenarioDef)},
        {274, 290, -1, sizeof(::aim::TargetDef)},
        {298, 307, -1, sizeof(::aim::PillTargetDef)},
        {308, 325, -1, sizeof(::aim::TargetProfile)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::aim::_SimpleRoom_default_instance_._instance,
    &::aim::_CircularRoom_default_instance_._instance,
    &::aim::_BarrelRoom_default_instance_._instance,
    &::aim::_Room_default_instance_._instance,
    &::aim::_RegionLength_default_instance_._instance,
    &::aim::_TargetRegion_default_instance_._instance,
    &::aim::_RectangleTargetRegion_default_instance_._instance,
    &::aim::_EllipseTargetRegion_default_instance_._instance,
    &::aim::_CircleTargetRegion_default_instance_._instance,
    &::aim::_TargetPlacementStrategy_default_instance_._instance,
    &::aim::_ScenarioReferenceOverrides_default_instance_._instance,
    &::aim::_ShotType_default_instance_._instance,
    &::aim::_ScenarioDef_default_instance_._instance,
    &::aim::_StaticScenarioDef_default_instance_._instance,
    &::aim::_CenteringScenarioDef_default_instance_._instance,
    &::aim::_BarrelScenarioDef_default_instance_._instance,
    &::aim::_LinearScenarioDef_default_instance_._instance,
    &::aim::_TargetDef_default_instance_._instance,
    &::aim::_PillTargetDef_default_instance_._instance,
    &::aim::_TargetProfile_default_instance_._instance,
};
const char descriptor_table_protodef_scenario_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\016scenario.proto\022\003aim\032\014common.proto\":\n\nS"
    "impleRoom\022\016\n\006height\030\001 \001(\002\022\r\n\005width\030\002 \001(\002"
    "\022\r\n\005depth\030\003 \001(\002\"m\n\014CircularRoom\022\016\n\006heigh"
    "t\030\001 \001(\002\022\016\n\006radius\030\002 \001(\002\022\r\n\005width\030\003 \001(\002\022\022"
    "\n\nhide_sides\030\004 \001(\010\022\032\n\022side_angle_degrees"
    "\030\005 \001(\002\"\034\n\nBarrelRoom\022\016\n\006radius\030\001 \001(\002\"\334\001\n"
    "\004Room\022(\n\017camera_position\030\001 \001(\0132\017.aim.Sto"
    "redVec3\022\023\n\013start_pitch\030\002 \001(\002\022\021\n\tstart_ya"
    "w\030\003 \001(\002\022&\n\013simple_room\030\004 \001(\0132\017.aim.Simpl"
    "eRoomH\000\022*\n\rcircular_room\030\005 \001(\0132\021.aim.Cir"
    "cularRoomH\000\022&\n\013barrel_room\030\006 \001(\0132\017.aim.B"
    "arrelRoomH\000B\006\n\004type\"]\n\014RegionLength\022\031\n\017x"
    "_percent_value\030\001 \001(\002H\000\022\031\n\017y_percent_valu"
    "e\030\002 \001(\002H\000\022\017\n\005value\030\003 \001(\002H\000B\006\n\004type\"\201\002\n\014T"
    "argetRegion\022\026\n\016percent_chance\030\001 \001(\002\022#\n\010x"
    "_offset\030\002 \001(\0132\021.aim.RegionLength\022#\n\010y_of"
    "fset\030\003 \001(\0132\021.aim.RegionLength\022/\n\trectang"
    "le\030\004 \001(\0132\032.aim.RectangleTargetRegionH\000\022+"
    "\n\007ellipse\030\005 \001(\0132\030.aim.EllipseTargetRegio"
    "nH\000\022)\n\006circle\030\006 \001(\0132\027.aim.CircleTargetRe"
    "gionH\000B\006\n\004type\"\267\001\n\025RectangleTargetRegion"
    "\022#\n\010x_length\030\001 \001(\0132\021.aim.RegionLength\022#\n"
    "\010y_length\030\002 \001(\0132\021.aim.RegionLength\022)\n\016in"
    "ner_x_length\030\003 \001(\0132\021.aim.RegionLength\022)\n"
    "\016inner_y_length\030\004 \001(\0132\021.aim.RegionLength"
    "\"c\n\023EllipseTargetRegion\022%\n\nx_diameter\030\001 "
    "\001(\0132\021.aim.RegionLength\022%\n\ny_diameter\030\002 \001"
    "(\0132\021.aim.RegionLength\"d\n\022CircleTargetReg"
    "ion\022#\n\010diameter\030\001 \001(\0132\021.aim.RegionLength"
    "\022)\n\016inner_diameter\030\002 \001(\0132\021.aim.RegionLen"
    "gth\"\261\001\n\027TargetPlacementStrategy\022\"\n\007regio"
    "ns\030\001 \003(\0132\021.aim.TargetRegion\022\024\n\014region_or"
    "der\030\002 \003(\005\022\024\n\014min_distance\030\003 \001(\002\022\'\n\037fixed"
    "_distance_from_last_target\030\004 \001(\002\022\035\n\025fixe"
    "d_distance_jitter\030\005 \001(\002\"\207\001\n\032ScenarioRefe"
    "renceOverrides\022\030\n\020duration_seconds\030\001 \001(\002"
    "\022 \n\030target_radius_multiplier\030\002 \001(\002\022\023\n\013nu"
    "m_targets\030\003 \001(\005\022\030\n\020speed_multiplier\030\004 \001("
    "\002\"\254\001\n\010ShotType\022\016\n\004poke\030\001 \001(\010H\000\022\027\n\rtracki"
    "ng_kill\030\002 \001(\010H\000\022\035\n\023tracking_invincible\030\003"
    " \001(\010H\000\022\026\n\014click_single\030\004 \001(\010H\000\022\036\n\026poke_k"
    "ill_time_seconds\030\n \001(\002\022\030\n\020no_partial_kil"
    "ls\030\013 \001(\010B\006\n\004type\"\250\003\n\013ScenarioDef\022\023\n\013scen"
    "ario_id\030\001 \001(\t\022\030\n\020duration_seconds\030\002 \001(\002\022"
    "\027\n\004room\030\003 \001(\0132\t.aim.Room\022\"\n\ntarget_def\030\005"
    " \001(\0132\016.aim.TargetDef\022\021\n\treference\030\006 \001(\t\022"
    "2\n\toverrides\030\007 \001(\0132\037.aim.ScenarioReferen"
    "ceOverrides\022 \n\tshot_type\030\010 \001(\0132\r.aim.Sho"
    "tType\022,\n\nstatic_def\030\n \001(\0132\026.aim.StaticSc"
    "enarioDefH\000\0222\n\rcentering_def\030\013 \001(\0132\031.aim"
    ".CenteringScenarioDefH\000\022,\n\nbarrel_def\030\014 "
    "\001(\0132\026.aim.BarrelScenarioDefH\000\022,\n\nlinear_"
    "def\030\r \001(\0132\026.aim.LinearScenarioDefH\000B\006\n\004t"
    "ype\"T\n\021StaticScenarioDef\022\?\n\031target_place"
    "ment_strategy\030\001 \001(\0132\034.aim.TargetPlacemen"
    "tStrategy\"f\n\024CenteringScenarioDef\022\'\n\016sta"
    "rt_position\030\001 \001(\0132\017.aim.StoredVec3\022%\n\014en"
    "d_position\030\002 \001(\0132\017.aim.StoredVec3\"v\n\021Bar"
    "relScenarioDef\022\?\n\031target_placement_strat"
    "egy\030\001 \001(\0132\034.aim.TargetPlacementStrategy\022"
    " \n\030direction_radius_percent\030\002 \001(\002\"\230\001\n\021Li"
    "nearScenarioDef\022\r\n\005angle\030\001 \001(\002\022\024\n\014angle_"
    "jitter\030\002 \001(\002\022\r\n\005width\030\003 \001(\002\022\016\n\006height\030\004 "
    "\001(\002\022\?\n\031target_placement_strategy\030\005 \001(\0132\034"
    ".aim.TargetPlacementStrategy\"\214\002\n\tTargetD"
    "ef\022$\n\010profiles\030\001 \003(\0132\022.aim.TargetProfile"
    "\022\023\n\013num_targets\030\002 \001(\005\022\036\n\026remove_closest_"
    "on_miss\030\003 \001(\010\022\024\n\014target_order\030\004 \003(\005\022\036\n\026n"
    "ewest_target_is_ghost\030\005 \001(\010\022 \n\030new_targe"
    "t_delay_seconds\030\006 \001(\002\022#\n\033remove_target_a"
    "fter_seconds\030\007 \001(\002\022\'\n\037stagger_initial_ta"
    "rgets_seconds\030\010 \001(\002\"\037\n\rPillTargetDef\022\016\n\006"
    "height\030\001 \001(\002\"\344\001\n\rTargetProfile\022\026\n\016percen"
    "t_chance\030\001 \001(\002\022\025\n\rtarget_radius\030\002 \001(\002\022\034\n"
    "\024target_radius_jitter\030\003 \001(\002\022\r\n\005speed\030\004 \001"
    "(\002\022\024\n\014speed_jitter\030\005 \001(\002\022\026\n\016health_secon"
    "ds\030\006 \001(\002\022\035\n\025health_seconds_jitter\030\007 \001(\002\022"
    "\"\n\004pill\030\n \001(\0132\022.aim.PillTargetDefH\000B\006\n\004t"
    "ypeb\010editionsp\350\007"
};
static const ::_pbi::DescriptorTable* const descriptor_table_scenario_2eproto_deps[1] =
    {
        &::descriptor_table_common_2eproto,
};
static ::absl::once_flag descriptor_table_scenario_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_scenario_2eproto = {
    false,
    false,
    3136,
    descriptor_table_protodef_scenario_2eproto,
    "scenario.proto",
    &descriptor_table_scenario_2eproto_once,
    descriptor_table_scenario_2eproto_deps,
    1,
    20,
    schemas,
    file_default_instances,
    TableStruct_scenario_2eproto::offsets,
    file_level_enum_descriptors_scenario_2eproto,
    file_level_service_descriptors_scenario_2eproto,
};
namespace aim {
// ===================================================================

class SimpleRoom::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SimpleRoom>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SimpleRoom, _impl_._has_bits_);
};

SimpleRoom::SimpleRoom(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:aim.SimpleRoom)
}
SimpleRoom::SimpleRoom(
    ::google::protobuf::Arena* arena, const SimpleRoom& from)
    : SimpleRoom(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SimpleRoom::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SimpleRoom::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, height_),
           0,
           offsetof(Impl_, depth_) -
               offsetof(Impl_, height_) +
               sizeof(Impl_::depth_));
}
SimpleRoom::~SimpleRoom() {
  // @@protoc_insertion_point(destructor:aim.SimpleRoom)
  SharedDtor(*this);
}
inline void SimpleRoom::SharedDtor(MessageLite& self) {
  SimpleRoom& this_ = static_cast<SimpleRoom&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SimpleRoom::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SimpleRoom(arena);
}
constexpr auto SimpleRoom::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SimpleRoom),
                                            alignof(SimpleRoom));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SimpleRoom::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SimpleRoom_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SimpleRoom::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SimpleRoom>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SimpleRoom::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SimpleRoom>(), &SimpleRoom::ByteSizeLong,
            &SimpleRoom::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SimpleRoom, _impl_._cached_size_),
        false,
    },
    &SimpleRoom::kDescriptorMethods,
    &descriptor_table_scenario_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SimpleRoom::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> SimpleRoom::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SimpleRoom, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::aim::SimpleRoom>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float height = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(SimpleRoom, _impl_.height_)}},
    // float width = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(SimpleRoom, _impl_.width_)}},
    // float depth = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(SimpleRoom, _impl_.depth_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float height = 1;
    {PROTOBUF_FIELD_OFFSET(SimpleRoom, _impl_.height_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float width = 2;
    {PROTOBUF_FIELD_OFFSET(SimpleRoom, _impl_.width_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float depth = 3;
    {PROTOBUF_FIELD_OFFSET(SimpleRoom, _impl_.depth_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SimpleRoom::Clear() {
// @@protoc_insertion_point(message_clear_start:aim.SimpleRoom)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.height_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.depth_) -
        reinterpret_cast<char*>(&_impl_.height_)) + sizeof(_impl_.depth_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SimpleRoom::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SimpleRoom& this_ = static_cast<const SimpleRoom&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SimpleRoom::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SimpleRoom& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:aim.SimpleRoom)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // float height = 1;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_height(), target);
          }

          // float width = 2;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_width(), target);
          }

          // float depth = 3;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_depth(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:aim.SimpleRoom)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SimpleRoom::ByteSizeLong(const MessageLite& base) {
          const SimpleRoom& this_ = static_cast<const SimpleRoom&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SimpleRoom::ByteSizeLong() const {
          const SimpleRoom& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:aim.SimpleRoom)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // float height = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 5;
            }
            // float width = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 5;
            }
            // float depth = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SimpleRoom::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SimpleRoom*>(&to_msg);
  auto& from = static_cast<const SimpleRoom&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:aim.SimpleRoom)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.height_ = from._impl_.height_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.width_ = from._impl_.width_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.depth_ = from._impl_.depth_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SimpleRoom::CopyFrom(const SimpleRoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aim.SimpleRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SimpleRoom::InternalSwap(SimpleRoom* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SimpleRoom, _impl_.depth_)
      + sizeof(SimpleRoom::_impl_.depth_)
      - PROTOBUF_FIELD_OFFSET(SimpleRoom, _impl_.height_)>(
          reinterpret_cast<char*>(&_impl_.height_),
          reinterpret_cast<char*>(&other->_impl_.height_));
}

::google::protobuf::Metadata SimpleRoom::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CircularRoom::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CircularRoom>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CircularRoom, _impl_._has_bits_);
};

CircularRoom::CircularRoom(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:aim.CircularRoom)
}
CircularRoom::CircularRoom(
    ::google::protobuf::Arena* arena, const CircularRoom& from)
    : CircularRoom(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CircularRoom::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CircularRoom::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, height_),
           0,
           offsetof(Impl_, side_angle_degrees_) -
               offsetof(Impl_, height_) +
               sizeof(Impl_::side_angle_degrees_));
}
CircularRoom::~CircularRoom() {
  // @@protoc_insertion_point(destructor:aim.CircularRoom)
  SharedDtor(*this);
}
inline void CircularRoom::SharedDtor(MessageLite& self) {
  CircularRoom& this_ = static_cast<CircularRoom&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* CircularRoom::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CircularRoom(arena);
}
constexpr auto CircularRoom::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CircularRoom),
                                            alignof(CircularRoom));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CircularRoom::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CircularRoom_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CircularRoom::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CircularRoom>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CircularRoom::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CircularRoom>(), &CircularRoom::ByteSizeLong,
            &CircularRoom::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CircularRoom, _impl_._cached_size_),
        false,
    },
    &CircularRoom::kDescriptorMethods,
    &descriptor_table_scenario_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CircularRoom::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> CircularRoom::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CircularRoom, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::aim::CircularRoom>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float height = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(CircularRoom, _impl_.height_)}},
    // float radius = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(CircularRoom, _impl_.radius_)}},
    // float width = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(CircularRoom, _impl_.width_)}},
    // bool hide_sides = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CircularRoom, _impl_.hide_sides_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CircularRoom, _impl_.hide_sides_)}},
    // float side_angle_degrees = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 4, 0, PROTOBUF_FIELD_OFFSET(CircularRoom, _impl_.side_angle_degrees_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // float height = 1;
    {PROTOBUF_FIELD_OFFSET(CircularRoom, _impl_.height_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float radius = 2;
    {PROTOBUF_FIELD_OFFSET(CircularRoom, _impl_.radius_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float width = 3;
    {PROTOBUF_FIELD_OFFSET(CircularRoom, _impl_.width_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // bool hide_sides = 4;
    {PROTOBUF_FIELD_OFFSET(CircularRoom, _impl_.hide_sides_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // float side_angle_degrees = 5;
    {PROTOBUF_FIELD_OFFSET(CircularRoom, _impl_.side_angle_degrees_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void CircularRoom::Clear() {
// @@protoc_insertion_point(message_clear_start:aim.CircularRoom)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&_impl_.height_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.side_angle_degrees_) -
        reinterpret_cast<char*>(&_impl_.height_)) + sizeof(_impl_.side_angle_degrees_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CircularRoom::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CircularRoom& this_ = static_cast<const CircularRoom&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CircularRoom::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CircularRoom& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:aim.CircularRoom)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // float height = 1;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_height(), target);
          }

          // float radius = 2;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_radius(), target);
          }

          // float width = 3;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_width(), target);
          }

          // bool hide_sides = 4;
          if (cached_has_bits & 0x00000008u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_hide_sides(), target);
          }

          // float side_angle_degrees = 5;
          if (cached_has_bits & 0x00000010u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                5, this_._internal_side_angle_degrees(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:aim.CircularRoom)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CircularRoom::ByteSizeLong(const MessageLite& base) {
          const CircularRoom& this_ = static_cast<const CircularRoom&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CircularRoom::ByteSizeLong() const {
          const CircularRoom& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:aim.CircularRoom)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000001fu) {
            // float height = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 5;
            }
            // float radius = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 5;
            }
            // float width = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += 5;
            }
            // bool hide_sides = 4;
            if (cached_has_bits & 0x00000008u) {
              total_size += 2;
            }
            // float side_angle_degrees = 5;
            if (cached_has_bits & 0x00000010u) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CircularRoom::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CircularRoom*>(&to_msg);
  auto& from = static_cast<const CircularRoom&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:aim.CircularRoom)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.height_ = from._impl_.height_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.radius_ = from._impl_.radius_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.width_ = from._impl_.width_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.hide_sides_ = from._impl_.hide_sides_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.side_angle_degrees_ = from._impl_.side_angle_degrees_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CircularRoom::CopyFrom(const CircularRoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aim.CircularRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CircularRoom::InternalSwap(CircularRoom* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CircularRoom, _impl_.side_angle_degrees_)
      + sizeof(CircularRoom::_impl_.side_angle_degrees_)
      - PROTOBUF_FIELD_OFFSET(CircularRoom, _impl_.height_)>(
          reinterpret_cast<char*>(&_impl_.height_),
          reinterpret_cast<char*>(&other->_impl_.height_));
}

::google::protobuf::Metadata CircularRoom::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BarrelRoom::_Internal {
 public:
  using HasBits =
      decltype(std::declval<BarrelRoom>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BarrelRoom, _impl_._has_bits_);
};

BarrelRoom::BarrelRoom(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:aim.BarrelRoom)
}
BarrelRoom::BarrelRoom(
    ::google::protobuf::Arena* arena, const BarrelRoom& from)
    : BarrelRoom(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE BarrelRoom::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void BarrelRoom::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.radius_ = {};
}
BarrelRoom::~BarrelRoom() {
  // @@protoc_insertion_point(destructor:aim.BarrelRoom)
  SharedDtor(*this);
}
inline void BarrelRoom::SharedDtor(MessageLite& self) {
  BarrelRoom& this_ = static_cast<BarrelRoom&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* BarrelRoom::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BarrelRoom(arena);
}
constexpr auto BarrelRoom::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(BarrelRoom),
                                            alignof(BarrelRoom));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BarrelRoom::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BarrelRoom_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BarrelRoom::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BarrelRoom>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BarrelRoom::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BarrelRoom>(), &BarrelRoom::ByteSizeLong,
            &BarrelRoom::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BarrelRoom, _impl_._cached_size_),
        false,
    },
    &BarrelRoom::kDescriptorMethods,
    &descriptor_table_scenario_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BarrelRoom::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> BarrelRoom::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BarrelRoom, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::aim::BarrelRoom>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // float radius = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(BarrelRoom, _impl_.radius_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float radius = 1;
    {PROTOBUF_FIELD_OFFSET(BarrelRoom, _impl_.radius_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void BarrelRoom::Clear() {
// @@protoc_insertion_point(message_clear_start:aim.BarrelRoom)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.radius_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BarrelRoom::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BarrelRoom& this_ = static_cast<const BarrelRoom&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BarrelRoom::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BarrelRoom& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:aim.BarrelRoom)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // float radius = 1;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_radius(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:aim.BarrelRoom)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BarrelRoom::ByteSizeLong(const MessageLite& base) {
          const BarrelRoom& this_ = static_cast<const BarrelRoom&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BarrelRoom::ByteSizeLong() const {
          const BarrelRoom& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:aim.BarrelRoom)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // float radius = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BarrelRoom::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BarrelRoom*>(&to_msg);
  auto& from = static_cast<const BarrelRoom&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:aim.BarrelRoom)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.radius_ = from._impl_.radius_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BarrelRoom::CopyFrom(const BarrelRoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aim.BarrelRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BarrelRoom::InternalSwap(BarrelRoom* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.radius_, other->_impl_.radius_);
}

::google::protobuf::Metadata BarrelRoom::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Room::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Room>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Room, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::aim::Room, _impl_._oneof_case_);
};

void Room::clear_camera_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_position_ != nullptr) _impl_.camera_position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Room::set_allocated_simple_room(::aim::SimpleRoom* simple_room) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (simple_room) {
    ::google::protobuf::Arena* submessage_arena = simple_room->GetArena();
    if (message_arena != submessage_arena) {
      simple_room = ::google::protobuf::internal::GetOwnedMessage(message_arena, simple_room, submessage_arena);
    }
    set_has_simple_room();
    _impl_.type_.simple_room_ = simple_room;
  }
  // @@protoc_insertion_point(field_set_allocated:aim.Room.simple_room)
}
void Room::set_allocated_circular_room(::aim::CircularRoom* circular_room) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (circular_room) {
    ::google::protobuf::Arena* submessage_arena = circular_room->GetArena();
    if (message_arena != submessage_arena) {
      circular_room = ::google::protobuf::internal::GetOwnedMessage(message_arena, circular_room, submessage_arena);
    }
    set_has_circular_room();
    _impl_.type_.circular_room_ = circular_room;
  }
  // @@protoc_insertion_point(field_set_allocated:aim.Room.circular_room)
}
void Room::set_allocated_barrel_room(::aim::BarrelRoom* barrel_room) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (barrel_room) {
    ::google::protobuf::Arena* submessage_arena = barrel_room->GetArena();
    if (message_arena != submessage_arena) {
      barrel_room = ::google::protobuf::internal::GetOwnedMessage(message_arena, barrel_room, submessage_arena);
    }
    set_has_barrel_room();
    _impl_.type_.barrel_room_ = barrel_room;
  }
  // @@protoc_insertion_point(field_set_allocated:aim.Room.barrel_room)
}
Room::Room(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:aim.Room)
}
inline PROTOBUF_NDEBUG_INLINE Room::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::aim::Room& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        type_{},
        _oneof_case_{from._oneof_case_[0]} {}

Room::Room(
    ::google::protobuf::Arena* arena,
    const Room& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Room* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_position_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::aim::StoredVec3>(
                              arena, *from._impl_.camera_position_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, start_pitch_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, start_pitch_),
           offsetof(Impl_, start_yaw_) -
               offsetof(Impl_, start_pitch_) +
               sizeof(Impl_::start_yaw_));
  switch (type_case()) {
    case TYPE_NOT_SET:
      break;
      case kSimpleRoom:
        _impl_.type_.simple_room_ = ::google::protobuf::Message::CopyConstruct<::aim::SimpleRoom>(arena, *from._impl_.type_.simple_room_);
        break;
      case kCircularRoom:
        _impl_.type_.circular_room_ = ::google::protobuf::Message::CopyConstruct<::aim::CircularRoom>(arena, *from._impl_.type_.circular_room_);
        break;
      case kBarrelRoom:
        _impl_.type_.barrel_room_ = ::google::protobuf::Message::CopyConstruct<::aim::BarrelRoom>(arena, *from._impl_.type_.barrel_room_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:aim.Room)
}
inline PROTOBUF_NDEBUG_INLINE Room::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        type_{},
        _oneof_case_{} {}

inline void Room::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, camera_position_),
           0,
           offsetof(Impl_, start_yaw_) -
               offsetof(Impl_, camera_position_) +
               sizeof(Impl_::start_yaw_));
}
Room::~Room() {
  // @@protoc_insertion_point(destructor:aim.Room)
  SharedDtor(*this);
}
inline void Room::SharedDtor(MessageLite& self) {
  Room& this_ = static_cast<Room&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.camera_position_;
  if (this_.has_type()) {
    this_.clear_type();
  }
  this_._impl_.~Impl_();
}

void Room::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:aim.Room)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (type_case()) {
    case kSimpleRoom: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.simple_room_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.simple_room_);
      }
      break;
    }
    case kCircularRoom: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.circular_room_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.circular_room_);
      }
      break;
    }
    case kBarrelRoom: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.barrel_room_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.barrel_room_);
      }
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = TYPE_NOT_SET;
}


inline void* Room::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Room(arena);
}
constexpr auto Room::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Room),
                                            alignof(Room));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Room::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Room_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Room::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Room>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Room::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Room>(), &Room::ByteSizeLong,
            &Room::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Room, _impl_._cached_size_),
        false,
    },
    &Room::kDescriptorMethods,
    &descriptor_table_scenario_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Room::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 6, 4, 0, 2> Room::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Room, _impl_._has_bits_),
    0, // no _extensions_
    6, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::aim::Room>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .aim.StoredVec3 camera_position = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Room, _impl_.camera_position_)}},
    // float start_pitch = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(Room, _impl_.start_pitch_)}},
    // float start_yaw = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(Room, _impl_.start_yaw_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .aim.StoredVec3 camera_position = 1;
    {PROTOBUF_FIELD_OFFSET(Room, _impl_.camera_position_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // float start_pitch = 2;
    {PROTOBUF_FIELD_OFFSET(Room, _impl_.start_pitch_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float start_yaw = 3;
    {PROTOBUF_FIELD_OFFSET(Room, _impl_.start_yaw_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // .aim.SimpleRoom simple_room = 4;
    {PROTOBUF_FIELD_OFFSET(Room, _impl_.type_.simple_room_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .aim.CircularRoom circular_room = 5;
    {PROTOBUF_FIELD_OFFSET(Room, _impl_.type_.circular_room_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .aim.BarrelRoom barrel_room = 6;
    {PROTOBUF_FIELD_OFFSET(Room, _impl_.type_.barrel_room_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::aim::StoredVec3>()},
    {::_pbi::TcParser::GetTable<::aim::SimpleRoom>()},
    {::_pbi::TcParser::GetTable<::aim::CircularRoom>()},
    {::_pbi::TcParser::GetTable<::aim::BarrelRoom>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Room::Clear() {
// @@protoc_insertion_point(message_clear_start:aim.Room)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_position_ != nullptr);
    _impl_.camera_position_->Clear();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.start_pitch_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.start_yaw_) -
        reinterpret_cast<char*>(&_impl_.start_pitch_)) + sizeof(_impl_.start_yaw_));
  }
  clear_type();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Room::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Room& this_ = static_cast<const Room&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Room::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Room& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:aim.Room)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .aim.StoredVec3 camera_position = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.camera_position_, this_._impl_.camera_position_->GetCachedSize(), target,
                stream);
          }

          // float start_pitch = 2;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_start_pitch(), target);
          }

          // float start_yaw = 3;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_start_yaw(), target);
          }

          switch (this_.type_case()) {
            case kSimpleRoom: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  4, *this_._impl_.type_.simple_room_, this_._impl_.type_.simple_room_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kCircularRoom: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  5, *this_._impl_.type_.circular_room_, this_._impl_.type_.circular_room_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kBarrelRoom: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  6, *this_._impl_.type_.barrel_room_, this_._impl_.type_.barrel_room_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:aim.Room)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Room::ByteSizeLong(const MessageLite& base) {
          const Room& this_ = static_cast<const Room&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Room::ByteSizeLong() const {
          const Room& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:aim.Room)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // .aim.StoredVec3 camera_position = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.camera_position_);
            }
            // float start_pitch = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 5;
            }
            // float start_yaw = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += 5;
            }
          }
          switch (this_.type_case()) {
            // .aim.SimpleRoom simple_room = 4;
            case kSimpleRoom: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.type_.simple_room_);
              break;
            }
            // .aim.CircularRoom circular_room = 5;
            case kCircularRoom: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.type_.circular_room_);
              break;
            }
            // .aim.BarrelRoom barrel_room = 6;
            case kBarrelRoom: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.type_.barrel_room_);
              break;
            }
            case TYPE_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Room::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Room*>(&to_msg);
  auto& from = static_cast<const Room&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:aim.Room)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.camera_position_ != nullptr);
      if (_this->_impl_.camera_position_ == nullptr) {
        _this->_impl_.camera_position_ =
            ::google::protobuf::Message::CopyConstruct<::aim::StoredVec3>(arena, *from._impl_.camera_position_);
      } else {
        _this->_impl_.camera_position_->MergeFrom(*from._impl_.camera_position_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.start_pitch_ = from._impl_.start_pitch_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.start_yaw_ = from._impl_.start_yaw_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_type();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kSimpleRoom: {
        if (oneof_needs_init) {
          _this->_impl_.type_.simple_room_ =
              ::google::protobuf::Message::CopyConstruct<::aim::SimpleRoom>(arena, *from._impl_.type_.simple_room_);
        } else {
          _this->_impl_.type_.simple_room_->MergeFrom(from._internal_simple_room());
        }
        break;
      }
      case kCircularRoom: {
        if (oneof_needs_init) {
          _this->_impl_.type_.circular_room_ =
              ::google::protobuf::Message::CopyConstruct<::aim::CircularRoom>(arena, *from._impl_.type_.circular_room_);
        } else {
          _this->_impl_.type_.circular_room_->MergeFrom(from._internal_circular_room());
        }
        break;
      }
      case kBarrelRoom: {
        if (oneof_needs_init) {
          _this->_impl_.type_.barrel_room_ =
              ::google::protobuf::Message::CopyConstruct<::aim::BarrelRoom>(arena, *from._impl_.type_.barrel_room_);
        } else {
          _this->_impl_.type_.barrel_room_->MergeFrom(from._internal_barrel_room());
        }
        break;
      }
      case TYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Room::CopyFrom(const Room& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aim.Room)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Room::InternalSwap(Room* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Room, _impl_.start_yaw_)
      + sizeof(Room::_impl_.start_yaw_)
      - PROTOBUF_FIELD_OFFSET(Room, _impl_.camera_position_)>(
          reinterpret_cast<char*>(&_impl_.camera_position_),
          reinterpret_cast<char*>(&other->_impl_.camera_position_));
  swap(_impl_.type_, other->_impl_.type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Room::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RegionLength::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::aim::RegionLength, _impl_._oneof_case_);
};

RegionLength::RegionLength(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:aim.RegionLength)
}
inline PROTOBUF_NDEBUG_INLINE RegionLength::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::aim::RegionLength& from_msg)
      : type_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

RegionLength::RegionLength(
    ::google::protobuf::Arena* arena,
    const RegionLength& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegionLength* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (type_case()) {
    case TYPE_NOT_SET:
      break;
      case kXPercentValue:
        _impl_.type_.x_percent_value_ = from._impl_.type_.x_percent_value_;
        break;
      case kYPercentValue:
        _impl_.type_.y_percent_value_ = from._impl_.type_.y_percent_value_;
        break;
      case kValue:
        _impl_.type_.value_ = from._impl_.type_.value_;
        break;
  }

  // @@protoc_insertion_point(copy_constructor:aim.RegionLength)
}
inline PROTOBUF_NDEBUG_INLINE RegionLength::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : type_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void RegionLength::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RegionLength::~RegionLength() {
  // @@protoc_insertion_point(destructor:aim.RegionLength)
  SharedDtor(*this);
}
inline void RegionLength::SharedDtor(MessageLite& self) {
  RegionLength& this_ = static_cast<RegionLength&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_type()) {
    this_.clear_type();
  }
  this_._impl_.~Impl_();
}

void RegionLength::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:aim.RegionLength)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (type_case()) {
    case kXPercentValue: {
      // No need to clear
      break;
    }
    case kYPercentValue: {
      // No need to clear
      break;
    }
    case kValue: {
      // No need to clear
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = TYPE_NOT_SET;
}


inline void* RegionLength::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RegionLength(arena);
}
constexpr auto RegionLength::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RegionLength),
                                            alignof(RegionLength));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RegionLength::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RegionLength_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RegionLength::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RegionLength>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RegionLength::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RegionLength>(), &RegionLength::ByteSizeLong,
            &RegionLength::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RegionLength, _impl_._cached_size_),
        false,
    },
    &RegionLength::kDescriptorMethods,
    &descriptor_table_scenario_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RegionLength::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 0, 0, 2> RegionLength::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::aim::RegionLength>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // float x_percent_value = 1;
    {PROTOBUF_FIELD_OFFSET(RegionLength, _impl_.type_.x_percent_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kFloat)},
    // float y_percent_value = 2;
    {PROTOBUF_FIELD_OFFSET(RegionLength, _impl_.type_.y_percent_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kFloat)},
    // float value = 3;
    {PROTOBUF_FIELD_OFFSET(RegionLength, _impl_.type_.value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void RegionLength::Clear() {
// @@protoc_insertion_point(message_clear_start:aim.RegionLength)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_type();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RegionLength::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RegionLength& this_ = static_cast<const RegionLength&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RegionLength::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RegionLength& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:aim.RegionLength)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.type_case()) {
            case kXPercentValue: {
              target = stream->EnsureSpace(target);
              target = ::_pbi::WireFormatLite::WriteFloatToArray(
                  1, this_._internal_x_percent_value(), target);
              break;
            }
            case kYPercentValue: {
              target = stream->EnsureSpace(target);
              target = ::_pbi::WireFormatLite::WriteFloatToArray(
                  2, this_._internal_y_percent_value(), target);
              break;
            }
            case kValue: {
              target = stream->EnsureSpace(target);
              target = ::_pbi::WireFormatLite::WriteFloatToArray(
                  3, this_._internal_value(), target);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:aim.RegionLength)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RegionLength::ByteSizeLong(const MessageLite& base) {
          const RegionLength& this_ = static_cast<const RegionLength&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RegionLength::ByteSizeLong() const {
          const RegionLength& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:aim.RegionLength)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.type_case()) {
            // float x_percent_value = 1;
            case kXPercentValue: {
              total_size += 5;
              break;
            }
            // float y_percent_value = 2;
            case kYPercentValue: {
              total_size += 5;
              break;
            }
            // float value = 3;
            case kValue: {
              total_size += 5;
              break;
            }
            case TYPE_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RegionLength::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegionLength*>(&to_msg);
  auto& from = static_cast<const RegionLength&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:aim.RegionLength)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_type();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kXPercentValue: {
        _this->_impl_.type_.x_percent_value_ = from._impl_.type_.x_percent_value_;
        break;
      }
      case kYPercentValue: {
        _this->_impl_.type_.y_percent_value_ = from._impl_.type_.y_percent_value_;
        break;
      }
      case kValue: {
        _this->_impl_.type_.value_ = from._impl_.type_.value_;
        break;
      }
      case TYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegionLength::CopyFrom(const RegionLength& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aim.RegionLength)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegionLength::InternalSwap(RegionLength* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.type_, other->_impl_.type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata RegionLength::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TargetRegion::_Internal {
 public:
  using HasBits =
      decltype(std::declval<TargetRegion>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TargetRegion, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::aim::TargetRegion, _impl_._oneof_case_);
};

void TargetRegion::set_allocated_rectangle(::aim::RectangleTargetRegion* rectangle) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (rectangle) {
    ::google::protobuf::Arena* submessage_arena = rectangle->GetArena();
    if (message_arena != submessage_arena) {
      rectangle = ::google::protobuf::internal::GetOwnedMessage(message_arena, rectangle, submessage_arena);
    }
    set_has_rectangle();
    _impl_.type_.rectangle_ = rectangle;
  }
  // @@protoc_insertion_point(field_set_allocated:aim.TargetRegion.rectangle)
}
void TargetRegion::set_allocated_ellipse(::aim::EllipseTargetRegion* ellipse) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (ellipse) {
    ::google::protobuf::Arena* submessage_arena = ellipse->GetArena();
    if (message_arena != submessage_arena) {
      ellipse = ::google::protobuf::internal::GetOwnedMessage(message_arena, ellipse, submessage_arena);
    }
    set_has_ellipse();
    _impl_.type_.ellipse_ = ellipse;
  }
  // @@protoc_insertion_point(field_set_allocated:aim.TargetRegion.ellipse)
}
void TargetRegion::set_allocated_circle(::aim::CircleTargetRegion* circle) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (circle) {
    ::google::protobuf::Arena* submessage_arena = circle->GetArena();
    if (message_arena != submessage_arena) {
      circle = ::google::protobuf::internal::GetOwnedMessage(message_arena, circle, submessage_arena);
    }
    set_has_circle();
    _impl_.type_.circle_ = circle;
  }
  // @@protoc_insertion_point(field_set_allocated:aim.TargetRegion.circle)
}
TargetRegion::TargetRegion(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:aim.TargetRegion)
}
inline PROTOBUF_NDEBUG_INLINE TargetRegion::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::aim::TargetRegion& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        type_{},
        _oneof_case_{from._oneof_case_[0]} {}

TargetRegion::TargetRegion(
    ::google::protobuf::Arena* arena,
    const TargetRegion& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TargetRegion* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.x_offset_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::aim::RegionLength>(
                              arena, *from._impl_.x_offset_)
                        : nullptr;
  _impl_.y_offset_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::aim::RegionLength>(
                              arena, *from._impl_.y_offset_)
                        : nullptr;
  _impl_.percent_chance_ = from._impl_.percent_chance_;
  switch (type_case()) {
    case TYPE_NOT_SET:
      break;
      case kRectangle:
        _impl_.type_.rectangle_ = ::google::protobuf::Message::CopyConstruct<::aim::RectangleTargetRegion>(arena, *from._impl_.type_.rectangle_);
        break;
      case kEllipse:
        _impl_.type_.ellipse_ = ::google::protobuf::Message::CopyConstruct<::aim::EllipseTargetRegion>(arena, *from._impl_.type_.ellipse_);
        break;
      case kCircle:
        _impl_.type_.circle_ = ::google::protobuf::Message::CopyConstruct<::aim::CircleTargetRegion>(arena, *from._impl_.type_.circle_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:aim.TargetRegion)
}
inline PROTOBUF_NDEBUG_INLINE TargetRegion::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        type_{},
        _oneof_case_{} {}

inline void TargetRegion::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_offset_),
           0,
           offsetof(Impl_, percent_chance_) -
               offsetof(Impl_, x_offset_) +
               sizeof(Impl_::percent_chance_));
}
TargetRegion::~TargetRegion() {
  // @@protoc_insertion_point(destructor:aim.TargetRegion)
  SharedDtor(*this);
}
inline void TargetRegion::SharedDtor(MessageLite& self) {
  TargetRegion& this_ = static_cast<TargetRegion&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.x_offset_;
  delete this_._impl_.y_offset_;
  if (this_.has_type()) {
    this_.clear_type();
  }
  this_._impl_.~Impl_();
}

void TargetRegion::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:aim.TargetRegion)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (type_case()) {
    case kRectangle: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.rectangle_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.rectangle_);
      }
      break;
    }
    case kEllipse: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.ellipse_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.ellipse_);
      }
      break;
    }
    case kCircle: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.circle_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.circle_);
      }
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = TYPE_NOT_SET;
}


inline void* TargetRegion::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TargetRegion(arena);
}
constexpr auto TargetRegion::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TargetRegion),
                                            alignof(TargetRegion));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TargetRegion::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TargetRegion_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TargetRegion::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TargetRegion>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TargetRegion::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TargetRegion>(), &TargetRegion::ByteSizeLong,
            &TargetRegion::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TargetRegion, _impl_._cached_size_),
        false,
    },
    &TargetRegion::kDescriptorMethods,
    &descriptor_table_scenario_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TargetRegion::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 6, 5, 0, 2> TargetRegion::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TargetRegion, _impl_._has_bits_),
    0, // no _extensions_
    6, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::aim::TargetRegion>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float percent_chance = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 2, 0, PROTOBUF_FIELD_OFFSET(TargetRegion, _impl_.percent_chance_)}},
    // .aim.RegionLength x_offset = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(TargetRegion, _impl_.x_offset_)}},
    // .aim.RegionLength y_offset = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(TargetRegion, _impl_.y_offset_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float percent_chance = 1;
    {PROTOBUF_FIELD_OFFSET(TargetRegion, _impl_.percent_chance_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // .aim.RegionLength x_offset = 2;
    {PROTOBUF_FIELD_OFFSET(TargetRegion, _impl_.x_offset_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .aim.RegionLength y_offset = 3;
    {PROTOBUF_FIELD_OFFSET(TargetRegion, _impl_.y_offset_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .aim.RectangleTargetRegion rectangle = 4;
    {PROTOBUF_FIELD_OFFSET(TargetRegion, _impl_.type_.rectangle_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .aim.EllipseTargetRegion ellipse = 5;
    {PROTOBUF_FIELD_OFFSET(TargetRegion, _impl_.type_.ellipse_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .aim.CircleTargetRegion circle = 6;
    {PROTOBUF_FIELD_OFFSET(TargetRegion, _impl_.type_.circle_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::aim::RegionLength>()},
    {::_pbi::TcParser::GetTable<::aim::RegionLength>()},
    {::_pbi::TcParser::GetTable<::aim::RectangleTargetRegion>()},
    {::_pbi::TcParser::GetTable<::aim::EllipseTargetRegion>()},
    {::_pbi::TcParser::GetTable<::aim::CircleTargetRegion>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void TargetRegion::Clear() {
// @@protoc_insertion_point(message_clear_start:aim.TargetRegion)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.x_offset_ != nullptr);
      _impl_.x_offset_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.y_offset_ != nullptr);
      _impl_.y_offset_->Clear();
    }
  }
  _impl_.percent_chance_ = 0;
  clear_type();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TargetRegion::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TargetRegion& this_ = static_cast<const TargetRegion&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TargetRegion::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TargetRegion& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:aim.TargetRegion)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // float percent_chance = 1;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_percent_chance(), target);
          }

          // .aim.RegionLength x_offset = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.x_offset_, this_._impl_.x_offset_->GetCachedSize(), target,
                stream);
          }

          // .aim.RegionLength y_offset = 3;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.y_offset_, this_._impl_.y_offset_->GetCachedSize(), target,
                stream);
          }

          switch (this_.type_case()) {
            case kRectangle: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  4, *this_._impl_.type_.rectangle_, this_._impl_.type_.rectangle_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kEllipse: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  5, *this_._impl_.type_.ellipse_, this_._impl_.type_.ellipse_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kCircle: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  6, *this_._impl_.type_.circle_, this_._impl_.type_.circle_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:aim.TargetRegion)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TargetRegion::ByteSizeLong(const MessageLite& base) {
          const TargetRegion& this_ = static_cast<const TargetRegion&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TargetRegion::ByteSizeLong() const {
          const TargetRegion& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:aim.TargetRegion)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // .aim.RegionLength x_offset = 2;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.x_offset_);
            }
            // .aim.RegionLength y_offset = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.y_offset_);
            }
            // float percent_chance = 1;
            if (cached_has_bits & 0x00000004u) {
              total_size += 5;
            }
          }
          switch (this_.type_case()) {
            // .aim.RectangleTargetRegion rectangle = 4;
            case kRectangle: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.type_.rectangle_);
              break;
            }
            // .aim.EllipseTargetRegion ellipse = 5;
            case kEllipse: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.type_.ellipse_);
              break;
            }
            // .aim.CircleTargetRegion circle = 6;
            case kCircle: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.type_.circle_);
              break;
            }
            case TYPE_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TargetRegion::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TargetRegion*>(&to_msg);
  auto& from = static_cast<const TargetRegion&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:aim.TargetRegion)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.x_offset_ != nullptr);
      if (_this->_impl_.x_offset_ == nullptr) {
        _this->_impl_.x_offset_ =
            ::google::protobuf::Message::CopyConstruct<::aim::RegionLength>(arena, *from._impl_.x_offset_);
      } else {
        _this->_impl_.x_offset_->MergeFrom(*from._impl_.x_offset_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.y_offset_ != nullptr);
      if (_this->_impl_.y_offset_ == nullptr) {
        _this->_impl_.y_offset_ =
            ::google::protobuf::Message::CopyConstruct<::aim::RegionLength>(arena, *from._impl_.y_offset_);
      } else {
        _this->_impl_.y_offset_->MergeFrom(*from._impl_.y_offset_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.percent_chance_ = from._impl_.percent_chance_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_type();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kRectangle: {
        if (oneof_needs_init) {
          _this->_impl_.type_.rectangle_ =
              ::google::protobuf::Message::CopyConstruct<::aim::RectangleTargetRegion>(arena, *from._impl_.type_.rectangle_);
        } else {
          _this->_impl_.type_.rectangle_->MergeFrom(from._internal_rectangle());
        }
        break;
      }
      case kEllipse: {
        if (oneof_needs_init) {
          _this->_impl_.type_.ellipse_ =
              ::google::protobuf::Message::CopyConstruct<::aim::EllipseTargetRegion>(arena, *from._impl_.type_.ellipse_);
        } else {
          _this->_impl_.type_.ellipse_->MergeFrom(from._internal_ellipse());
        }
        break;
      }
      case kCircle: {
        if (oneof_needs_init) {
          _this->_impl_.type_.circle_ =
              ::google::protobuf::Message::CopyConstruct<::aim::CircleTargetRegion>(arena, *from._impl_.type_.circle_);
        } else {
          _this->_impl_.type_.circle_->MergeFrom(from._internal_circle());
        }
        break;
      }
      case TYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TargetRegion::CopyFrom(const TargetRegion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aim.TargetRegion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TargetRegion::InternalSwap(TargetRegion* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TargetRegion, _impl_.percent_chance_)
      + sizeof(TargetRegion::_impl_.percent_chance_)
      - PROTOBUF_FIELD_OFFSET(TargetRegion, _impl_.x_offset_)>(
          reinterpret_cast<char*>(&_impl_.x_offset_),
          reinterpret_cast<char*>(&other->_impl_.x_offset_));
  swap(_impl_.type_, other->_impl_.type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata TargetRegion::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RectangleTargetRegion::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RectangleTargetRegion>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RectangleTargetRegion, _impl_._has_bits_);
};

RectangleTargetRegion::RectangleTargetRegion(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:aim.RectangleTargetRegion)
}
inline PROTOBUF_NDEBUG_INLINE RectangleTargetRegion::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::aim::RectangleTargetRegion& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RectangleTargetRegion::RectangleTargetRegion(
    ::google::protobuf::Arena* arena,
    const RectangleTargetRegion& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RectangleTargetRegion* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.x_length_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::aim::RegionLength>(
                              arena, *from._impl_.x_length_)
                        : nullptr;
  _impl_.y_length_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::aim::RegionLength>(
                              arena, *from._impl_.y_length_)
                        : nullptr;
  _impl_.inner_x_length_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::aim::RegionLength>(
                              arena, *from._impl_.inner_x_length_)
                        : nullptr;
  _impl_.inner_y_length_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::aim::RegionLength>(
                              arena, *from._impl_.inner_y_length_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:aim.RectangleTargetRegion)
}
inline PROTOBUF_NDEBUG_INLINE RectangleTargetRegion::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RectangleTargetRegion::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_length_),
           0,
           offsetof(Impl_, inner_y_length_) -
               offsetof(Impl_, x_length_) +
               sizeof(Impl_::inner_y_length_));
}
RectangleTargetRegion::~RectangleTargetRegion() {
  // @@protoc_insertion_point(destructor:aim.RectangleTargetRegion)
  SharedDtor(*this);
}
inline void RectangleTargetRegion::SharedDtor(MessageLite& self) {
  RectangleTargetRegion& this_ = static_cast<RectangleTargetRegion&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.x_length_;
  delete this_._impl_.y_length_;
  delete this_._impl_.inner_x_length_;
  delete this_._impl_.inner_y_length_;
  this_._impl_.~Impl_();
}

inline void* RectangleTargetRegion::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RectangleTargetRegion(arena);
}
constexpr auto RectangleTargetRegion::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RectangleTargetRegion),
                                            alignof(RectangleTargetRegion));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RectangleTargetRegion::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RectangleTargetRegion_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RectangleTargetRegion::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RectangleTargetRegion>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RectangleTargetRegion::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RectangleTargetRegion>(), &RectangleTargetRegion::ByteSizeLong,
            &RectangleTargetRegion::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RectangleTargetRegion, _impl_._cached_size_),
        false,
    },
    &RectangleTargetRegion::kDescriptorMethods,
    &descriptor_table_scenario_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RectangleTargetRegion::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 4, 0, 2> RectangleTargetRegion::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RectangleTargetRegion, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::aim::RectangleTargetRegion>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .aim.RegionLength inner_y_length = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(RectangleTargetRegion, _impl_.inner_y_length_)}},
    // .aim.RegionLength x_length = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RectangleTargetRegion, _impl_.x_length_)}},
    // .aim.RegionLength y_length = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(RectangleTargetRegion, _impl_.y_length_)}},
    // .aim.RegionLength inner_x_length = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(RectangleTargetRegion, _impl_.inner_x_length_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .aim.RegionLength x_length = 1;
    {PROTOBUF_FIELD_OFFSET(RectangleTargetRegion, _impl_.x_length_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .aim.RegionLength y_length = 2;
    {PROTOBUF_FIELD_OFFSET(RectangleTargetRegion, _impl_.y_length_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .aim.RegionLength inner_x_length = 3;
    {PROTOBUF_FIELD_OFFSET(RectangleTargetRegion, _impl_.inner_x_length_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .aim.RegionLength inner_y_length = 4;
    {PROTOBUF_FIELD_OFFSET(RectangleTargetRegion, _impl_.inner_y_length_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::aim::RegionLength>()},
    {::_pbi::TcParser::GetTable<::aim::RegionLength>()},
    {::_pbi::TcParser::GetTable<::aim::RegionLength>()},
    {::_pbi::TcParser::GetTable<::aim::RegionLength>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void RectangleTargetRegion::Clear() {
// @@protoc_insertion_point(message_clear_start:aim.RectangleTargetRegion)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.x_length_ != nullptr);
      _impl_.x_length_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.y_length_ != nullptr);
      _impl_.y_length_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.inner_x_length_ != nullptr);
      _impl_.inner_x_length_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.inner_y_length_ != nullptr);
      _impl_.inner_y_length_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RectangleTargetRegion::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RectangleTargetRegion& this_ = static_cast<const RectangleTargetRegion&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RectangleTargetRegion::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RectangleTargetRegion& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:aim.RectangleTargetRegion)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .aim.RegionLength x_length = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.x_length_, this_._impl_.x_length_->GetCachedSize(), target,
                stream);
          }

          // .aim.RegionLength y_length = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.y_length_, this_._impl_.y_length_->GetCachedSize(), target,
                stream);
          }

          // .aim.RegionLength inner_x_length = 3;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.inner_x_length_, this_._impl_.inner_x_length_->GetCachedSize(), target,
                stream);
          }

          // .aim.RegionLength inner_y_length = 4;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.inner_y_length_, this_._impl_.inner_y_length_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:aim.RectangleTargetRegion)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RectangleTargetRegion::ByteSizeLong(const MessageLite& base) {
          const RectangleTargetRegion& this_ = static_cast<const RectangleTargetRegion&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RectangleTargetRegion::ByteSizeLong() const {
          const RectangleTargetRegion& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:aim.RectangleTargetRegion)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000000fu) {
            // .aim.RegionLength x_length = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.x_length_);
            }
            // .aim.RegionLength y_length = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.y_length_);
            }
            // .aim.RegionLength inner_x_length = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.inner_x_length_);
            }
            // .aim.RegionLength inner_y_length = 4;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.inner_y_length_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RectangleTargetRegion::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RectangleTargetRegion*>(&to_msg);
  auto& from = static_cast<const RectangleTargetRegion&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:aim.RectangleTargetRegion)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.x_length_ != nullptr);
      if (_this->_impl_.x_length_ == nullptr) {
        _this->_impl_.x_length_ =
            ::google::protobuf::Message::CopyConstruct<::aim::RegionLength>(arena, *from._impl_.x_length_);
      } else {
        _this->_impl_.x_length_->MergeFrom(*from._impl_.x_length_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.y_length_ != nullptr);
      if (_this->_impl_.y_length_ == nullptr) {
        _this->_impl_.y_length_ =
            ::google::protobuf::Message::CopyConstruct<::aim::RegionLength>(arena, *from._impl_.y_length_);
      } else {
        _this->_impl_.y_length_->MergeFrom(*from._impl_.y_length_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.inner_x_length_ != nullptr);
      if (_this->_impl_.inner_x_length_ == nullptr) {
        _this->_impl_.inner_x_length_ =
            ::google::protobuf::Message::CopyConstruct<::aim::RegionLength>(arena, *from._impl_.inner_x_length_);
      } else {
        _this->_impl_.inner_x_length_->MergeFrom(*from._impl_.inner_x_length_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.inner_y_length_ != nullptr);
      if (_this->_impl_.inner_y_length_ == nullptr) {
        _this->_impl_.inner_y_length_ =
            ::google::protobuf::Message::CopyConstruct<::aim::RegionLength>(arena, *from._impl_.inner_y_length_);
      } else {
        _this->_impl_.inner_y_length_->MergeFrom(*from._impl_.inner_y_length_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RectangleTargetRegion::CopyFrom(const RectangleTargetRegion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aim.RectangleTargetRegion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RectangleTargetRegion::InternalSwap(RectangleTargetRegion* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RectangleTargetRegion, _impl_.inner_y_length_)
      + sizeof(RectangleTargetRegion::_impl_.inner_y_length_)
      - PROTOBUF_FIELD_OFFSET(RectangleTargetRegion, _impl_.x_length_)>(
          reinterpret_cast<char*>(&_impl_.x_length_),
          reinterpret_cast<char*>(&other->_impl_.x_length_));
}

::google::protobuf::Metadata RectangleTargetRegion::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EllipseTargetRegion::_Internal {
 public:
  using HasBits =
      decltype(std::declval<EllipseTargetRegion>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EllipseTargetRegion, _impl_._has_bits_);
};

EllipseTargetRegion::EllipseTargetRegion(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:aim.EllipseTargetRegion)
}
inline PROTOBUF_NDEBUG_INLINE EllipseTargetRegion::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::aim::EllipseTargetRegion& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

EllipseTargetRegion::EllipseTargetRegion(
    ::google::protobuf::Arena* arena,
    const EllipseTargetRegion& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EllipseTargetRegion* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.x_diameter_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::aim::RegionLength>(
                              arena, *from._impl_.x_diameter_)
                        : nullptr;
  _impl_.y_diameter_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::aim::RegionLength>(
                              arena, *from._impl_.y_diameter_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:aim.EllipseTargetRegion)
}
inline PROTOBUF_NDEBUG_INLINE EllipseTargetRegion::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void EllipseTargetRegion::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_diameter_),
           0,
           offsetof(Impl_, y_diameter_) -
               offsetof(Impl_, x_diameter_) +
               sizeof(Impl_::y_diameter_));
}
EllipseTargetRegion::~EllipseTargetRegion() {
  // @@protoc_insertion_point(destructor:aim.EllipseTargetRegion)
  SharedDtor(*this);
}
inline void EllipseTargetRegion::SharedDtor(MessageLite& self) {
  EllipseTargetRegion& this_ = static_cast<EllipseTargetRegion&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.x_diameter_;
  delete this_._impl_.y_diameter_;
  this_._impl_.~Impl_();
}

inline void* EllipseTargetRegion::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EllipseTargetRegion(arena);
}
constexpr auto EllipseTargetRegion::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(EllipseTargetRegion),
                                            alignof(EllipseTargetRegion));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EllipseTargetRegion::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EllipseTargetRegion_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EllipseTargetRegion::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EllipseTargetRegion>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EllipseTargetRegion::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EllipseTargetRegion>(), &EllipseTargetRegion::ByteSizeLong,
            &EllipseTargetRegion::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EllipseTargetRegion, _impl_._cached_size_),
        false,
    },
    &EllipseTargetRegion::kDescriptorMethods,
    &descriptor_table_scenario_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EllipseTargetRegion::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> EllipseTargetRegion::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EllipseTargetRegion, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::aim::EllipseTargetRegion>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .aim.RegionLength y_diameter = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(EllipseTargetRegion, _impl_.y_diameter_)}},
    // .aim.RegionLength x_diameter = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EllipseTargetRegion, _impl_.x_diameter_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .aim.RegionLength x_diameter = 1;
    {PROTOBUF_FIELD_OFFSET(EllipseTargetRegion, _impl_.x_diameter_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .aim.RegionLength y_diameter = 2;
    {PROTOBUF_FIELD_OFFSET(EllipseTargetRegion, _impl_.y_diameter_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::aim::RegionLength>()},
    {::_pbi::TcParser::GetTable<::aim::RegionLength>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void EllipseTargetRegion::Clear() {
// @@protoc_insertion_point(message_clear_start:aim.EllipseTargetRegion)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.x_diameter_ != nullptr);
      _impl_.x_diameter_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.y_diameter_ != nullptr);
      _impl_.y_diameter_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EllipseTargetRegion::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EllipseTargetRegion& this_ = static_cast<const EllipseTargetRegion&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EllipseTargetRegion::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EllipseTargetRegion& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:aim.EllipseTargetRegion)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .aim.RegionLength x_diameter = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.x_diameter_, this_._impl_.x_diameter_->GetCachedSize(), target,
                stream);
          }

          // .aim.RegionLength y_diameter = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.y_diameter_, this_._impl_.y_diameter_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:aim.EllipseTargetRegion)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EllipseTargetRegion::ByteSizeLong(const MessageLite& base) {
          const EllipseTargetRegion& this_ = static_cast<const EllipseTargetRegion&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EllipseTargetRegion::ByteSizeLong() const {
          const EllipseTargetRegion& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:aim.EllipseTargetRegion)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .aim.RegionLength x_diameter = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.x_diameter_);
            }
            // .aim.RegionLength y_diameter = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.y_diameter_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EllipseTargetRegion::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EllipseTargetRegion*>(&to_msg);
  auto& from = static_cast<const EllipseTargetRegion&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:aim.EllipseTargetRegion)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.x_diameter_ != nullptr);
      if (_this->_impl_.x_diameter_ == nullptr) {
        _this->_impl_.x_diameter_ =
            ::google::protobuf::Message::CopyConstruct<::aim::RegionLength>(arena, *from._impl_.x_diameter_);
      } else {
        _this->_impl_.x_diameter_->MergeFrom(*from._impl_.x_diameter_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.y_diameter_ != nullptr);
      if (_this->_impl_.y_diameter_ == nullptr) {
        _this->_impl_.y_diameter_ =
            ::google::protobuf::Message::CopyConstruct<::aim::RegionLength>(arena, *from._impl_.y_diameter_);
      } else {
        _this->_impl_.y_diameter_->MergeFrom(*from._impl_.y_diameter_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EllipseTargetRegion::CopyFrom(const EllipseTargetRegion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aim.EllipseTargetRegion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EllipseTargetRegion::InternalSwap(EllipseTargetRegion* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EllipseTargetRegion, _impl_.y_diameter_)
      + sizeof(EllipseTargetRegion::_impl_.y_diameter_)
      - PROTOBUF_FIELD_OFFSET(EllipseTargetRegion, _impl_.x_diameter_)>(
          reinterpret_cast<char*>(&_impl_.x_diameter_),
          reinterpret_cast<char*>(&other->_impl_.x_diameter_));
}

::google::protobuf::Metadata EllipseTargetRegion::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CircleTargetRegion::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CircleTargetRegion>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CircleTargetRegion, _impl_._has_bits_);
};

CircleTargetRegion::CircleTargetRegion(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:aim.CircleTargetRegion)
}
inline PROTOBUF_NDEBUG_INLINE CircleTargetRegion::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::aim::CircleTargetRegion& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CircleTargetRegion::CircleTargetRegion(
    ::google::protobuf::Arena* arena,
    const CircleTargetRegion& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CircleTargetRegion* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.diameter_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::aim::RegionLength>(
                              arena, *from._impl_.diameter_)
                        : nullptr;
  _impl_.inner_diameter_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::aim::RegionLength>(
                              arena, *from._impl_.inner_diameter_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:aim.CircleTargetRegion)
}
inline PROTOBUF_NDEBUG_INLINE CircleTargetRegion::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CircleTargetRegion::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, diameter_),
           0,
           offsetof(Impl_, inner_diameter_) -
               offsetof(Impl_, diameter_) +
               sizeof(Impl_::inner_diameter_));
}
CircleTargetRegion::~CircleTargetRegion() {
  // @@protoc_insertion_point(destructor:aim.CircleTargetRegion)
  SharedDtor(*this);
}
inline void CircleTargetRegion::SharedDtor(MessageLite& self) {
  CircleTargetRegion& this_ = static_cast<CircleTargetRegion&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.diameter_;
  delete this_._impl_.inner_diameter_;
  this_._impl_.~Impl_();
}

inline void* CircleTargetRegion::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CircleTargetRegion(arena);
}
constexpr auto CircleTargetRegion::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CircleTargetRegion),
                                            alignof(CircleTargetRegion));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CircleTargetRegion::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CircleTargetRegion_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CircleTargetRegion::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CircleTargetRegion>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CircleTargetRegion::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CircleTargetRegion>(), &CircleTargetRegion::ByteSizeLong,
            &CircleTargetRegion::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CircleTargetRegion, _impl_._cached_size_),
        false,
    },
    &CircleTargetRegion::kDescriptorMethods,
    &descriptor_table_scenario_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CircleTargetRegion::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> CircleTargetRegion::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CircleTargetRegion, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::aim::CircleTargetRegion>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .aim.RegionLength inner_diameter = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(CircleTargetRegion, _impl_.inner_diameter_)}},
    // .aim.RegionLength diameter = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CircleTargetRegion, _impl_.diameter_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .aim.RegionLength diameter = 1;
    {PROTOBUF_FIELD_OFFSET(CircleTargetRegion, _impl_.diameter_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .aim.RegionLength inner_diameter = 2;
    {PROTOBUF_FIELD_OFFSET(CircleTargetRegion, _impl_.inner_diameter_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::aim::RegionLength>()},
    {::_pbi::TcParser::GetTable<::aim::RegionLength>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CircleTargetRegion::Clear() {
// @@protoc_insertion_point(message_clear_start:aim.CircleTargetRegion)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.diameter_ != nullptr);
      _impl_.diameter_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.inner_diameter_ != nullptr);
      _impl_.inner_diameter_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CircleTargetRegion::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CircleTargetRegion& this_ = static_cast<const CircleTargetRegion&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CircleTargetRegion::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CircleTargetRegion& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:aim.CircleTargetRegion)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .aim.RegionLength diameter = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.diameter_, this_._impl_.diameter_->GetCachedSize(), target,
                stream);
          }

          // .aim.RegionLength inner_diameter = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.inner_diameter_, this_._impl_.inner_diameter_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:aim.CircleTargetRegion)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CircleTargetRegion::ByteSizeLong(const MessageLite& base) {
          const CircleTargetRegion& this_ = static_cast<const CircleTargetRegion&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CircleTargetRegion::ByteSizeLong() const {
          const CircleTargetRegion& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:aim.CircleTargetRegion)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .aim.RegionLength diameter = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.diameter_);
            }
            // .aim.RegionLength inner_diameter = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.inner_diameter_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CircleTargetRegion::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CircleTargetRegion*>(&to_msg);
  auto& from = static_cast<const CircleTargetRegion&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:aim.CircleTargetRegion)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.diameter_ != nullptr);
      if (_this->_impl_.diameter_ == nullptr) {
        _this->_impl_.diameter_ =
            ::google::protobuf::Message::CopyConstruct<::aim::RegionLength>(arena, *from._impl_.diameter_);
      } else {
        _this->_impl_.diameter_->MergeFrom(*from._impl_.diameter_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.inner_diameter_ != nullptr);
      if (_this->_impl_.inner_diameter_ == nullptr) {
        _this->_impl_.inner_diameter_ =
            ::google::protobuf::Message::CopyConstruct<::aim::RegionLength>(arena, *from._impl_.inner_diameter_);
      } else {
        _this->_impl_.inner_diameter_->MergeFrom(*from._impl_.inner_diameter_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CircleTargetRegion::CopyFrom(const CircleTargetRegion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aim.CircleTargetRegion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CircleTargetRegion::InternalSwap(CircleTargetRegion* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CircleTargetRegion, _impl_.inner_diameter_)
      + sizeof(CircleTargetRegion::_impl_.inner_diameter_)
      - PROTOBUF_FIELD_OFFSET(CircleTargetRegion, _impl_.diameter_)>(
          reinterpret_cast<char*>(&_impl_.diameter_),
          reinterpret_cast<char*>(&other->_impl_.diameter_));
}

::google::protobuf::Metadata CircleTargetRegion::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TargetPlacementStrategy::_Internal {
 public:
  using HasBits =
      decltype(std::declval<TargetPlacementStrategy>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TargetPlacementStrategy, _impl_._has_bits_);
};

TargetPlacementStrategy::TargetPlacementStrategy(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:aim.TargetPlacementStrategy)
}
inline PROTOBUF_NDEBUG_INLINE TargetPlacementStrategy::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::aim::TargetPlacementStrategy& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        regions_{visibility, arena, from.regions_},
        region_order_{visibility, arena, from.region_order_},
        _region_order_cached_byte_size_{0} {}

TargetPlacementStrategy::TargetPlacementStrategy(
    ::google::protobuf::Arena* arena,
    const TargetPlacementStrategy& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TargetPlacementStrategy* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, min_distance_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, min_distance_),
           offsetof(Impl_, fixed_distance_jitter_) -
               offsetof(Impl_, min_distance_) +
               sizeof(Impl_::fixed_distance_jitter_));

  // @@protoc_insertion_point(copy_constructor:aim.TargetPlacementStrategy)
}
inline PROTOBUF_NDEBUG_INLINE TargetPlacementStrategy::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        regions_{visibility, arena},
        region_order_{visibility, arena},
        _region_order_cached_byte_size_{0} {}

inline void TargetPlacementStrategy::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, min_distance_),
           0,
           offsetof(Impl_, fixed_distance_jitter_) -
               offsetof(Impl_, min_distance_) +
               sizeof(Impl_::fixed_distance_jitter_));
}
TargetPlacementStrategy::~TargetPlacementStrategy() {
  // @@protoc_insertion_point(destructor:aim.TargetPlacementStrategy)
  SharedDtor(*this);
}
inline void TargetPlacementStrategy::SharedDtor(MessageLite& self) {
  TargetPlacementStrategy& this_ = static_cast<TargetPlacementStrategy&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* TargetPlacementStrategy::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TargetPlacementStrategy(arena);
}
constexpr auto TargetPlacementStrategy::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TargetPlacementStrategy, _impl_.regions_) +
          decltype(TargetPlacementStrategy::_impl_.regions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TargetPlacementStrategy, _impl_.region_order_) +
          decltype(TargetPlacementStrategy::_impl_.region_order_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(TargetPlacementStrategy), alignof(TargetPlacementStrategy), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TargetPlacementStrategy::PlacementNew_,
                                 sizeof(TargetPlacementStrategy),
                                 alignof(TargetPlacementStrategy));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TargetPlacementStrategy::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TargetPlacementStrategy_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TargetPlacementStrategy::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TargetPlacementStrategy>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TargetPlacementStrategy::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TargetPlacementStrategy>(), &TargetPlacementStrategy::ByteSizeLong,
            &TargetPlacementStrategy::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TargetPlacementStrategy, _impl_._cached_size_),
        false,
    },
    &TargetPlacementStrategy::kDescriptorMethods,
    &descriptor_table_scenario_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TargetPlacementStrategy::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 0, 2> TargetPlacementStrategy::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TargetPlacementStrategy, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::aim::TargetPlacementStrategy>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .aim.TargetRegion regions = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TargetPlacementStrategy, _impl_.regions_)}},
    // repeated int32 region_order = 2;
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TargetPlacementStrategy, _impl_.region_order_)}},
    // float min_distance = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 0, 0, PROTOBUF_FIELD_OFFSET(TargetPlacementStrategy, _impl_.min_distance_)}},
    // float fixed_distance_from_last_target = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 1, 0, PROTOBUF_FIELD_OFFSET(TargetPlacementStrategy, _impl_.fixed_distance_from_last_target_)}},
    // float fixed_distance_jitter = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 2, 0, PROTOBUF_FIELD_OFFSET(TargetPlacementStrategy, _impl_.fixed_distance_jitter_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .aim.TargetRegion regions = 1;
    {PROTOBUF_FIELD_OFFSET(TargetPlacementStrategy, _impl_.regions_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated int32 region_order = 2;
    {PROTOBUF_FIELD_OFFSET(TargetPlacementStrategy, _impl_.region_order_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // float min_distance = 3;
    {PROTOBUF_FIELD_OFFSET(TargetPlacementStrategy, _impl_.min_distance_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float fixed_distance_from_last_target = 4;
    {PROTOBUF_FIELD_OFFSET(TargetPlacementStrategy, _impl_.fixed_distance_from_last_target_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float fixed_distance_jitter = 5;
    {PROTOBUF_FIELD_OFFSET(TargetPlacementStrategy, _impl_.fixed_distance_jitter_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }}, {{
    {::_pbi::TcParser::GetTable<::aim::TargetRegion>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void TargetPlacementStrategy::Clear() {
// @@protoc_insertion_point(message_clear_start:aim.TargetPlacementStrategy)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.regions_.Clear();
  _impl_.region_order_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.min_distance_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.fixed_distance_jitter_) -
        reinterpret_cast<char*>(&_impl_.min_distance_)) + sizeof(_impl_.fixed_distance_jitter_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TargetPlacementStrategy::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TargetPlacementStrategy& this_ = static_cast<const TargetPlacementStrategy&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TargetPlacementStrategy::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TargetPlacementStrategy& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:aim.TargetPlacementStrategy)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .aim.TargetRegion regions = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_regions_size());
               i < n; i++) {
            const auto& repfield = this_._internal_regions().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated int32 region_order = 2;
          {
            int byte_size = this_._impl_._region_order_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt32Packed(
                  2, this_._internal_region_order(), byte_size, target);
            }
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // float min_distance = 3;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_min_distance(), target);
          }

          // float fixed_distance_from_last_target = 4;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                4, this_._internal_fixed_distance_from_last_target(), target);
          }

          // float fixed_distance_jitter = 5;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                5, this_._internal_fixed_distance_jitter(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:aim.TargetPlacementStrategy)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TargetPlacementStrategy::ByteSizeLong(const MessageLite& base) {
          const TargetPlacementStrategy& this_ = static_cast<const TargetPlacementStrategy&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TargetPlacementStrategy::ByteSizeLong() const {
          const TargetPlacementStrategy& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:aim.TargetPlacementStrategy)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .aim.TargetRegion regions = 1;
            {
              total_size += 1UL * this_._internal_regions_size();
              for (const auto& msg : this_._internal_regions()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated int32 region_order = 2;
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int32SizeWithPackedTagSize(
                      this_._internal_region_order(), 1,
                      this_._impl_._region_order_cached_byte_size_);
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // float min_distance = 3;
            if (cached_has_bits & 0x00000001u) {
              total_size += 5;
            }
            // float fixed_distance_from_last_target = 4;
            if (cached_has_bits & 0x00000002u) {
              total_size += 5;
            }
            // float fixed_distance_jitter = 5;
            if (cached_has_bits & 0x00000004u) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TargetPlacementStrategy::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TargetPlacementStrategy*>(&to_msg);
  auto& from = static_cast<const TargetPlacementStrategy&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:aim.TargetPlacementStrategy)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_regions()->MergeFrom(
      from._internal_regions());
  _this->_internal_mutable_region_order()->MergeFrom(from._internal_region_order());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.min_distance_ = from._impl_.min_distance_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.fixed_distance_from_last_target_ = from._impl_.fixed_distance_from_last_target_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.fixed_distance_jitter_ = from._impl_.fixed_distance_jitter_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TargetPlacementStrategy::CopyFrom(const TargetPlacementStrategy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aim.TargetPlacementStrategy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TargetPlacementStrategy::InternalSwap(TargetPlacementStrategy* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.regions_.InternalSwap(&other->_impl_.regions_);
  _impl_.region_order_.InternalSwap(&other->_impl_.region_order_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TargetPlacementStrategy, _impl_.fixed_distance_jitter_)
      + sizeof(TargetPlacementStrategy::_impl_.fixed_distance_jitter_)
      - PROTOBUF_FIELD_OFFSET(TargetPlacementStrategy, _impl_.min_distance_)>(
          reinterpret_cast<char*>(&_impl_.min_distance_),
          reinterpret_cast<char*>(&other->_impl_.min_distance_));
}

::google::protobuf::Metadata TargetPlacementStrategy::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ScenarioReferenceOverrides::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ScenarioReferenceOverrides>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ScenarioReferenceOverrides, _impl_._has_bits_);
};

ScenarioReferenceOverrides::ScenarioReferenceOverrides(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:aim.ScenarioReferenceOverrides)
}
ScenarioReferenceOverrides::ScenarioReferenceOverrides(
    ::google::protobuf::Arena* arena, const ScenarioReferenceOverrides& from)
    : ScenarioReferenceOverrides(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ScenarioReferenceOverrides::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ScenarioReferenceOverrides::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, duration_seconds_),
           0,
           offsetof(Impl_, speed_multiplier_) -
               offsetof(Impl_, duration_seconds_) +
               sizeof(Impl_::speed_multiplier_));
}
ScenarioReferenceOverrides::~ScenarioReferenceOverrides() {
  // @@protoc_insertion_point(destructor:aim.ScenarioReferenceOverrides)
  SharedDtor(*this);
}
inline void ScenarioReferenceOverrides::SharedDtor(MessageLite& self) {
  ScenarioReferenceOverrides& this_ = static_cast<ScenarioReferenceOverrides&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ScenarioReferenceOverrides::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ScenarioReferenceOverrides(arena);
}
constexpr auto ScenarioReferenceOverrides::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ScenarioReferenceOverrides),
                                            alignof(ScenarioReferenceOverrides));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ScenarioReferenceOverrides::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ScenarioReferenceOverrides_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ScenarioReferenceOverrides::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ScenarioReferenceOverrides>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ScenarioReferenceOverrides::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ScenarioReferenceOverrides>(), &ScenarioReferenceOverrides::ByteSizeLong,
            &ScenarioReferenceOverrides::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ScenarioReferenceOverrides, _impl_._cached_size_),
        false,
    },
    &ScenarioReferenceOverrides::kDescriptorMethods,
    &descriptor_table_scenario_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ScenarioReferenceOverrides::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> ScenarioReferenceOverrides::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ScenarioReferenceOverrides, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::aim::ScenarioReferenceOverrides>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // float speed_multiplier = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 3, 0, PROTOBUF_FIELD_OFFSET(ScenarioReferenceOverrides, _impl_.speed_multiplier_)}},
    // float duration_seconds = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(ScenarioReferenceOverrides, _impl_.duration_seconds_)}},
    // float target_radius_multiplier = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(ScenarioReferenceOverrides, _impl_.target_radius_multiplier_)}},
    // int32 num_targets = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ScenarioReferenceOverrides, _impl_.num_targets_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(ScenarioReferenceOverrides, _impl_.num_targets_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float duration_seconds = 1;
    {PROTOBUF_FIELD_OFFSET(ScenarioReferenceOverrides, _impl_.duration_seconds_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float target_radius_multiplier = 2;
    {PROTOBUF_FIELD_OFFSET(ScenarioReferenceOverrides, _impl_.target_radius_multiplier_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // int32 num_targets = 3;
    {PROTOBUF_FIELD_OFFSET(ScenarioReferenceOverrides, _impl_.num_targets_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // float speed_multiplier = 4;
    {PROTOBUF_FIELD_OFFSET(ScenarioReferenceOverrides, _impl_.speed_multiplier_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ScenarioReferenceOverrides::Clear() {
// @@protoc_insertion_point(message_clear_start:aim.ScenarioReferenceOverrides)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.duration_seconds_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.speed_multiplier_) -
        reinterpret_cast<char*>(&_impl_.duration_seconds_)) + sizeof(_impl_.speed_multiplier_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ScenarioReferenceOverrides::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ScenarioReferenceOverrides& this_ = static_cast<const ScenarioReferenceOverrides&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ScenarioReferenceOverrides::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ScenarioReferenceOverrides& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:aim.ScenarioReferenceOverrides)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // float duration_seconds = 1;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_duration_seconds(), target);
          }

          // float target_radius_multiplier = 2;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_target_radius_multiplier(), target);
          }

          // int32 num_targets = 3;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_num_targets(), target);
          }

          // float speed_multiplier = 4;
          if (cached_has_bits & 0x00000008u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                4, this_._internal_speed_multiplier(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:aim.ScenarioReferenceOverrides)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ScenarioReferenceOverrides::ByteSizeLong(const MessageLite& base) {
          const ScenarioReferenceOverrides& this_ = static_cast<const ScenarioReferenceOverrides&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ScenarioReferenceOverrides::ByteSizeLong() const {
          const ScenarioReferenceOverrides& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:aim.ScenarioReferenceOverrides)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000000fu) {
            // float duration_seconds = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 5;
            }
            // float target_radius_multiplier = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 5;
            }
            // int32 num_targets = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_num_targets());
            }
            // float speed_multiplier = 4;
            if (cached_has_bits & 0x00000008u) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ScenarioReferenceOverrides::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ScenarioReferenceOverrides*>(&to_msg);
  auto& from = static_cast<const ScenarioReferenceOverrides&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:aim.ScenarioReferenceOverrides)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.duration_seconds_ = from._impl_.duration_seconds_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.target_radius_multiplier_ = from._impl_.target_radius_multiplier_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.num_targets_ = from._impl_.num_targets_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.speed_multiplier_ = from._impl_.speed_multiplier_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ScenarioReferenceOverrides::CopyFrom(const ScenarioReferenceOverrides& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aim.ScenarioReferenceOverrides)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ScenarioReferenceOverrides::InternalSwap(ScenarioReferenceOverrides* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ScenarioReferenceOverrides, _impl_.speed_multiplier_)
      + sizeof(ScenarioReferenceOverrides::_impl_.speed_multiplier_)
      - PROTOBUF_FIELD_OFFSET(ScenarioReferenceOverrides, _impl_.duration_seconds_)>(
          reinterpret_cast<char*>(&_impl_.duration_seconds_),
          reinterpret_cast<char*>(&other->_impl_.duration_seconds_));
}

::google::protobuf::Metadata ScenarioReferenceOverrides::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ShotType::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ShotType>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ShotType, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::aim::ShotType, _impl_._oneof_case_);
};

ShotType::ShotType(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:aim.ShotType)
}
inline PROTOBUF_NDEBUG_INLINE ShotType::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::aim::ShotType& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        type_{},
        _oneof_case_{from._oneof_case_[0]} {}

ShotType::ShotType(
    ::google::protobuf::Arena* arena,
    const ShotType& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ShotType* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, poke_kill_time_seconds_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, poke_kill_time_seconds_),
           offsetof(Impl_, no_partial_kills_) -
               offsetof(Impl_, poke_kill_time_seconds_) +
               sizeof(Impl_::no_partial_kills_));
  switch (type_case()) {
    case TYPE_NOT_SET:
      break;
      case kPoke:
        _impl_.type_.poke_ = from._impl_.type_.poke_;
        break;
      case kTrackingKill:
        _impl_.type_.tracking_kill_ = from._impl_.type_.tracking_kill_;
        break;
      case kTrackingInvincible:
        _impl_.type_.tracking_invincible_ = from._impl_.type_.tracking_invincible_;
        break;
      case kClickSingle:
        _impl_.type_.click_single_ = from._impl_.type_.click_single_;
        break;
  }

  // @@protoc_insertion_point(copy_constructor:aim.ShotType)
}
inline PROTOBUF_NDEBUG_INLINE ShotType::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        type_{},
        _oneof_case_{} {}

inline void ShotType::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, poke_kill_time_seconds_),
           0,
           offsetof(Impl_, no_partial_kills_) -
               offsetof(Impl_, poke_kill_time_seconds_) +
               sizeof(Impl_::no_partial_kills_));
}
ShotType::~ShotType() {
  // @@protoc_insertion_point(destructor:aim.ShotType)
  SharedDtor(*this);
}
inline void ShotType::SharedDtor(MessageLite& self) {
  ShotType& this_ = static_cast<ShotType&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_type()) {
    this_.clear_type();
  }
  this_._impl_.~Impl_();
}

void ShotType::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:aim.ShotType)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (type_case()) {
    case kPoke: {
      // No need to clear
      break;
    }
    case kTrackingKill: {
      // No need to clear
      break;
    }
    case kTrackingInvincible: {
      // No need to clear
      break;
    }
    case kClickSingle: {
      // No need to clear
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = TYPE_NOT_SET;
}


inline void* ShotType::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ShotType(arena);
}
constexpr auto ShotType::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ShotType),
                                            alignof(ShotType));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ShotType::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ShotType_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ShotType::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ShotType>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ShotType::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ShotType>(), &ShotType::ByteSizeLong,
            &ShotType::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ShotType, _impl_._cached_size_),
        false,
    },
    &ShotType::kDescriptorMethods,
    &descriptor_table_scenario_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ShotType::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 6, 0, 0, 2> ShotType::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ShotType, _impl_._has_bits_),
    0, // no _extensions_
    11, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965744,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::aim::ShotType>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // float poke_kill_time_seconds = 10;
    {::_pbi::TcParser::FastF32S1,
     {85, 0, 0, PROTOBUF_FIELD_OFFSET(ShotType, _impl_.poke_kill_time_seconds_)}},
    // bool no_partial_kills = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ShotType, _impl_.no_partial_kills_), 1>(),
     {88, 1, 0, PROTOBUF_FIELD_OFFSET(ShotType, _impl_.no_partial_kills_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool poke = 1;
    {PROTOBUF_FIELD_OFFSET(ShotType, _impl_.type_.poke_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBool)},
    // bool tracking_kill = 2;
    {PROTOBUF_FIELD_OFFSET(ShotType, _impl_.type_.tracking_kill_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBool)},
    // bool tracking_invincible = 3;
    {PROTOBUF_FIELD_OFFSET(ShotType, _impl_.type_.tracking_invincible_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBool)},
    // bool click_single = 4;
    {PROTOBUF_FIELD_OFFSET(ShotType, _impl_.type_.click_single_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBool)},
    // float poke_kill_time_seconds = 10;
    {PROTOBUF_FIELD_OFFSET(ShotType, _impl_.poke_kill_time_seconds_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // bool no_partial_kills = 11;
    {PROTOBUF_FIELD_OFFSET(ShotType, _impl_.no_partial_kills_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ShotType::Clear() {
// @@protoc_insertion_point(message_clear_start:aim.ShotType)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.poke_kill_time_seconds_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.no_partial_kills_) -
        reinterpret_cast<char*>(&_impl_.poke_kill_time_seconds_)) + sizeof(_impl_.no_partial_kills_));
  }
  clear_type();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ShotType::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ShotType& this_ = static_cast<const ShotType&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ShotType::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ShotType& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:aim.ShotType)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.type_case()) {
            case kPoke: {
              target = stream->EnsureSpace(target);
              target = ::_pbi::WireFormatLite::WriteBoolToArray(
                  1, this_._internal_poke(), target);
              break;
            }
            case kTrackingKill: {
              target = stream->EnsureSpace(target);
              target = ::_pbi::WireFormatLite::WriteBoolToArray(
                  2, this_._internal_tracking_kill(), target);
              break;
            }
            case kTrackingInvincible: {
              target = stream->EnsureSpace(target);
              target = ::_pbi::WireFormatLite::WriteBoolToArray(
                  3, this_._internal_tracking_invincible(), target);
              break;
            }
            case kClickSingle: {
              target = stream->EnsureSpace(target);
              target = ::_pbi::WireFormatLite::WriteBoolToArray(
                  4, this_._internal_click_single(), target);
              break;
            }
            default:
              break;
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          // float poke_kill_time_seconds = 10;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                10, this_._internal_poke_kill_time_seconds(), target);
          }

          // bool no_partial_kills = 11;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                11, this_._internal_no_partial_kills(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:aim.ShotType)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ShotType::ByteSizeLong(const MessageLite& base) {
          const ShotType& this_ = static_cast<const ShotType&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ShotType::ByteSizeLong() const {
          const ShotType& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:aim.ShotType)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // float poke_kill_time_seconds = 10;
            if (cached_has_bits & 0x00000001u) {
              total_size += 5;
            }
            // bool no_partial_kills = 11;
            if (cached_has_bits & 0x00000002u) {
              total_size += 2;
            }
          }
          switch (this_.type_case()) {
            // bool poke = 1;
            case kPoke: {
              total_size += 2;
              break;
            }
            // bool tracking_kill = 2;
            case kTrackingKill: {
              total_size += 2;
              break;
            }
            // bool tracking_invincible = 3;
            case kTrackingInvincible: {
              total_size += 2;
              break;
            }
            // bool click_single = 4;
            case kClickSingle: {
              total_size += 2;
              break;
            }
            case TYPE_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ShotType::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ShotType*>(&to_msg);
  auto& from = static_cast<const ShotType&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:aim.ShotType)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.poke_kill_time_seconds_ = from._impl_.poke_kill_time_seconds_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.no_partial_kills_ = from._impl_.no_partial_kills_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_type();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kPoke: {
        _this->_impl_.type_.poke_ = from._impl_.type_.poke_;
        break;
      }
      case kTrackingKill: {
        _this->_impl_.type_.tracking_kill_ = from._impl_.type_.tracking_kill_;
        break;
      }
      case kTrackingInvincible: {
        _this->_impl_.type_.tracking_invincible_ = from._impl_.type_.tracking_invincible_;
        break;
      }
      case kClickSingle: {
        _this->_impl_.type_.click_single_ = from._impl_.type_.click_single_;
        break;
      }
      case TYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ShotType::CopyFrom(const ShotType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aim.ShotType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ShotType::InternalSwap(ShotType* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ShotType, _impl_.no_partial_kills_)
      + sizeof(ShotType::_impl_.no_partial_kills_)
      - PROTOBUF_FIELD_OFFSET(ShotType, _impl_.poke_kill_time_seconds_)>(
          reinterpret_cast<char*>(&_impl_.poke_kill_time_seconds_),
          reinterpret_cast<char*>(&other->_impl_.poke_kill_time_seconds_));
  swap(_impl_.type_, other->_impl_.type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata ShotType::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ScenarioDef::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ScenarioDef>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ScenarioDef, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::aim::ScenarioDef, _impl_._oneof_case_);
};

void ScenarioDef::set_allocated_static_def(::aim::StaticScenarioDef* static_def) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (static_def) {
    ::google::protobuf::Arena* submessage_arena = static_def->GetArena();
    if (message_arena != submessage_arena) {
      static_def = ::google::protobuf::internal::GetOwnedMessage(message_arena, static_def, submessage_arena);
    }
    set_has_static_def();
    _impl_.type_.static_def_ = static_def;
  }
  // @@protoc_insertion_point(field_set_allocated:aim.ScenarioDef.static_def)
}
void ScenarioDef::set_allocated_centering_def(::aim::CenteringScenarioDef* centering_def) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (centering_def) {
    ::google::protobuf::Arena* submessage_arena = centering_def->GetArena();
    if (message_arena != submessage_arena) {
      centering_def = ::google::protobuf::internal::GetOwnedMessage(message_arena, centering_def, submessage_arena);
    }
    set_has_centering_def();
    _impl_.type_.centering_def_ = centering_def;
  }
  // @@protoc_insertion_point(field_set_allocated:aim.ScenarioDef.centering_def)
}
void ScenarioDef::set_allocated_barrel_def(::aim::BarrelScenarioDef* barrel_def) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (barrel_def) {
    ::google::protobuf::Arena* submessage_arena = barrel_def->GetArena();
    if (message_arena != submessage_arena) {
      barrel_def = ::google::protobuf::internal::GetOwnedMessage(message_arena, barrel_def, submessage_arena);
    }
    set_has_barrel_def();
    _impl_.type_.barrel_def_ = barrel_def;
  }
  // @@protoc_insertion_point(field_set_allocated:aim.ScenarioDef.barrel_def)
}
void ScenarioDef::set_allocated_linear_def(::aim::LinearScenarioDef* linear_def) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (linear_def) {
    ::google::protobuf::Arena* submessage_arena = linear_def->GetArena();
    if (message_arena != submessage_arena) {
      linear_def = ::google::protobuf::internal::GetOwnedMessage(message_arena, linear_def, submessage_arena);
    }
    set_has_linear_def();
    _impl_.type_.linear_def_ = linear_def;
  }
  // @@protoc_insertion_point(field_set_allocated:aim.ScenarioDef.linear_def)
}
ScenarioDef::ScenarioDef(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:aim.ScenarioDef)
}
inline PROTOBUF_NDEBUG_INLINE ScenarioDef::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::aim::ScenarioDef& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        scenario_id_(arena, from.scenario_id_),
        reference_(arena, from.reference_),
        type_{},
        _oneof_case_{from._oneof_case_[0]} {}

ScenarioDef::ScenarioDef(
    ::google::protobuf::Arena* arena,
    const ScenarioDef& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ScenarioDef* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.room_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::aim::Room>(
                              arena, *from._impl_.room_)
                        : nullptr;
  _impl_.target_def_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::aim::TargetDef>(
                              arena, *from._impl_.target_def_)
                        : nullptr;
  _impl_.overrides_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::aim::ScenarioReferenceOverrides>(
                              arena, *from._impl_.overrides_)
                        : nullptr;
  _impl_.shot_type_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::aim::ShotType>(
                              arena, *from._impl_.shot_type_)
                        : nullptr;
  _impl_.duration_seconds_ = from._impl_.duration_seconds_;
  switch (type_case()) {
    case TYPE_NOT_SET:
      break;
      case kStaticDef:
        _impl_.type_.static_def_ = ::google::protobuf::Message::CopyConstruct<::aim::StaticScenarioDef>(arena, *from._impl_.type_.static_def_);
        break;
      case kCenteringDef:
        _impl_.type_.centering_def_ = ::google::protobuf::Message::CopyConstruct<::aim::CenteringScenarioDef>(arena, *from._impl_.type_.centering_def_);
        break;
      case kBarrelDef:
        _impl_.type_.barrel_def_ = ::google::protobuf::Message::CopyConstruct<::aim::BarrelScenarioDef>(arena, *from._impl_.type_.barrel_def_);
        break;
      case kLinearDef:
        _impl_.type_.linear_def_ = ::google::protobuf::Message::CopyConstruct<::aim::LinearScenarioDef>(arena, *from._impl_.type_.linear_def_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:aim.ScenarioDef)
}
inline PROTOBUF_NDEBUG_INLINE ScenarioDef::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        scenario_id_(arena),
        reference_(arena),
        type_{},
        _oneof_case_{} {}

inline void ScenarioDef::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, room_),
           0,
           offsetof(Impl_, duration_seconds_) -
               offsetof(Impl_, room_) +
               sizeof(Impl_::duration_seconds_));
}
ScenarioDef::~ScenarioDef() {
  // @@protoc_insertion_point(destructor:aim.ScenarioDef)
  SharedDtor(*this);
}
inline void ScenarioDef::SharedDtor(MessageLite& self) {
  ScenarioDef& this_ = static_cast<ScenarioDef&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.scenario_id_.Destroy();
  this_._impl_.reference_.Destroy();
  delete this_._impl_.room_;
  delete this_._impl_.target_def_;
  delete this_._impl_.overrides_;
  delete this_._impl_.shot_type_;
  if (this_.has_type()) {
    this_.clear_type();
  }
  this_._impl_.~Impl_();
}

void ScenarioDef::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:aim.ScenarioDef)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (type_case()) {
    case kStaticDef: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.static_def_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.static_def_);
      }
      break;
    }
    case kCenteringDef: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.centering_def_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.centering_def_);
      }
      break;
    }
    case kBarrelDef: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.barrel_def_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.barrel_def_);
      }
      break;
    }
    case kLinearDef: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.linear_def_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.linear_def_);
      }
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = TYPE_NOT_SET;
}


inline void* ScenarioDef::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ScenarioDef(arena);
}
constexpr auto ScenarioDef::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ScenarioDef),
                                            alignof(ScenarioDef));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ScenarioDef::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ScenarioDef_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ScenarioDef::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ScenarioDef>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ScenarioDef::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ScenarioDef>(), &ScenarioDef::ByteSizeLong,
            &ScenarioDef::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ScenarioDef, _impl_._cached_size_),
        false,
    },
    &ScenarioDef::kDescriptorMethods,
    &descriptor_table_scenario_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ScenarioDef::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 11, 8, 52, 2> ScenarioDef::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ScenarioDef, _impl_._has_bits_),
    0, // no _extensions_
    13, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959368,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    8,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::aim::ScenarioDef>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .aim.ShotType shot_type = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 5, 3, PROTOBUF_FIELD_OFFSET(ScenarioDef, _impl_.shot_type_)}},
    // string scenario_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ScenarioDef, _impl_.scenario_id_)}},
    // float duration_seconds = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 6, 0, PROTOBUF_FIELD_OFFSET(ScenarioDef, _impl_.duration_seconds_)}},
    // .aim.Room room = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(ScenarioDef, _impl_.room_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .aim.TargetDef target_def = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 3, 1, PROTOBUF_FIELD_OFFSET(ScenarioDef, _impl_.target_def_)}},
    // string reference = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 1, 0, PROTOBUF_FIELD_OFFSET(ScenarioDef, _impl_.reference_)}},
    // .aim.ScenarioReferenceOverrides overrides = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 4, 2, PROTOBUF_FIELD_OFFSET(ScenarioDef, _impl_.overrides_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string scenario_id = 1;
    {PROTOBUF_FIELD_OFFSET(ScenarioDef, _impl_.scenario_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // float duration_seconds = 2;
    {PROTOBUF_FIELD_OFFSET(ScenarioDef, _impl_.duration_seconds_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // .aim.Room room = 3;
    {PROTOBUF_FIELD_OFFSET(ScenarioDef, _impl_.room_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .aim.TargetDef target_def = 5;
    {PROTOBUF_FIELD_OFFSET(ScenarioDef, _impl_.target_def_), _Internal::kHasBitsOffset + 3, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string reference = 6;
    {PROTOBUF_FIELD_OFFSET(ScenarioDef, _impl_.reference_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .aim.ScenarioReferenceOverrides overrides = 7;
    {PROTOBUF_FIELD_OFFSET(ScenarioDef, _impl_.overrides_), _Internal::kHasBitsOffset + 4, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .aim.ShotType shot_type = 8;
    {PROTOBUF_FIELD_OFFSET(ScenarioDef, _impl_.shot_type_), _Internal::kHasBitsOffset + 5, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .aim.StaticScenarioDef static_def = 10;
    {PROTOBUF_FIELD_OFFSET(ScenarioDef, _impl_.type_.static_def_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .aim.CenteringScenarioDef centering_def = 11;
    {PROTOBUF_FIELD_OFFSET(ScenarioDef, _impl_.type_.centering_def_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .aim.BarrelScenarioDef barrel_def = 12;
    {PROTOBUF_FIELD_OFFSET(ScenarioDef, _impl_.type_.barrel_def_), _Internal::kOneofCaseOffset + 0, 6,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .aim.LinearScenarioDef linear_def = 13;
    {PROTOBUF_FIELD_OFFSET(ScenarioDef, _impl_.type_.linear_def_), _Internal::kOneofCaseOffset + 0, 7,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::aim::Room>()},
    {::_pbi::TcParser::GetTable<::aim::TargetDef>()},
    {::_pbi::TcParser::GetTable<::aim::ScenarioReferenceOverrides>()},
    {::_pbi::TcParser::GetTable<::aim::ShotType>()},
    {::_pbi::TcParser::GetTable<::aim::StaticScenarioDef>()},
    {::_pbi::TcParser::GetTable<::aim::CenteringScenarioDef>()},
    {::_pbi::TcParser::GetTable<::aim::BarrelScenarioDef>()},
    {::_pbi::TcParser::GetTable<::aim::LinearScenarioDef>()},
  }}, {{
    "\17\13\0\0\0\11\0\0\0\0\0\0\0\0\0\0"
    "aim.ScenarioDef"
    "scenario_id"
    "reference"
  }},
};

PROTOBUF_NOINLINE void ScenarioDef::Clear() {
// @@protoc_insertion_point(message_clear_start:aim.ScenarioDef)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.scenario_id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.reference_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.room_ != nullptr);
      _impl_.room_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.target_def_ != nullptr);
      _impl_.target_def_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.overrides_ != nullptr);
      _impl_.overrides_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.shot_type_ != nullptr);
      _impl_.shot_type_->Clear();
    }
  }
  _impl_.duration_seconds_ = 0;
  clear_type();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ScenarioDef::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ScenarioDef& this_ = static_cast<const ScenarioDef&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ScenarioDef::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ScenarioDef& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:aim.ScenarioDef)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // string scenario_id = 1;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_scenario_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "aim.ScenarioDef.scenario_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // float duration_seconds = 2;
          if (cached_has_bits & 0x00000040u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_duration_seconds(), target);
          }

          // .aim.Room room = 3;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.room_, this_._impl_.room_->GetCachedSize(), target,
                stream);
          }

          // .aim.TargetDef target_def = 5;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.target_def_, this_._impl_.target_def_->GetCachedSize(), target,
                stream);
          }

          // string reference = 6;
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_reference();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "aim.ScenarioDef.reference");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // .aim.ScenarioReferenceOverrides overrides = 7;
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.overrides_, this_._impl_.overrides_->GetCachedSize(), target,
                stream);
          }

          // .aim.ShotType shot_type = 8;
          if (cached_has_bits & 0x00000020u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                8, *this_._impl_.shot_type_, this_._impl_.shot_type_->GetCachedSize(), target,
                stream);
          }

          switch (this_.type_case()) {
            case kStaticDef: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  10, *this_._impl_.type_.static_def_, this_._impl_.type_.static_def_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kCenteringDef: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  11, *this_._impl_.type_.centering_def_, this_._impl_.type_.centering_def_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kBarrelDef: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  12, *this_._impl_.type_.barrel_def_, this_._impl_.type_.barrel_def_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kLinearDef: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  13, *this_._impl_.type_.linear_def_, this_._impl_.type_.linear_def_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:aim.ScenarioDef)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ScenarioDef::ByteSizeLong(const MessageLite& base) {
          const ScenarioDef& this_ = static_cast<const ScenarioDef&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ScenarioDef::ByteSizeLong() const {
          const ScenarioDef& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:aim.ScenarioDef)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000007fu) {
            // string scenario_id = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_scenario_id());
            }
            // string reference = 6;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_reference());
            }
            // .aim.Room room = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.room_);
            }
            // .aim.TargetDef target_def = 5;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.target_def_);
            }
            // .aim.ScenarioReferenceOverrides overrides = 7;
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.overrides_);
            }
            // .aim.ShotType shot_type = 8;
            if (cached_has_bits & 0x00000020u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.shot_type_);
            }
            // float duration_seconds = 2;
            if (cached_has_bits & 0x00000040u) {
              total_size += 5;
            }
          }
          switch (this_.type_case()) {
            // .aim.StaticScenarioDef static_def = 10;
            case kStaticDef: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.type_.static_def_);
              break;
            }
            // .aim.CenteringScenarioDef centering_def = 11;
            case kCenteringDef: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.type_.centering_def_);
              break;
            }
            // .aim.BarrelScenarioDef barrel_def = 12;
            case kBarrelDef: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.type_.barrel_def_);
              break;
            }
            // .aim.LinearScenarioDef linear_def = 13;
            case kLinearDef: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.type_.linear_def_);
              break;
            }
            case TYPE_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ScenarioDef::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ScenarioDef*>(&to_msg);
  auto& from = static_cast<const ScenarioDef&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:aim.ScenarioDef)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_scenario_id(from._internal_scenario_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_reference(from._internal_reference());
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.room_ != nullptr);
      if (_this->_impl_.room_ == nullptr) {
        _this->_impl_.room_ =
            ::google::protobuf::Message::CopyConstruct<::aim::Room>(arena, *from._impl_.room_);
      } else {
        _this->_impl_.room_->MergeFrom(*from._impl_.room_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.target_def_ != nullptr);
      if (_this->_impl_.target_def_ == nullptr) {
        _this->_impl_.target_def_ =
            ::google::protobuf::Message::CopyConstruct<::aim::TargetDef>(arena, *from._impl_.target_def_);
      } else {
        _this->_impl_.target_def_->MergeFrom(*from._impl_.target_def_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.overrides_ != nullptr);
      if (_this->_impl_.overrides_ == nullptr) {
        _this->_impl_.overrides_ =
            ::google::protobuf::Message::CopyConstruct<::aim::ScenarioReferenceOverrides>(arena, *from._impl_.overrides_);
      } else {
        _this->_impl_.overrides_->MergeFrom(*from._impl_.overrides_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.shot_type_ != nullptr);
      if (_this->_impl_.shot_type_ == nullptr) {
        _this->_impl_.shot_type_ =
            ::google::protobuf::Message::CopyConstruct<::aim::ShotType>(arena, *from._impl_.shot_type_);
      } else {
        _this->_impl_.shot_type_->MergeFrom(*from._impl_.shot_type_);
      }
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.duration_seconds_ = from._impl_.duration_seconds_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_type();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kStaticDef: {
        if (oneof_needs_init) {
          _this->_impl_.type_.static_def_ =
              ::google::protobuf::Message::CopyConstruct<::aim::StaticScenarioDef>(arena, *from._impl_.type_.static_def_);
        } else {
          _this->_impl_.type_.static_def_->MergeFrom(from._internal_static_def());
        }
        break;
      }
      case kCenteringDef: {
        if (oneof_needs_init) {
          _this->_impl_.type_.centering_def_ =
              ::google::protobuf::Message::CopyConstruct<::aim::CenteringScenarioDef>(arena, *from._impl_.type_.centering_def_);
        } else {
          _this->_impl_.type_.centering_def_->MergeFrom(from._internal_centering_def());
        }
        break;
      }
      case kBarrelDef: {
        if (oneof_needs_init) {
          _this->_impl_.type_.barrel_def_ =
              ::google::protobuf::Message::CopyConstruct<::aim::BarrelScenarioDef>(arena, *from._impl_.type_.barrel_def_);
        } else {
          _this->_impl_.type_.barrel_def_->MergeFrom(from._internal_barrel_def());
        }
        break;
      }
      case kLinearDef: {
        if (oneof_needs_init) {
          _this->_impl_.type_.linear_def_ =
              ::google::protobuf::Message::CopyConstruct<::aim::LinearScenarioDef>(arena, *from._impl_.type_.linear_def_);
        } else {
          _this->_impl_.type_.linear_def_->MergeFrom(from._internal_linear_def());
        }
        break;
      }
      case TYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ScenarioDef::CopyFrom(const ScenarioDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aim.ScenarioDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ScenarioDef::InternalSwap(ScenarioDef* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.scenario_id_, &other->_impl_.scenario_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reference_, &other->_impl_.reference_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ScenarioDef, _impl_.duration_seconds_)
      + sizeof(ScenarioDef::_impl_.duration_seconds_)
      - PROTOBUF_FIELD_OFFSET(ScenarioDef, _impl_.room_)>(
          reinterpret_cast<char*>(&_impl_.room_),
          reinterpret_cast<char*>(&other->_impl_.room_));
  swap(_impl_.type_, other->_impl_.type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata ScenarioDef::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StaticScenarioDef::_Internal {
 public:
  using HasBits =
      decltype(std::declval<StaticScenarioDef>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(StaticScenarioDef, _impl_._has_bits_);
};

StaticScenarioDef::StaticScenarioDef(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:aim.StaticScenarioDef)
}
inline PROTOBUF_NDEBUG_INLINE StaticScenarioDef::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::aim::StaticScenarioDef& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

StaticScenarioDef::StaticScenarioDef(
    ::google::protobuf::Arena* arena,
    const StaticScenarioDef& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StaticScenarioDef* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.target_placement_strategy_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::aim::TargetPlacementStrategy>(
                              arena, *from._impl_.target_placement_strategy_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:aim.StaticScenarioDef)
}
inline PROTOBUF_NDEBUG_INLINE StaticScenarioDef::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StaticScenarioDef::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.target_placement_strategy_ = {};
}
StaticScenarioDef::~StaticScenarioDef() {
  // @@protoc_insertion_point(destructor:aim.StaticScenarioDef)
  SharedDtor(*this);
}
inline void StaticScenarioDef::SharedDtor(MessageLite& self) {
  StaticScenarioDef& this_ = static_cast<StaticScenarioDef&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.target_placement_strategy_;
  this_._impl_.~Impl_();
}

inline void* StaticScenarioDef::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) StaticScenarioDef(arena);
}
constexpr auto StaticScenarioDef::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(StaticScenarioDef),
                                            alignof(StaticScenarioDef));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull StaticScenarioDef::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_StaticScenarioDef_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &StaticScenarioDef::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<StaticScenarioDef>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &StaticScenarioDef::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<StaticScenarioDef>(), &StaticScenarioDef::ByteSizeLong,
            &StaticScenarioDef::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(StaticScenarioDef, _impl_._cached_size_),
        false,
    },
    &StaticScenarioDef::kDescriptorMethods,
    &descriptor_table_scenario_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* StaticScenarioDef::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> StaticScenarioDef::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StaticScenarioDef, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::aim::StaticScenarioDef>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .aim.TargetPlacementStrategy target_placement_strategy = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(StaticScenarioDef, _impl_.target_placement_strategy_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .aim.TargetPlacementStrategy target_placement_strategy = 1;
    {PROTOBUF_FIELD_OFFSET(StaticScenarioDef, _impl_.target_placement_strategy_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::aim::TargetPlacementStrategy>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void StaticScenarioDef::Clear() {
// @@protoc_insertion_point(message_clear_start:aim.StaticScenarioDef)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.target_placement_strategy_ != nullptr);
    _impl_.target_placement_strategy_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* StaticScenarioDef::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const StaticScenarioDef& this_ = static_cast<const StaticScenarioDef&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* StaticScenarioDef::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const StaticScenarioDef& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:aim.StaticScenarioDef)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .aim.TargetPlacementStrategy target_placement_strategy = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.target_placement_strategy_, this_._impl_.target_placement_strategy_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:aim.StaticScenarioDef)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t StaticScenarioDef::ByteSizeLong(const MessageLite& base) {
          const StaticScenarioDef& this_ = static_cast<const StaticScenarioDef&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t StaticScenarioDef::ByteSizeLong() const {
          const StaticScenarioDef& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:aim.StaticScenarioDef)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .aim.TargetPlacementStrategy target_placement_strategy = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.target_placement_strategy_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void StaticScenarioDef::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StaticScenarioDef*>(&to_msg);
  auto& from = static_cast<const StaticScenarioDef&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:aim.StaticScenarioDef)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.target_placement_strategy_ != nullptr);
    if (_this->_impl_.target_placement_strategy_ == nullptr) {
      _this->_impl_.target_placement_strategy_ =
          ::google::protobuf::Message::CopyConstruct<::aim::TargetPlacementStrategy>(arena, *from._impl_.target_placement_strategy_);
    } else {
      _this->_impl_.target_placement_strategy_->MergeFrom(*from._impl_.target_placement_strategy_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StaticScenarioDef::CopyFrom(const StaticScenarioDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aim.StaticScenarioDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StaticScenarioDef::InternalSwap(StaticScenarioDef* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.target_placement_strategy_, other->_impl_.target_placement_strategy_);
}

::google::protobuf::Metadata StaticScenarioDef::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CenteringScenarioDef::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CenteringScenarioDef>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CenteringScenarioDef, _impl_._has_bits_);
};

void CenteringScenarioDef::clear_start_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.start_position_ != nullptr) _impl_.start_position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CenteringScenarioDef::clear_end_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.end_position_ != nullptr) _impl_.end_position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
CenteringScenarioDef::CenteringScenarioDef(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:aim.CenteringScenarioDef)
}
inline PROTOBUF_NDEBUG_INLINE CenteringScenarioDef::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::aim::CenteringScenarioDef& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CenteringScenarioDef::CenteringScenarioDef(
    ::google::protobuf::Arena* arena,
    const CenteringScenarioDef& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CenteringScenarioDef* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.start_position_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::aim::StoredVec3>(
                              arena, *from._impl_.start_position_)
                        : nullptr;
  _impl_.end_position_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::aim::StoredVec3>(
                              arena, *from._impl_.end_position_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:aim.CenteringScenarioDef)
}
inline PROTOBUF_NDEBUG_INLINE CenteringScenarioDef::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CenteringScenarioDef::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, start_position_),
           0,
           offsetof(Impl_, end_position_) -
               offsetof(Impl_, start_position_) +
               sizeof(Impl_::end_position_));
}
CenteringScenarioDef::~CenteringScenarioDef() {
  // @@protoc_insertion_point(destructor:aim.CenteringScenarioDef)
  SharedDtor(*this);
}
inline void CenteringScenarioDef::SharedDtor(MessageLite& self) {
  CenteringScenarioDef& this_ = static_cast<CenteringScenarioDef&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.start_position_;
  delete this_._impl_.end_position_;
  this_._impl_.~Impl_();
}

inline void* CenteringScenarioDef::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CenteringScenarioDef(arena);
}
constexpr auto CenteringScenarioDef::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CenteringScenarioDef),
                                            alignof(CenteringScenarioDef));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CenteringScenarioDef::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CenteringScenarioDef_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CenteringScenarioDef::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CenteringScenarioDef>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CenteringScenarioDef::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CenteringScenarioDef>(), &CenteringScenarioDef::ByteSizeLong,
            &CenteringScenarioDef::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CenteringScenarioDef, _impl_._cached_size_),
        false,
    },
    &CenteringScenarioDef::kDescriptorMethods,
    &descriptor_table_scenario_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CenteringScenarioDef::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> CenteringScenarioDef::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CenteringScenarioDef, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::aim::CenteringScenarioDef>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .aim.StoredVec3 end_position = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(CenteringScenarioDef, _impl_.end_position_)}},
    // .aim.StoredVec3 start_position = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CenteringScenarioDef, _impl_.start_position_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .aim.StoredVec3 start_position = 1;
    {PROTOBUF_FIELD_OFFSET(CenteringScenarioDef, _impl_.start_position_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .aim.StoredVec3 end_position = 2;
    {PROTOBUF_FIELD_OFFSET(CenteringScenarioDef, _impl_.end_position_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::aim::StoredVec3>()},
    {::_pbi::TcParser::GetTable<::aim::StoredVec3>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CenteringScenarioDef::Clear() {
// @@protoc_insertion_point(message_clear_start:aim.CenteringScenarioDef)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.start_position_ != nullptr);
      _impl_.start_position_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.end_position_ != nullptr);
      _impl_.end_position_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CenteringScenarioDef::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CenteringScenarioDef& this_ = static_cast<const CenteringScenarioDef&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CenteringScenarioDef::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CenteringScenarioDef& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:aim.CenteringScenarioDef)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .aim.StoredVec3 start_position = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.start_position_, this_._impl_.start_position_->GetCachedSize(), target,
                stream);
          }

          // .aim.StoredVec3 end_position = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.end_position_, this_._impl_.end_position_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:aim.CenteringScenarioDef)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CenteringScenarioDef::ByteSizeLong(const MessageLite& base) {
          const CenteringScenarioDef& this_ = static_cast<const CenteringScenarioDef&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CenteringScenarioDef::ByteSizeLong() const {
          const CenteringScenarioDef& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:aim.CenteringScenarioDef)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .aim.StoredVec3 start_position = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.start_position_);
            }
            // .aim.StoredVec3 end_position = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.end_position_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CenteringScenarioDef::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CenteringScenarioDef*>(&to_msg);
  auto& from = static_cast<const CenteringScenarioDef&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:aim.CenteringScenarioDef)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.start_position_ != nullptr);
      if (_this->_impl_.start_position_ == nullptr) {
        _this->_impl_.start_position_ =
            ::google::protobuf::Message::CopyConstruct<::aim::StoredVec3>(arena, *from._impl_.start_position_);
      } else {
        _this->_impl_.start_position_->MergeFrom(*from._impl_.start_position_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.end_position_ != nullptr);
      if (_this->_impl_.end_position_ == nullptr) {
        _this->_impl_.end_position_ =
            ::google::protobuf::Message::CopyConstruct<::aim::StoredVec3>(arena, *from._impl_.end_position_);
      } else {
        _this->_impl_.end_position_->MergeFrom(*from._impl_.end_position_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CenteringScenarioDef::CopyFrom(const CenteringScenarioDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aim.CenteringScenarioDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CenteringScenarioDef::InternalSwap(CenteringScenarioDef* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CenteringScenarioDef, _impl_.end_position_)
      + sizeof(CenteringScenarioDef::_impl_.end_position_)
      - PROTOBUF_FIELD_OFFSET(CenteringScenarioDef, _impl_.start_position_)>(
          reinterpret_cast<char*>(&_impl_.start_position_),
          reinterpret_cast<char*>(&other->_impl_.start_position_));
}

::google::protobuf::Metadata CenteringScenarioDef::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BarrelScenarioDef::_Internal {
 public:
  using HasBits =
      decltype(std::declval<BarrelScenarioDef>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BarrelScenarioDef, _impl_._has_bits_);
};

BarrelScenarioDef::BarrelScenarioDef(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:aim.BarrelScenarioDef)
}
inline PROTOBUF_NDEBUG_INLINE BarrelScenarioDef::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::aim::BarrelScenarioDef& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

BarrelScenarioDef::BarrelScenarioDef(
    ::google::protobuf::Arena* arena,
    const BarrelScenarioDef& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BarrelScenarioDef* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.target_placement_strategy_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::aim::TargetPlacementStrategy>(
                              arena, *from._impl_.target_placement_strategy_)
                        : nullptr;
  _impl_.direction_radius_percent_ = from._impl_.direction_radius_percent_;

  // @@protoc_insertion_point(copy_constructor:aim.BarrelScenarioDef)
}
inline PROTOBUF_NDEBUG_INLINE BarrelScenarioDef::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void BarrelScenarioDef::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, target_placement_strategy_),
           0,
           offsetof(Impl_, direction_radius_percent_) -
               offsetof(Impl_, target_placement_strategy_) +
               sizeof(Impl_::direction_radius_percent_));
}
BarrelScenarioDef::~BarrelScenarioDef() {
  // @@protoc_insertion_point(destructor:aim.BarrelScenarioDef)
  SharedDtor(*this);
}
inline void BarrelScenarioDef::SharedDtor(MessageLite& self) {
  BarrelScenarioDef& this_ = static_cast<BarrelScenarioDef&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.target_placement_strategy_;
  this_._impl_.~Impl_();
}

inline void* BarrelScenarioDef::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BarrelScenarioDef(arena);
}
constexpr auto BarrelScenarioDef::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(BarrelScenarioDef),
                                            alignof(BarrelScenarioDef));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BarrelScenarioDef::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BarrelScenarioDef_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BarrelScenarioDef::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BarrelScenarioDef>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BarrelScenarioDef::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BarrelScenarioDef>(), &BarrelScenarioDef::ByteSizeLong,
            &BarrelScenarioDef::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BarrelScenarioDef, _impl_._cached_size_),
        false,
    },
    &BarrelScenarioDef::kDescriptorMethods,
    &descriptor_table_scenario_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BarrelScenarioDef::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> BarrelScenarioDef::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BarrelScenarioDef, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::aim::BarrelScenarioDef>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // float direction_radius_percent = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(BarrelScenarioDef, _impl_.direction_radius_percent_)}},
    // .aim.TargetPlacementStrategy target_placement_strategy = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(BarrelScenarioDef, _impl_.target_placement_strategy_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .aim.TargetPlacementStrategy target_placement_strategy = 1;
    {PROTOBUF_FIELD_OFFSET(BarrelScenarioDef, _impl_.target_placement_strategy_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // float direction_radius_percent = 2;
    {PROTOBUF_FIELD_OFFSET(BarrelScenarioDef, _impl_.direction_radius_percent_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }}, {{
    {::_pbi::TcParser::GetTable<::aim::TargetPlacementStrategy>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void BarrelScenarioDef::Clear() {
// @@protoc_insertion_point(message_clear_start:aim.BarrelScenarioDef)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.target_placement_strategy_ != nullptr);
    _impl_.target_placement_strategy_->Clear();
  }
  _impl_.direction_radius_percent_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BarrelScenarioDef::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BarrelScenarioDef& this_ = static_cast<const BarrelScenarioDef&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BarrelScenarioDef::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BarrelScenarioDef& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:aim.BarrelScenarioDef)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .aim.TargetPlacementStrategy target_placement_strategy = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.target_placement_strategy_, this_._impl_.target_placement_strategy_->GetCachedSize(), target,
                stream);
          }

          // float direction_radius_percent = 2;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_direction_radius_percent(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:aim.BarrelScenarioDef)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BarrelScenarioDef::ByteSizeLong(const MessageLite& base) {
          const BarrelScenarioDef& this_ = static_cast<const BarrelScenarioDef&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BarrelScenarioDef::ByteSizeLong() const {
          const BarrelScenarioDef& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:aim.BarrelScenarioDef)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .aim.TargetPlacementStrategy target_placement_strategy = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.target_placement_strategy_);
            }
            // float direction_radius_percent = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BarrelScenarioDef::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BarrelScenarioDef*>(&to_msg);
  auto& from = static_cast<const BarrelScenarioDef&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:aim.BarrelScenarioDef)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.target_placement_strategy_ != nullptr);
      if (_this->_impl_.target_placement_strategy_ == nullptr) {
        _this->_impl_.target_placement_strategy_ =
            ::google::protobuf::Message::CopyConstruct<::aim::TargetPlacementStrategy>(arena, *from._impl_.target_placement_strategy_);
      } else {
        _this->_impl_.target_placement_strategy_->MergeFrom(*from._impl_.target_placement_strategy_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.direction_radius_percent_ = from._impl_.direction_radius_percent_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BarrelScenarioDef::CopyFrom(const BarrelScenarioDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aim.BarrelScenarioDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BarrelScenarioDef::InternalSwap(BarrelScenarioDef* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BarrelScenarioDef, _impl_.direction_radius_percent_)
      + sizeof(BarrelScenarioDef::_impl_.direction_radius_percent_)
      - PROTOBUF_FIELD_OFFSET(BarrelScenarioDef, _impl_.target_placement_strategy_)>(
          reinterpret_cast<char*>(&_impl_.target_placement_strategy_),
          reinterpret_cast<char*>(&other->_impl_.target_placement_strategy_));
}

::google::protobuf::Metadata BarrelScenarioDef::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LinearScenarioDef::_Internal {
 public:
  using HasBits =
      decltype(std::declval<LinearScenarioDef>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LinearScenarioDef, _impl_._has_bits_);
};

LinearScenarioDef::LinearScenarioDef(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:aim.LinearScenarioDef)
}
inline PROTOBUF_NDEBUG_INLINE LinearScenarioDef::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::aim::LinearScenarioDef& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

LinearScenarioDef::LinearScenarioDef(
    ::google::protobuf::Arena* arena,
    const LinearScenarioDef& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LinearScenarioDef* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.target_placement_strategy_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::aim::TargetPlacementStrategy>(
                              arena, *from._impl_.target_placement_strategy_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, angle_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, angle_),
           offsetof(Impl_, height_) -
               offsetof(Impl_, angle_) +
               sizeof(Impl_::height_));

  // @@protoc_insertion_point(copy_constructor:aim.LinearScenarioDef)
}
inline PROTOBUF_NDEBUG_INLINE LinearScenarioDef::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void LinearScenarioDef::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, target_placement_strategy_),
           0,
           offsetof(Impl_, height_) -
               offsetof(Impl_, target_placement_strategy_) +
               sizeof(Impl_::height_));
}
LinearScenarioDef::~LinearScenarioDef() {
  // @@protoc_insertion_point(destructor:aim.LinearScenarioDef)
  SharedDtor(*this);
}
inline void LinearScenarioDef::SharedDtor(MessageLite& self) {
  LinearScenarioDef& this_ = static_cast<LinearScenarioDef&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.target_placement_strategy_;
  this_._impl_.~Impl_();
}

inline void* LinearScenarioDef::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LinearScenarioDef(arena);
}
constexpr auto LinearScenarioDef::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(LinearScenarioDef),
                                            alignof(LinearScenarioDef));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LinearScenarioDef::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LinearScenarioDef_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &LinearScenarioDef::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LinearScenarioDef>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LinearScenarioDef::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LinearScenarioDef>(), &LinearScenarioDef::ByteSizeLong,
            &LinearScenarioDef::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LinearScenarioDef, _impl_._cached_size_),
        false,
    },
    &LinearScenarioDef::kDescriptorMethods,
    &descriptor_table_scenario_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LinearScenarioDef::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 0, 2> LinearScenarioDef::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LinearScenarioDef, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::aim::LinearScenarioDef>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float angle = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 1, 0, PROTOBUF_FIELD_OFFSET(LinearScenarioDef, _impl_.angle_)}},
    // float angle_jitter = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 2, 0, PROTOBUF_FIELD_OFFSET(LinearScenarioDef, _impl_.angle_jitter_)}},
    // float width = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 3, 0, PROTOBUF_FIELD_OFFSET(LinearScenarioDef, _impl_.width_)}},
    // float height = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 4, 0, PROTOBUF_FIELD_OFFSET(LinearScenarioDef, _impl_.height_)}},
    // .aim.TargetPlacementStrategy target_placement_strategy = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(LinearScenarioDef, _impl_.target_placement_strategy_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // float angle = 1;
    {PROTOBUF_FIELD_OFFSET(LinearScenarioDef, _impl_.angle_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float angle_jitter = 2;
    {PROTOBUF_FIELD_OFFSET(LinearScenarioDef, _impl_.angle_jitter_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float width = 3;
    {PROTOBUF_FIELD_OFFSET(LinearScenarioDef, _impl_.width_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float height = 4;
    {PROTOBUF_FIELD_OFFSET(LinearScenarioDef, _impl_.height_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // .aim.TargetPlacementStrategy target_placement_strategy = 5;
    {PROTOBUF_FIELD_OFFSET(LinearScenarioDef, _impl_.target_placement_strategy_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::aim::TargetPlacementStrategy>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void LinearScenarioDef::Clear() {
// @@protoc_insertion_point(message_clear_start:aim.LinearScenarioDef)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.target_placement_strategy_ != nullptr);
    _impl_.target_placement_strategy_->Clear();
  }
  if (cached_has_bits & 0x0000001eu) {
    ::memset(&_impl_.angle_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.height_) -
        reinterpret_cast<char*>(&_impl_.angle_)) + sizeof(_impl_.height_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LinearScenarioDef::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LinearScenarioDef& this_ = static_cast<const LinearScenarioDef&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LinearScenarioDef::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LinearScenarioDef& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:aim.LinearScenarioDef)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // float angle = 1;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_angle(), target);
          }

          // float angle_jitter = 2;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_angle_jitter(), target);
          }

          // float width = 3;
          if (cached_has_bits & 0x00000008u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_width(), target);
          }

          // float height = 4;
          if (cached_has_bits & 0x00000010u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                4, this_._internal_height(), target);
          }

          // .aim.TargetPlacementStrategy target_placement_strategy = 5;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.target_placement_strategy_, this_._impl_.target_placement_strategy_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:aim.LinearScenarioDef)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LinearScenarioDef::ByteSizeLong(const MessageLite& base) {
          const LinearScenarioDef& this_ = static_cast<const LinearScenarioDef&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LinearScenarioDef::ByteSizeLong() const {
          const LinearScenarioDef& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:aim.LinearScenarioDef)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000001fu) {
            // .aim.TargetPlacementStrategy target_placement_strategy = 5;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.target_placement_strategy_);
            }
            // float angle = 1;
            if (cached_has_bits & 0x00000002u) {
              total_size += 5;
            }
            // float angle_jitter = 2;
            if (cached_has_bits & 0x00000004u) {
              total_size += 5;
            }
            // float width = 3;
            if (cached_has_bits & 0x00000008u) {
              total_size += 5;
            }
            // float height = 4;
            if (cached_has_bits & 0x00000010u) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LinearScenarioDef::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LinearScenarioDef*>(&to_msg);
  auto& from = static_cast<const LinearScenarioDef&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:aim.LinearScenarioDef)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.target_placement_strategy_ != nullptr);
      if (_this->_impl_.target_placement_strategy_ == nullptr) {
        _this->_impl_.target_placement_strategy_ =
            ::google::protobuf::Message::CopyConstruct<::aim::TargetPlacementStrategy>(arena, *from._impl_.target_placement_strategy_);
      } else {
        _this->_impl_.target_placement_strategy_->MergeFrom(*from._impl_.target_placement_strategy_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.angle_ = from._impl_.angle_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.angle_jitter_ = from._impl_.angle_jitter_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.width_ = from._impl_.width_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.height_ = from._impl_.height_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LinearScenarioDef::CopyFrom(const LinearScenarioDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aim.LinearScenarioDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LinearScenarioDef::InternalSwap(LinearScenarioDef* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LinearScenarioDef, _impl_.height_)
      + sizeof(LinearScenarioDef::_impl_.height_)
      - PROTOBUF_FIELD_OFFSET(LinearScenarioDef, _impl_.target_placement_strategy_)>(
          reinterpret_cast<char*>(&_impl_.target_placement_strategy_),
          reinterpret_cast<char*>(&other->_impl_.target_placement_strategy_));
}

::google::protobuf::Metadata LinearScenarioDef::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TargetDef::_Internal {
 public:
  using HasBits =
      decltype(std::declval<TargetDef>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TargetDef, _impl_._has_bits_);
};

TargetDef::TargetDef(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:aim.TargetDef)
}
inline PROTOBUF_NDEBUG_INLINE TargetDef::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::aim::TargetDef& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        profiles_{visibility, arena, from.profiles_},
        target_order_{visibility, arena, from.target_order_},
        _target_order_cached_byte_size_{0} {}

TargetDef::TargetDef(
    ::google::protobuf::Arena* arena,
    const TargetDef& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TargetDef* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, num_targets_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, num_targets_),
           offsetof(Impl_, stagger_initial_targets_seconds_) -
               offsetof(Impl_, num_targets_) +
               sizeof(Impl_::stagger_initial_targets_seconds_));

  // @@protoc_insertion_point(copy_constructor:aim.TargetDef)
}
inline PROTOBUF_NDEBUG_INLINE TargetDef::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        profiles_{visibility, arena},
        target_order_{visibility, arena},
        _target_order_cached_byte_size_{0} {}

inline void TargetDef::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, num_targets_),
           0,
           offsetof(Impl_, stagger_initial_targets_seconds_) -
               offsetof(Impl_, num_targets_) +
               sizeof(Impl_::stagger_initial_targets_seconds_));
}
TargetDef::~TargetDef() {
  // @@protoc_insertion_point(destructor:aim.TargetDef)
  SharedDtor(*this);
}
inline void TargetDef::SharedDtor(MessageLite& self) {
  TargetDef& this_ = static_cast<TargetDef&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* TargetDef::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TargetDef(arena);
}
constexpr auto TargetDef::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TargetDef, _impl_.profiles_) +
          decltype(TargetDef::_impl_.profiles_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TargetDef, _impl_.target_order_) +
          decltype(TargetDef::_impl_.target_order_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(TargetDef), alignof(TargetDef), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TargetDef::PlacementNew_,
                                 sizeof(TargetDef),
                                 alignof(TargetDef));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TargetDef::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TargetDef_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TargetDef::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TargetDef>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TargetDef::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TargetDef>(), &TargetDef::ByteSizeLong,
            &TargetDef::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TargetDef, _impl_._cached_size_),
        false,
    },
    &TargetDef::kDescriptorMethods,
    &descriptor_table_scenario_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TargetDef::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 1, 0, 2> TargetDef::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TargetDef, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::aim::TargetDef>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // float stagger_initial_targets_seconds = 8;
    {::_pbi::TcParser::FastF32S1,
     {69, 5, 0, PROTOBUF_FIELD_OFFSET(TargetDef, _impl_.stagger_initial_targets_seconds_)}},
    // repeated .aim.TargetProfile profiles = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TargetDef, _impl_.profiles_)}},
    // int32 num_targets = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TargetDef, _impl_.num_targets_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(TargetDef, _impl_.num_targets_)}},
    // bool remove_closest_on_miss = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TargetDef, _impl_.remove_closest_on_miss_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(TargetDef, _impl_.remove_closest_on_miss_)}},
    // repeated int32 target_order = 4;
    {::_pbi::TcParser::FastV32P1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(TargetDef, _impl_.target_order_)}},
    // bool newest_target_is_ghost = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TargetDef, _impl_.newest_target_is_ghost_), 2>(),
     {40, 2, 0, PROTOBUF_FIELD_OFFSET(TargetDef, _impl_.newest_target_is_ghost_)}},
    // float new_target_delay_seconds = 6;
    {::_pbi::TcParser::FastF32S1,
     {53, 3, 0, PROTOBUF_FIELD_OFFSET(TargetDef, _impl_.new_target_delay_seconds_)}},
    // float remove_target_after_seconds = 7;
    {::_pbi::TcParser::FastF32S1,
     {61, 4, 0, PROTOBUF_FIELD_OFFSET(TargetDef, _impl_.remove_target_after_seconds_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .aim.TargetProfile profiles = 1;
    {PROTOBUF_FIELD_OFFSET(TargetDef, _impl_.profiles_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 num_targets = 2;
    {PROTOBUF_FIELD_OFFSET(TargetDef, _impl_.num_targets_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // bool remove_closest_on_miss = 3;
    {PROTOBUF_FIELD_OFFSET(TargetDef, _impl_.remove_closest_on_miss_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated int32 target_order = 4;
    {PROTOBUF_FIELD_OFFSET(TargetDef, _impl_.target_order_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // bool newest_target_is_ghost = 5;
    {PROTOBUF_FIELD_OFFSET(TargetDef, _impl_.newest_target_is_ghost_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // float new_target_delay_seconds = 6;
    {PROTOBUF_FIELD_OFFSET(TargetDef, _impl_.new_target_delay_seconds_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float remove_target_after_seconds = 7;
    {PROTOBUF_FIELD_OFFSET(TargetDef, _impl_.remove_target_after_seconds_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float stagger_initial_targets_seconds = 8;
    {PROTOBUF_FIELD_OFFSET(TargetDef, _impl_.stagger_initial_targets_seconds_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }}, {{
    {::_pbi::TcParser::GetTable<::aim::TargetProfile>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void TargetDef::Clear() {
// @@protoc_insertion_point(message_clear_start:aim.TargetDef)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.profiles_.Clear();
  _impl_.target_order_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    ::memset(&_impl_.num_targets_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.stagger_initial_targets_seconds_) -
        reinterpret_cast<char*>(&_impl_.num_targets_)) + sizeof(_impl_.stagger_initial_targets_seconds_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TargetDef::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TargetDef& this_ = static_cast<const TargetDef&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TargetDef::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TargetDef& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:aim.TargetDef)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .aim.TargetProfile profiles = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_profiles_size());
               i < n; i++) {
            const auto& repfield = this_._internal_profiles().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // int32 num_targets = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_num_targets(), target);
          }

          // bool remove_closest_on_miss = 3;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_remove_closest_on_miss(), target);
          }

          // repeated int32 target_order = 4;
          {
            int byte_size = this_._impl_._target_order_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt32Packed(
                  4, this_._internal_target_order(), byte_size, target);
            }
          }

          // bool newest_target_is_ghost = 5;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_newest_target_is_ghost(), target);
          }

          // float new_target_delay_seconds = 6;
          if (cached_has_bits & 0x00000008u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                6, this_._internal_new_target_delay_seconds(), target);
          }

          // float remove_target_after_seconds = 7;
          if (cached_has_bits & 0x00000010u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                7, this_._internal_remove_target_after_seconds(), target);
          }

          // float stagger_initial_targets_seconds = 8;
          if (cached_has_bits & 0x00000020u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                8, this_._internal_stagger_initial_targets_seconds(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:aim.TargetDef)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TargetDef::ByteSizeLong(const MessageLite& base) {
          const TargetDef& this_ = static_cast<const TargetDef&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TargetDef::ByteSizeLong() const {
          const TargetDef& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:aim.TargetDef)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .aim.TargetProfile profiles = 1;
            {
              total_size += 1UL * this_._internal_profiles_size();
              for (const auto& msg : this_._internal_profiles()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated int32 target_order = 4;
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int32SizeWithPackedTagSize(
                      this_._internal_target_order(), 1,
                      this_._impl_._target_order_cached_byte_size_);
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000003fu) {
            // int32 num_targets = 2;
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_num_targets());
            }
            // bool remove_closest_on_miss = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += 2;
            }
            // bool newest_target_is_ghost = 5;
            if (cached_has_bits & 0x00000004u) {
              total_size += 2;
            }
            // float new_target_delay_seconds = 6;
            if (cached_has_bits & 0x00000008u) {
              total_size += 5;
            }
            // float remove_target_after_seconds = 7;
            if (cached_has_bits & 0x00000010u) {
              total_size += 5;
            }
            // float stagger_initial_targets_seconds = 8;
            if (cached_has_bits & 0x00000020u) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TargetDef::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TargetDef*>(&to_msg);
  auto& from = static_cast<const TargetDef&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:aim.TargetDef)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_profiles()->MergeFrom(
      from._internal_profiles());
  _this->_internal_mutable_target_order()->MergeFrom(from._internal_target_order());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.num_targets_ = from._impl_.num_targets_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.remove_closest_on_miss_ = from._impl_.remove_closest_on_miss_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.newest_target_is_ghost_ = from._impl_.newest_target_is_ghost_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.new_target_delay_seconds_ = from._impl_.new_target_delay_seconds_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.remove_target_after_seconds_ = from._impl_.remove_target_after_seconds_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.stagger_initial_targets_seconds_ = from._impl_.stagger_initial_targets_seconds_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TargetDef::CopyFrom(const TargetDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aim.TargetDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TargetDef::InternalSwap(TargetDef* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.profiles_.InternalSwap(&other->_impl_.profiles_);
  _impl_.target_order_.InternalSwap(&other->_impl_.target_order_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TargetDef, _impl_.stagger_initial_targets_seconds_)
      + sizeof(TargetDef::_impl_.stagger_initial_targets_seconds_)
      - PROTOBUF_FIELD_OFFSET(TargetDef, _impl_.num_targets_)>(
          reinterpret_cast<char*>(&_impl_.num_targets_),
          reinterpret_cast<char*>(&other->_impl_.num_targets_));
}

::google::protobuf::Metadata TargetDef::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PillTargetDef::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PillTargetDef>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PillTargetDef, _impl_._has_bits_);
};

PillTargetDef::PillTargetDef(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:aim.PillTargetDef)
}
PillTargetDef::PillTargetDef(
    ::google::protobuf::Arena* arena, const PillTargetDef& from)
    : PillTargetDef(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PillTargetDef::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PillTargetDef::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.height_ = {};
}
PillTargetDef::~PillTargetDef() {
  // @@protoc_insertion_point(destructor:aim.PillTargetDef)
  SharedDtor(*this);
}
inline void PillTargetDef::SharedDtor(MessageLite& self) {
  PillTargetDef& this_ = static_cast<PillTargetDef&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PillTargetDef::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PillTargetDef(arena);
}
constexpr auto PillTargetDef::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PillTargetDef),
                                            alignof(PillTargetDef));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PillTargetDef::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PillTargetDef_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PillTargetDef::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PillTargetDef>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PillTargetDef::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PillTargetDef>(), &PillTargetDef::ByteSizeLong,
            &PillTargetDef::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PillTargetDef, _impl_._cached_size_),
        false,
    },
    &PillTargetDef::kDescriptorMethods,
    &descriptor_table_scenario_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PillTargetDef::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> PillTargetDef::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PillTargetDef, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::aim::PillTargetDef>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // float height = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(PillTargetDef, _impl_.height_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float height = 1;
    {PROTOBUF_FIELD_OFFSET(PillTargetDef, _impl_.height_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PillTargetDef::Clear() {
// @@protoc_insertion_point(message_clear_start:aim.PillTargetDef)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.height_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PillTargetDef::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PillTargetDef& this_ = static_cast<const PillTargetDef&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PillTargetDef::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PillTargetDef& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:aim.PillTargetDef)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // float height = 1;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_height(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:aim.PillTargetDef)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PillTargetDef::ByteSizeLong(const MessageLite& base) {
          const PillTargetDef& this_ = static_cast<const PillTargetDef&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PillTargetDef::ByteSizeLong() const {
          const PillTargetDef& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:aim.PillTargetDef)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // float height = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PillTargetDef::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PillTargetDef*>(&to_msg);
  auto& from = static_cast<const PillTargetDef&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:aim.PillTargetDef)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.height_ = from._impl_.height_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PillTargetDef::CopyFrom(const PillTargetDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aim.PillTargetDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PillTargetDef::InternalSwap(PillTargetDef* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.height_, other->_impl_.height_);
}

::google::protobuf::Metadata PillTargetDef::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TargetProfile::_Internal {
 public:
  using HasBits =
      decltype(std::declval<TargetProfile>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TargetProfile, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::aim::TargetProfile, _impl_._oneof_case_);
};

void TargetProfile::set_allocated_pill(::aim::PillTargetDef* pill) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (pill) {
    ::google::protobuf::Arena* submessage_arena = pill->GetArena();
    if (message_arena != submessage_arena) {
      pill = ::google::protobuf::internal::GetOwnedMessage(message_arena, pill, submessage_arena);
    }
    set_has_pill();
    _impl_.type_.pill_ = pill;
  }
  // @@protoc_insertion_point(field_set_allocated:aim.TargetProfile.pill)
}
TargetProfile::TargetProfile(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:aim.TargetProfile)
}
inline PROTOBUF_NDEBUG_INLINE TargetProfile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::aim::TargetProfile& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        type_{},
        _oneof_case_{from._oneof_case_[0]} {}

TargetProfile::TargetProfile(
    ::google::protobuf::Arena* arena,
    const TargetProfile& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TargetProfile* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, percent_chance_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, percent_chance_),
           offsetof(Impl_, health_seconds_jitter_) -
               offsetof(Impl_, percent_chance_) +
               sizeof(Impl_::health_seconds_jitter_));
  switch (type_case()) {
    case TYPE_NOT_SET:
      break;
      case kPill:
        _impl_.type_.pill_ = ::google::protobuf::Message::CopyConstruct<::aim::PillTargetDef>(arena, *from._impl_.type_.pill_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:aim.TargetProfile)
}
inline PROTOBUF_NDEBUG_INLINE TargetProfile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        type_{},
        _oneof_case_{} {}

inline void TargetProfile::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, percent_chance_),
           0,
           offsetof(Impl_, health_seconds_jitter_) -
               offsetof(Impl_, percent_chance_) +
               sizeof(Impl_::health_seconds_jitter_));
}
TargetProfile::~TargetProfile() {
  // @@protoc_insertion_point(destructor:aim.TargetProfile)
  SharedDtor(*this);
}
inline void TargetProfile::SharedDtor(MessageLite& self) {
  TargetProfile& this_ = static_cast<TargetProfile&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_type()) {
    this_.clear_type();
  }
  this_._impl_.~Impl_();
}

void TargetProfile::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:aim.TargetProfile)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (type_case()) {
    case kPill: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.pill_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.pill_);
      }
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = TYPE_NOT_SET;
}


inline void* TargetProfile::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TargetProfile(arena);
}
constexpr auto TargetProfile::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TargetProfile),
                                            alignof(TargetProfile));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TargetProfile::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TargetProfile_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TargetProfile::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TargetProfile>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TargetProfile::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TargetProfile>(), &TargetProfile::ByteSizeLong,
            &TargetProfile::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TargetProfile, _impl_._cached_size_),
        false,
    },
    &TargetProfile::kDescriptorMethods,
    &descriptor_table_scenario_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TargetProfile::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 1, 0, 2> TargetProfile::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TargetProfile, _impl_._has_bits_),
    0, // no _extensions_
    10, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966656,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::aim::TargetProfile>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float percent_chance = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(TargetProfile, _impl_.percent_chance_)}},
    // float target_radius = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(TargetProfile, _impl_.target_radius_)}},
    // float target_radius_jitter = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(TargetProfile, _impl_.target_radius_jitter_)}},
    // float speed = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 3, 0, PROTOBUF_FIELD_OFFSET(TargetProfile, _impl_.speed_)}},
    // float speed_jitter = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 4, 0, PROTOBUF_FIELD_OFFSET(TargetProfile, _impl_.speed_jitter_)}},
    // float health_seconds = 6;
    {::_pbi::TcParser::FastF32S1,
     {53, 5, 0, PROTOBUF_FIELD_OFFSET(TargetProfile, _impl_.health_seconds_)}},
    // float health_seconds_jitter = 7;
    {::_pbi::TcParser::FastF32S1,
     {61, 6, 0, PROTOBUF_FIELD_OFFSET(TargetProfile, _impl_.health_seconds_jitter_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float percent_chance = 1;
    {PROTOBUF_FIELD_OFFSET(TargetProfile, _impl_.percent_chance_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float target_radius = 2;
    {PROTOBUF_FIELD_OFFSET(TargetProfile, _impl_.target_radius_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float target_radius_jitter = 3;
    {PROTOBUF_FIELD_OFFSET(TargetProfile, _impl_.target_radius_jitter_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float speed = 4;
    {PROTOBUF_FIELD_OFFSET(TargetProfile, _impl_.speed_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float speed_jitter = 5;
    {PROTOBUF_FIELD_OFFSET(TargetProfile, _impl_.speed_jitter_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float health_seconds = 6;
    {PROTOBUF_FIELD_OFFSET(TargetProfile, _impl_.health_seconds_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float health_seconds_jitter = 7;
    {PROTOBUF_FIELD_OFFSET(TargetProfile, _impl_.health_seconds_jitter_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // .aim.PillTargetDef pill = 10;
    {PROTOBUF_FIELD_OFFSET(TargetProfile, _impl_.type_.pill_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::aim::PillTargetDef>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void TargetProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:aim.TargetProfile)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    ::memset(&_impl_.percent_chance_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.health_seconds_jitter_) -
        reinterpret_cast<char*>(&_impl_.percent_chance_)) + sizeof(_impl_.health_seconds_jitter_));
  }
  clear_type();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TargetProfile::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TargetProfile& this_ = static_cast<const TargetProfile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TargetProfile::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TargetProfile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:aim.TargetProfile)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // float percent_chance = 1;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_percent_chance(), target);
          }

          // float target_radius = 2;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_target_radius(), target);
          }

          // float target_radius_jitter = 3;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_target_radius_jitter(), target);
          }

          // float speed = 4;
          if (cached_has_bits & 0x00000008u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                4, this_._internal_speed(), target);
          }

          // float speed_jitter = 5;
          if (cached_has_bits & 0x00000010u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                5, this_._internal_speed_jitter(), target);
          }

          // float health_seconds = 6;
          if (cached_has_bits & 0x00000020u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                6, this_._internal_health_seconds(), target);
          }

          // float health_seconds_jitter = 7;
          if (cached_has_bits & 0x00000040u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                7, this_._internal_health_seconds_jitter(), target);
          }

          // .aim.PillTargetDef pill = 10;
          if (this_.type_case() == kPill) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                10, *this_._impl_.type_.pill_, this_._impl_.type_.pill_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:aim.TargetProfile)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TargetProfile::ByteSizeLong(const MessageLite& base) {
          const TargetProfile& this_ = static_cast<const TargetProfile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TargetProfile::ByteSizeLong() const {
          const TargetProfile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:aim.TargetProfile)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000007fu) {
            // float percent_chance = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 5;
            }
            // float target_radius = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 5;
            }
            // float target_radius_jitter = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += 5;
            }
            // float speed = 4;
            if (cached_has_bits & 0x00000008u) {
              total_size += 5;
            }
            // float speed_jitter = 5;
            if (cached_has_bits & 0x00000010u) {
              total_size += 5;
            }
            // float health_seconds = 6;
            if (cached_has_bits & 0x00000020u) {
              total_size += 5;
            }
            // float health_seconds_jitter = 7;
            if (cached_has_bits & 0x00000040u) {
              total_size += 5;
            }
          }
          switch (this_.type_case()) {
            // .aim.PillTargetDef pill = 10;
            case kPill: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.type_.pill_);
              break;
            }
            case TYPE_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TargetProfile::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TargetProfile*>(&to_msg);
  auto& from = static_cast<const TargetProfile&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:aim.TargetProfile)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.percent_chance_ = from._impl_.percent_chance_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.target_radius_ = from._impl_.target_radius_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.target_radius_jitter_ = from._impl_.target_radius_jitter_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.speed_ = from._impl_.speed_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.speed_jitter_ = from._impl_.speed_jitter_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.health_seconds_ = from._impl_.health_seconds_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.health_seconds_jitter_ = from._impl_.health_seconds_jitter_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_type();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kPill: {
        if (oneof_needs_init) {
          _this->_impl_.type_.pill_ =
              ::google::protobuf::Message::CopyConstruct<::aim::PillTargetDef>(arena, *from._impl_.type_.pill_);
        } else {
          _this->_impl_.type_.pill_->MergeFrom(from._internal_pill());
        }
        break;
      }
      case TYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TargetProfile::CopyFrom(const TargetProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aim.TargetProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TargetProfile::InternalSwap(TargetProfile* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TargetProfile, _impl_.health_seconds_jitter_)
      + sizeof(TargetProfile::_impl_.health_seconds_jitter_)
      - PROTOBUF_FIELD_OFFSET(TargetProfile, _impl_.percent_chance_)>(
          reinterpret_cast<char*>(&_impl_.percent_chance_),
          reinterpret_cast<char*>(&other->_impl_.percent_chance_));
  swap(_impl_.type_, other->_impl_.type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata TargetProfile::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace aim
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_scenario_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
