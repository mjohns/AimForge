// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: scenario.proto
// Protobuf C++ Version: 5.29.3

#include "scenario.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace aim {

inline constexpr SimpleRoom::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        height_{0},
        width_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SimpleRoom::SimpleRoom(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SimpleRoomDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SimpleRoomDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SimpleRoomDefaultTypeInternal() {}
  union {
    SimpleRoom _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SimpleRoomDefaultTypeInternal _SimpleRoom_default_instance_;

inline constexpr RegionLength::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : type_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR RegionLength::RegionLength(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegionLengthDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegionLengthDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegionLengthDefaultTypeInternal() {}
  union {
    RegionLength _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegionLengthDefaultTypeInternal _RegionLength_default_instance_;

inline constexpr CircularRoom::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        height_{0},
        radius_{0},
        width_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CircularRoom::CircularRoom(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CircularRoomDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CircularRoomDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CircularRoomDefaultTypeInternal() {}
  union {
    CircularRoom _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CircularRoomDefaultTypeInternal _CircularRoom_default_instance_;

inline constexpr Room::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_position_{nullptr},
        start_pitch_{0},
        start_yaw_{0},
        type_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Room::Room(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RoomDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoomDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoomDefaultTypeInternal() {}
  union {
    Room _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoomDefaultTypeInternal _Room_default_instance_;

inline constexpr RectangleTargetRegion::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        x_length_{nullptr},
        y_length_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RectangleTargetRegion::RectangleTargetRegion(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RectangleTargetRegionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RectangleTargetRegionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RectangleTargetRegionDefaultTypeInternal() {}
  union {
    RectangleTargetRegion _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RectangleTargetRegionDefaultTypeInternal _RectangleTargetRegion_default_instance_;

inline constexpr EllipseTargetRegion::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        x_diamter_{nullptr},
        y_diamter_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR EllipseTargetRegion::EllipseTargetRegion(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EllipseTargetRegionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EllipseTargetRegionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EllipseTargetRegionDefaultTypeInternal() {}
  union {
    EllipseTargetRegion _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EllipseTargetRegionDefaultTypeInternal _EllipseTargetRegion_default_instance_;

inline constexpr CenteringScenarioDef::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        start_position_{nullptr},
        end_position_{nullptr},
        target_width_{0},
        target_height_{0},
        speed_{0},
        show_start_and_end_{false} {}

template <typename>
PROTOBUF_CONSTEXPR CenteringScenarioDef::CenteringScenarioDef(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CenteringScenarioDefDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CenteringScenarioDefDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CenteringScenarioDefDefaultTypeInternal() {}
  union {
    CenteringScenarioDef _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CenteringScenarioDefDefaultTypeInternal _CenteringScenarioDef_default_instance_;

inline constexpr TargetRegion::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        x_offset_{nullptr},
        y_offset_{nullptr},
        percent_chance_{0},
        type_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR TargetRegion::TargetRegion(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TargetRegionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TargetRegionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TargetRegionDefaultTypeInternal() {}
  union {
    TargetRegion _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TargetRegionDefaultTypeInternal _TargetRegion_default_instance_;

inline constexpr TargetPlacementStrategy::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        regions_{},
        min_distance_{0},
        alternate_regions_{false},
        fixed_distance_from_last_target_{0},
        fixed_distance_jitter_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TargetPlacementStrategy::TargetPlacementStrategy(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TargetPlacementStrategyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TargetPlacementStrategyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TargetPlacementStrategyDefaultTypeInternal() {}
  union {
    TargetPlacementStrategy _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TargetPlacementStrategyDefaultTypeInternal _TargetPlacementStrategy_default_instance_;

inline constexpr StaticScenarioDef::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        target_placement_strategy_{nullptr},
        num_targets_{0},
        target_radius_{0},
        is_poke_ball_{false},
        remove_closest_target_on_miss_{false},
        newest_target_is_ghost_{false} {}

template <typename>
PROTOBUF_CONSTEXPR StaticScenarioDef::StaticScenarioDef(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StaticScenarioDefDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StaticScenarioDefDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StaticScenarioDefDefaultTypeInternal() {}
  union {
    StaticScenarioDef _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StaticScenarioDefDefaultTypeInternal _StaticScenarioDef_default_instance_;

inline constexpr ScenarioDef::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        scenario_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        display_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        room_{nullptr},
        duration_seconds_{0},
        type_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR ScenarioDef::ScenarioDef(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ScenarioDefDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScenarioDefDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScenarioDefDefaultTypeInternal() {}
  union {
    ScenarioDef _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScenarioDefDefaultTypeInternal _ScenarioDef_default_instance_;
}  // namespace aim
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_scenario_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_scenario_2eproto = nullptr;
const ::uint32_t
    TableStruct_scenario_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::aim::SimpleRoom, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::aim::SimpleRoom, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::aim::SimpleRoom, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::aim::SimpleRoom, _impl_.width_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::aim::CircularRoom, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::aim::CircularRoom, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::aim::CircularRoom, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::aim::CircularRoom, _impl_.radius_),
        PROTOBUF_FIELD_OFFSET(::aim::CircularRoom, _impl_.width_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::aim::Room, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::aim::Room, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::aim::Room, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::aim::Room, _impl_.camera_position_),
        PROTOBUF_FIELD_OFFSET(::aim::Room, _impl_.start_pitch_),
        PROTOBUF_FIELD_OFFSET(::aim::Room, _impl_.start_yaw_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::aim::Room, _impl_.type_),
        0,
        1,
        2,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::aim::RegionLength, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::aim::RegionLength, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::aim::RegionLength, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::aim::TargetRegion, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::aim::TargetRegion, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::aim::TargetRegion, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::aim::TargetRegion, _impl_.percent_chance_),
        PROTOBUF_FIELD_OFFSET(::aim::TargetRegion, _impl_.x_offset_),
        PROTOBUF_FIELD_OFFSET(::aim::TargetRegion, _impl_.y_offset_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::aim::TargetRegion, _impl_.type_),
        2,
        0,
        1,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::aim::RectangleTargetRegion, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::aim::RectangleTargetRegion, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::aim::RectangleTargetRegion, _impl_.x_length_),
        PROTOBUF_FIELD_OFFSET(::aim::RectangleTargetRegion, _impl_.y_length_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::aim::EllipseTargetRegion, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::aim::EllipseTargetRegion, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::aim::EllipseTargetRegion, _impl_.x_diamter_),
        PROTOBUF_FIELD_OFFSET(::aim::EllipseTargetRegion, _impl_.y_diamter_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::aim::TargetPlacementStrategy, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::aim::TargetPlacementStrategy, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::aim::TargetPlacementStrategy, _impl_.regions_),
        PROTOBUF_FIELD_OFFSET(::aim::TargetPlacementStrategy, _impl_.min_distance_),
        PROTOBUF_FIELD_OFFSET(::aim::TargetPlacementStrategy, _impl_.alternate_regions_),
        PROTOBUF_FIELD_OFFSET(::aim::TargetPlacementStrategy, _impl_.fixed_distance_from_last_target_),
        PROTOBUF_FIELD_OFFSET(::aim::TargetPlacementStrategy, _impl_.fixed_distance_jitter_),
        ~0u,
        0,
        1,
        2,
        3,
        PROTOBUF_FIELD_OFFSET(::aim::ScenarioDef, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::aim::ScenarioDef, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::aim::ScenarioDef, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::aim::ScenarioDef, _impl_.scenario_id_),
        PROTOBUF_FIELD_OFFSET(::aim::ScenarioDef, _impl_.duration_seconds_),
        PROTOBUF_FIELD_OFFSET(::aim::ScenarioDef, _impl_.room_),
        PROTOBUF_FIELD_OFFSET(::aim::ScenarioDef, _impl_.display_name_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::aim::ScenarioDef, _impl_.type_),
        0,
        3,
        2,
        1,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::aim::StaticScenarioDef, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::aim::StaticScenarioDef, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::aim::StaticScenarioDef, _impl_.num_targets_),
        PROTOBUF_FIELD_OFFSET(::aim::StaticScenarioDef, _impl_.target_radius_),
        PROTOBUF_FIELD_OFFSET(::aim::StaticScenarioDef, _impl_.is_poke_ball_),
        PROTOBUF_FIELD_OFFSET(::aim::StaticScenarioDef, _impl_.remove_closest_target_on_miss_),
        PROTOBUF_FIELD_OFFSET(::aim::StaticScenarioDef, _impl_.target_placement_strategy_),
        PROTOBUF_FIELD_OFFSET(::aim::StaticScenarioDef, _impl_.newest_target_is_ghost_),
        1,
        2,
        3,
        4,
        0,
        5,
        PROTOBUF_FIELD_OFFSET(::aim::CenteringScenarioDef, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::aim::CenteringScenarioDef, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::aim::CenteringScenarioDef, _impl_.target_width_),
        PROTOBUF_FIELD_OFFSET(::aim::CenteringScenarioDef, _impl_.target_height_),
        PROTOBUF_FIELD_OFFSET(::aim::CenteringScenarioDef, _impl_.speed_),
        PROTOBUF_FIELD_OFFSET(::aim::CenteringScenarioDef, _impl_.start_position_),
        PROTOBUF_FIELD_OFFSET(::aim::CenteringScenarioDef, _impl_.end_position_),
        PROTOBUF_FIELD_OFFSET(::aim::CenteringScenarioDef, _impl_.show_start_and_end_),
        2,
        3,
        4,
        0,
        1,
        5,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::aim::SimpleRoom)},
        {12, 23, -1, sizeof(::aim::CircularRoom)},
        {26, 40, -1, sizeof(::aim::Room)},
        {45, -1, -1, sizeof(::aim::RegionLength)},
        {57, 71, -1, sizeof(::aim::TargetRegion)},
        {76, 86, -1, sizeof(::aim::RectangleTargetRegion)},
        {88, 98, -1, sizeof(::aim::EllipseTargetRegion)},
        {100, 113, -1, sizeof(::aim::TargetPlacementStrategy)},
        {118, 133, -1, sizeof(::aim::ScenarioDef)},
        {139, 153, -1, sizeof(::aim::StaticScenarioDef)},
        {159, 173, -1, sizeof(::aim::CenteringScenarioDef)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::aim::_SimpleRoom_default_instance_._instance,
    &::aim::_CircularRoom_default_instance_._instance,
    &::aim::_Room_default_instance_._instance,
    &::aim::_RegionLength_default_instance_._instance,
    &::aim::_TargetRegion_default_instance_._instance,
    &::aim::_RectangleTargetRegion_default_instance_._instance,
    &::aim::_EllipseTargetRegion_default_instance_._instance,
    &::aim::_TargetPlacementStrategy_default_instance_._instance,
    &::aim::_ScenarioDef_default_instance_._instance,
    &::aim::_StaticScenarioDef_default_instance_._instance,
    &::aim::_CenteringScenarioDef_default_instance_._instance,
};
const char descriptor_table_protodef_scenario_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\016scenario.proto\022\003aim\032\014common.proto\"+\n\nS"
    "impleRoom\022\016\n\006height\030\001 \001(\002\022\r\n\005width\030\002 \001(\002"
    "\"=\n\014CircularRoom\022\016\n\006height\030\001 \001(\002\022\016\n\006radi"
    "us\030\002 \001(\002\022\r\n\005width\030\003 \001(\002\"\264\001\n\004Room\022(\n\017came"
    "ra_position\030\001 \001(\0132\017.aim.StoredVec3\022\023\n\013st"
    "art_pitch\030\002 \001(\002\022\021\n\tstart_yaw\030\003 \001(\002\022&\n\013si"
    "mple_room\030\004 \001(\0132\017.aim.SimpleRoomH\000\022*\n\rci"
    "rcular_room\030\005 \001(\0132\021.aim.CircularRoomH\000B\006"
    "\n\004type\"f\n\014RegionLength\022\031\n\017x_percent_valu"
    "e\030\001 \001(\002H\000\022\031\n\017y_percent_value\030\002 \001(\002H\000\022\030\n\016"
    "absolute_value\030\003 \001(\002H\000B\006\n\004type\"\326\001\n\014Targe"
    "tRegion\022\026\n\016percent_chance\030\001 \001(\002\022#\n\010x_off"
    "set\030\002 \001(\0132\021.aim.RegionLength\022#\n\010y_offset"
    "\030\003 \001(\0132\021.aim.RegionLength\022/\n\trectangle\030\004"
    " \001(\0132\032.aim.RectangleTargetRegionH\000\022+\n\007el"
    "lipse\030\005 \001(\0132\030.aim.EllipseTargetRegionH\000B"
    "\006\n\004type\"a\n\025RectangleTargetRegion\022#\n\010x_le"
    "ngth\030\001 \001(\0132\021.aim.RegionLength\022#\n\010y_lengt"
    "h\030\002 \001(\0132\021.aim.RegionLength\"a\n\023EllipseTar"
    "getRegion\022$\n\tx_diamter\030\001 \001(\0132\021.aim.Regio"
    "nLength\022$\n\ty_diamter\030\002 \001(\0132\021.aim.RegionL"
    "ength\"\266\001\n\027TargetPlacementStrategy\022\"\n\007reg"
    "ions\030\001 \003(\0132\021.aim.TargetRegion\022\024\n\014min_dis"
    "tance\030\002 \001(\002\022\031\n\021alternate_regions\030\003 \001(\010\022\'"
    "\n\037fixed_distance_from_last_target\030\004 \001(\002\022"
    "\035\n\025fixed_distance_jitter\030\005 \001(\002\"\325\001\n\013Scena"
    "rioDef\022\023\n\013scenario_id\030\001 \001(\t\022\030\n\020duration_"
    "seconds\030\002 \001(\002\022\027\n\004room\030\003 \001(\0132\t.aim.Room\022\024"
    "\n\014display_name\030\004 \001(\t\022,\n\nstatic_def\030\005 \001(\013"
    "2\026.aim.StaticScenarioDefH\000\0222\n\rcentering_"
    "def\030\006 \001(\0132\031.aim.CenteringScenarioDefH\000B\006"
    "\n\004type\"\335\001\n\021StaticScenarioDef\022\023\n\013num_targ"
    "ets\030\001 \001(\005\022\025\n\rtarget_radius\030\002 \001(\002\022\024\n\014is_p"
    "oke_ball\030\003 \001(\010\022%\n\035remove_closest_target_"
    "on_miss\030\004 \001(\010\022\?\n\031target_placement_strate"
    "gy\030\005 \001(\0132\034.aim.TargetPlacementStrategy\022\036"
    "\n\026newest_target_is_ghost\030\006 \001(\010\"\276\001\n\024Cente"
    "ringScenarioDef\022\024\n\014target_width\030\001 \001(\002\022\025\n"
    "\rtarget_height\030\002 \001(\002\022\r\n\005speed\030\003 \001(\002\022\'\n\016s"
    "tart_position\030\004 \001(\0132\017.aim.StoredVec3\022%\n\014"
    "end_position\030\005 \001(\0132\017.aim.StoredVec3\022\032\n\022s"
    "how_start_and_end\030\006 \001(\010b\010editionsp\350\007"
};
static const ::_pbi::DescriptorTable* const descriptor_table_scenario_2eproto_deps[1] =
    {
        &::descriptor_table_common_2eproto,
};
static ::absl::once_flag descriptor_table_scenario_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_scenario_2eproto = {
    false,
    false,
    1676,
    descriptor_table_protodef_scenario_2eproto,
    "scenario.proto",
    &descriptor_table_scenario_2eproto_once,
    descriptor_table_scenario_2eproto_deps,
    1,
    11,
    schemas,
    file_default_instances,
    TableStruct_scenario_2eproto::offsets,
    file_level_enum_descriptors_scenario_2eproto,
    file_level_service_descriptors_scenario_2eproto,
};
namespace aim {
// ===================================================================

class SimpleRoom::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SimpleRoom>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SimpleRoom, _impl_._has_bits_);
};

SimpleRoom::SimpleRoom(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:aim.SimpleRoom)
}
SimpleRoom::SimpleRoom(
    ::google::protobuf::Arena* arena, const SimpleRoom& from)
    : SimpleRoom(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SimpleRoom::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SimpleRoom::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, height_),
           0,
           offsetof(Impl_, width_) -
               offsetof(Impl_, height_) +
               sizeof(Impl_::width_));
}
SimpleRoom::~SimpleRoom() {
  // @@protoc_insertion_point(destructor:aim.SimpleRoom)
  SharedDtor(*this);
}
inline void SimpleRoom::SharedDtor(MessageLite& self) {
  SimpleRoom& this_ = static_cast<SimpleRoom&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SimpleRoom::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SimpleRoom(arena);
}
constexpr auto SimpleRoom::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SimpleRoom),
                                            alignof(SimpleRoom));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SimpleRoom::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SimpleRoom_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SimpleRoom::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SimpleRoom>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SimpleRoom::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SimpleRoom>(), &SimpleRoom::ByteSizeLong,
            &SimpleRoom::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SimpleRoom, _impl_._cached_size_),
        false,
    },
    &SimpleRoom::kDescriptorMethods,
    &descriptor_table_scenario_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SimpleRoom::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> SimpleRoom::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SimpleRoom, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::aim::SimpleRoom>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // float width = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(SimpleRoom, _impl_.width_)}},
    // float height = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(SimpleRoom, _impl_.height_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float height = 1;
    {PROTOBUF_FIELD_OFFSET(SimpleRoom, _impl_.height_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float width = 2;
    {PROTOBUF_FIELD_OFFSET(SimpleRoom, _impl_.width_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SimpleRoom::Clear() {
// @@protoc_insertion_point(message_clear_start:aim.SimpleRoom)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.height_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.width_) -
        reinterpret_cast<char*>(&_impl_.height_)) + sizeof(_impl_.width_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SimpleRoom::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SimpleRoom& this_ = static_cast<const SimpleRoom&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SimpleRoom::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SimpleRoom& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:aim.SimpleRoom)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // float height = 1;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_height(), target);
          }

          // float width = 2;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_width(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:aim.SimpleRoom)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SimpleRoom::ByteSizeLong(const MessageLite& base) {
          const SimpleRoom& this_ = static_cast<const SimpleRoom&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SimpleRoom::ByteSizeLong() const {
          const SimpleRoom& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:aim.SimpleRoom)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // float height = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 5;
            }
            // float width = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SimpleRoom::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SimpleRoom*>(&to_msg);
  auto& from = static_cast<const SimpleRoom&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:aim.SimpleRoom)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.height_ = from._impl_.height_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.width_ = from._impl_.width_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SimpleRoom::CopyFrom(const SimpleRoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aim.SimpleRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SimpleRoom::InternalSwap(SimpleRoom* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SimpleRoom, _impl_.width_)
      + sizeof(SimpleRoom::_impl_.width_)
      - PROTOBUF_FIELD_OFFSET(SimpleRoom, _impl_.height_)>(
          reinterpret_cast<char*>(&_impl_.height_),
          reinterpret_cast<char*>(&other->_impl_.height_));
}

::google::protobuf::Metadata SimpleRoom::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CircularRoom::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CircularRoom>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CircularRoom, _impl_._has_bits_);
};

CircularRoom::CircularRoom(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:aim.CircularRoom)
}
CircularRoom::CircularRoom(
    ::google::protobuf::Arena* arena, const CircularRoom& from)
    : CircularRoom(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CircularRoom::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CircularRoom::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, height_),
           0,
           offsetof(Impl_, width_) -
               offsetof(Impl_, height_) +
               sizeof(Impl_::width_));
}
CircularRoom::~CircularRoom() {
  // @@protoc_insertion_point(destructor:aim.CircularRoom)
  SharedDtor(*this);
}
inline void CircularRoom::SharedDtor(MessageLite& self) {
  CircularRoom& this_ = static_cast<CircularRoom&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* CircularRoom::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CircularRoom(arena);
}
constexpr auto CircularRoom::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CircularRoom),
                                            alignof(CircularRoom));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CircularRoom::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CircularRoom_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CircularRoom::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CircularRoom>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CircularRoom::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CircularRoom>(), &CircularRoom::ByteSizeLong,
            &CircularRoom::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CircularRoom, _impl_._cached_size_),
        false,
    },
    &CircularRoom::kDescriptorMethods,
    &descriptor_table_scenario_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CircularRoom::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> CircularRoom::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CircularRoom, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::aim::CircularRoom>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float height = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(CircularRoom, _impl_.height_)}},
    // float radius = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(CircularRoom, _impl_.radius_)}},
    // float width = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(CircularRoom, _impl_.width_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float height = 1;
    {PROTOBUF_FIELD_OFFSET(CircularRoom, _impl_.height_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float radius = 2;
    {PROTOBUF_FIELD_OFFSET(CircularRoom, _impl_.radius_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float width = 3;
    {PROTOBUF_FIELD_OFFSET(CircularRoom, _impl_.width_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void CircularRoom::Clear() {
// @@protoc_insertion_point(message_clear_start:aim.CircularRoom)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.height_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.width_) -
        reinterpret_cast<char*>(&_impl_.height_)) + sizeof(_impl_.width_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CircularRoom::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CircularRoom& this_ = static_cast<const CircularRoom&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CircularRoom::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CircularRoom& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:aim.CircularRoom)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // float height = 1;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_height(), target);
          }

          // float radius = 2;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_radius(), target);
          }

          // float width = 3;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_width(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:aim.CircularRoom)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CircularRoom::ByteSizeLong(const MessageLite& base) {
          const CircularRoom& this_ = static_cast<const CircularRoom&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CircularRoom::ByteSizeLong() const {
          const CircularRoom& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:aim.CircularRoom)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // float height = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 5;
            }
            // float radius = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 5;
            }
            // float width = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CircularRoom::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CircularRoom*>(&to_msg);
  auto& from = static_cast<const CircularRoom&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:aim.CircularRoom)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.height_ = from._impl_.height_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.radius_ = from._impl_.radius_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.width_ = from._impl_.width_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CircularRoom::CopyFrom(const CircularRoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aim.CircularRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CircularRoom::InternalSwap(CircularRoom* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CircularRoom, _impl_.width_)
      + sizeof(CircularRoom::_impl_.width_)
      - PROTOBUF_FIELD_OFFSET(CircularRoom, _impl_.height_)>(
          reinterpret_cast<char*>(&_impl_.height_),
          reinterpret_cast<char*>(&other->_impl_.height_));
}

::google::protobuf::Metadata CircularRoom::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Room::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Room>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Room, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::aim::Room, _impl_._oneof_case_);
};

void Room::clear_camera_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_position_ != nullptr) _impl_.camera_position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Room::set_allocated_simple_room(::aim::SimpleRoom* simple_room) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (simple_room) {
    ::google::protobuf::Arena* submessage_arena = simple_room->GetArena();
    if (message_arena != submessage_arena) {
      simple_room = ::google::protobuf::internal::GetOwnedMessage(message_arena, simple_room, submessage_arena);
    }
    set_has_simple_room();
    _impl_.type_.simple_room_ = simple_room;
  }
  // @@protoc_insertion_point(field_set_allocated:aim.Room.simple_room)
}
void Room::set_allocated_circular_room(::aim::CircularRoom* circular_room) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (circular_room) {
    ::google::protobuf::Arena* submessage_arena = circular_room->GetArena();
    if (message_arena != submessage_arena) {
      circular_room = ::google::protobuf::internal::GetOwnedMessage(message_arena, circular_room, submessage_arena);
    }
    set_has_circular_room();
    _impl_.type_.circular_room_ = circular_room;
  }
  // @@protoc_insertion_point(field_set_allocated:aim.Room.circular_room)
}
Room::Room(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:aim.Room)
}
inline PROTOBUF_NDEBUG_INLINE Room::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::aim::Room& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        type_{},
        _oneof_case_{from._oneof_case_[0]} {}

Room::Room(
    ::google::protobuf::Arena* arena,
    const Room& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Room* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_position_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::aim::StoredVec3>(
                              arena, *from._impl_.camera_position_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, start_pitch_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, start_pitch_),
           offsetof(Impl_, start_yaw_) -
               offsetof(Impl_, start_pitch_) +
               sizeof(Impl_::start_yaw_));
  switch (type_case()) {
    case TYPE_NOT_SET:
      break;
      case kSimpleRoom:
        _impl_.type_.simple_room_ = ::google::protobuf::Message::CopyConstruct<::aim::SimpleRoom>(arena, *from._impl_.type_.simple_room_);
        break;
      case kCircularRoom:
        _impl_.type_.circular_room_ = ::google::protobuf::Message::CopyConstruct<::aim::CircularRoom>(arena, *from._impl_.type_.circular_room_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:aim.Room)
}
inline PROTOBUF_NDEBUG_INLINE Room::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        type_{},
        _oneof_case_{} {}

inline void Room::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, camera_position_),
           0,
           offsetof(Impl_, start_yaw_) -
               offsetof(Impl_, camera_position_) +
               sizeof(Impl_::start_yaw_));
}
Room::~Room() {
  // @@protoc_insertion_point(destructor:aim.Room)
  SharedDtor(*this);
}
inline void Room::SharedDtor(MessageLite& self) {
  Room& this_ = static_cast<Room&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.camera_position_;
  if (this_.has_type()) {
    this_.clear_type();
  }
  this_._impl_.~Impl_();
}

void Room::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:aim.Room)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (type_case()) {
    case kSimpleRoom: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.simple_room_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.simple_room_);
      }
      break;
    }
    case kCircularRoom: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.circular_room_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.circular_room_);
      }
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = TYPE_NOT_SET;
}


inline void* Room::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Room(arena);
}
constexpr auto Room::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Room),
                                            alignof(Room));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Room::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Room_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Room::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Room>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Room::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Room>(), &Room::ByteSizeLong,
            &Room::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Room, _impl_._cached_size_),
        false,
    },
    &Room::kDescriptorMethods,
    &descriptor_table_scenario_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Room::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 5, 3, 0, 2> Room::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Room, _impl_._has_bits_),
    0, // no _extensions_
    5, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::aim::Room>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .aim.StoredVec3 camera_position = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Room, _impl_.camera_position_)}},
    // float start_pitch = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(Room, _impl_.start_pitch_)}},
    // float start_yaw = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(Room, _impl_.start_yaw_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .aim.StoredVec3 camera_position = 1;
    {PROTOBUF_FIELD_OFFSET(Room, _impl_.camera_position_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // float start_pitch = 2;
    {PROTOBUF_FIELD_OFFSET(Room, _impl_.start_pitch_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float start_yaw = 3;
    {PROTOBUF_FIELD_OFFSET(Room, _impl_.start_yaw_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // .aim.SimpleRoom simple_room = 4;
    {PROTOBUF_FIELD_OFFSET(Room, _impl_.type_.simple_room_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .aim.CircularRoom circular_room = 5;
    {PROTOBUF_FIELD_OFFSET(Room, _impl_.type_.circular_room_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::aim::StoredVec3>()},
    {::_pbi::TcParser::GetTable<::aim::SimpleRoom>()},
    {::_pbi::TcParser::GetTable<::aim::CircularRoom>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Room::Clear() {
// @@protoc_insertion_point(message_clear_start:aim.Room)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_position_ != nullptr);
    _impl_.camera_position_->Clear();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.start_pitch_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.start_yaw_) -
        reinterpret_cast<char*>(&_impl_.start_pitch_)) + sizeof(_impl_.start_yaw_));
  }
  clear_type();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Room::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Room& this_ = static_cast<const Room&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Room::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Room& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:aim.Room)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .aim.StoredVec3 camera_position = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.camera_position_, this_._impl_.camera_position_->GetCachedSize(), target,
                stream);
          }

          // float start_pitch = 2;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_start_pitch(), target);
          }

          // float start_yaw = 3;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_start_yaw(), target);
          }

          switch (this_.type_case()) {
            case kSimpleRoom: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  4, *this_._impl_.type_.simple_room_, this_._impl_.type_.simple_room_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kCircularRoom: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  5, *this_._impl_.type_.circular_room_, this_._impl_.type_.circular_room_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:aim.Room)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Room::ByteSizeLong(const MessageLite& base) {
          const Room& this_ = static_cast<const Room&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Room::ByteSizeLong() const {
          const Room& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:aim.Room)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // .aim.StoredVec3 camera_position = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.camera_position_);
            }
            // float start_pitch = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 5;
            }
            // float start_yaw = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += 5;
            }
          }
          switch (this_.type_case()) {
            // .aim.SimpleRoom simple_room = 4;
            case kSimpleRoom: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.type_.simple_room_);
              break;
            }
            // .aim.CircularRoom circular_room = 5;
            case kCircularRoom: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.type_.circular_room_);
              break;
            }
            case TYPE_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Room::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Room*>(&to_msg);
  auto& from = static_cast<const Room&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:aim.Room)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.camera_position_ != nullptr);
      if (_this->_impl_.camera_position_ == nullptr) {
        _this->_impl_.camera_position_ =
            ::google::protobuf::Message::CopyConstruct<::aim::StoredVec3>(arena, *from._impl_.camera_position_);
      } else {
        _this->_impl_.camera_position_->MergeFrom(*from._impl_.camera_position_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.start_pitch_ = from._impl_.start_pitch_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.start_yaw_ = from._impl_.start_yaw_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_type();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kSimpleRoom: {
        if (oneof_needs_init) {
          _this->_impl_.type_.simple_room_ =
              ::google::protobuf::Message::CopyConstruct<::aim::SimpleRoom>(arena, *from._impl_.type_.simple_room_);
        } else {
          _this->_impl_.type_.simple_room_->MergeFrom(from._internal_simple_room());
        }
        break;
      }
      case kCircularRoom: {
        if (oneof_needs_init) {
          _this->_impl_.type_.circular_room_ =
              ::google::protobuf::Message::CopyConstruct<::aim::CircularRoom>(arena, *from._impl_.type_.circular_room_);
        } else {
          _this->_impl_.type_.circular_room_->MergeFrom(from._internal_circular_room());
        }
        break;
      }
      case TYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Room::CopyFrom(const Room& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aim.Room)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Room::InternalSwap(Room* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Room, _impl_.start_yaw_)
      + sizeof(Room::_impl_.start_yaw_)
      - PROTOBUF_FIELD_OFFSET(Room, _impl_.camera_position_)>(
          reinterpret_cast<char*>(&_impl_.camera_position_),
          reinterpret_cast<char*>(&other->_impl_.camera_position_));
  swap(_impl_.type_, other->_impl_.type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Room::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RegionLength::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::aim::RegionLength, _impl_._oneof_case_);
};

RegionLength::RegionLength(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:aim.RegionLength)
}
inline PROTOBUF_NDEBUG_INLINE RegionLength::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::aim::RegionLength& from_msg)
      : type_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

RegionLength::RegionLength(
    ::google::protobuf::Arena* arena,
    const RegionLength& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegionLength* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (type_case()) {
    case TYPE_NOT_SET:
      break;
      case kXPercentValue:
        _impl_.type_.x_percent_value_ = from._impl_.type_.x_percent_value_;
        break;
      case kYPercentValue:
        _impl_.type_.y_percent_value_ = from._impl_.type_.y_percent_value_;
        break;
      case kAbsoluteValue:
        _impl_.type_.absolute_value_ = from._impl_.type_.absolute_value_;
        break;
  }

  // @@protoc_insertion_point(copy_constructor:aim.RegionLength)
}
inline PROTOBUF_NDEBUG_INLINE RegionLength::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : type_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void RegionLength::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RegionLength::~RegionLength() {
  // @@protoc_insertion_point(destructor:aim.RegionLength)
  SharedDtor(*this);
}
inline void RegionLength::SharedDtor(MessageLite& self) {
  RegionLength& this_ = static_cast<RegionLength&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_type()) {
    this_.clear_type();
  }
  this_._impl_.~Impl_();
}

void RegionLength::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:aim.RegionLength)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (type_case()) {
    case kXPercentValue: {
      // No need to clear
      break;
    }
    case kYPercentValue: {
      // No need to clear
      break;
    }
    case kAbsoluteValue: {
      // No need to clear
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = TYPE_NOT_SET;
}


inline void* RegionLength::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RegionLength(arena);
}
constexpr auto RegionLength::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RegionLength),
                                            alignof(RegionLength));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RegionLength::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RegionLength_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RegionLength::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RegionLength>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RegionLength::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RegionLength>(), &RegionLength::ByteSizeLong,
            &RegionLength::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RegionLength, _impl_._cached_size_),
        false,
    },
    &RegionLength::kDescriptorMethods,
    &descriptor_table_scenario_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RegionLength::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 0, 0, 2> RegionLength::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::aim::RegionLength>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // float x_percent_value = 1;
    {PROTOBUF_FIELD_OFFSET(RegionLength, _impl_.type_.x_percent_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kFloat)},
    // float y_percent_value = 2;
    {PROTOBUF_FIELD_OFFSET(RegionLength, _impl_.type_.y_percent_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kFloat)},
    // float absolute_value = 3;
    {PROTOBUF_FIELD_OFFSET(RegionLength, _impl_.type_.absolute_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void RegionLength::Clear() {
// @@protoc_insertion_point(message_clear_start:aim.RegionLength)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_type();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RegionLength::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RegionLength& this_ = static_cast<const RegionLength&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RegionLength::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RegionLength& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:aim.RegionLength)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.type_case()) {
            case kXPercentValue: {
              target = stream->EnsureSpace(target);
              target = ::_pbi::WireFormatLite::WriteFloatToArray(
                  1, this_._internal_x_percent_value(), target);
              break;
            }
            case kYPercentValue: {
              target = stream->EnsureSpace(target);
              target = ::_pbi::WireFormatLite::WriteFloatToArray(
                  2, this_._internal_y_percent_value(), target);
              break;
            }
            case kAbsoluteValue: {
              target = stream->EnsureSpace(target);
              target = ::_pbi::WireFormatLite::WriteFloatToArray(
                  3, this_._internal_absolute_value(), target);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:aim.RegionLength)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RegionLength::ByteSizeLong(const MessageLite& base) {
          const RegionLength& this_ = static_cast<const RegionLength&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RegionLength::ByteSizeLong() const {
          const RegionLength& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:aim.RegionLength)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.type_case()) {
            // float x_percent_value = 1;
            case kXPercentValue: {
              total_size += 5;
              break;
            }
            // float y_percent_value = 2;
            case kYPercentValue: {
              total_size += 5;
              break;
            }
            // float absolute_value = 3;
            case kAbsoluteValue: {
              total_size += 5;
              break;
            }
            case TYPE_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RegionLength::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegionLength*>(&to_msg);
  auto& from = static_cast<const RegionLength&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:aim.RegionLength)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_type();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kXPercentValue: {
        _this->_impl_.type_.x_percent_value_ = from._impl_.type_.x_percent_value_;
        break;
      }
      case kYPercentValue: {
        _this->_impl_.type_.y_percent_value_ = from._impl_.type_.y_percent_value_;
        break;
      }
      case kAbsoluteValue: {
        _this->_impl_.type_.absolute_value_ = from._impl_.type_.absolute_value_;
        break;
      }
      case TYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegionLength::CopyFrom(const RegionLength& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aim.RegionLength)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegionLength::InternalSwap(RegionLength* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.type_, other->_impl_.type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata RegionLength::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TargetRegion::_Internal {
 public:
  using HasBits =
      decltype(std::declval<TargetRegion>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TargetRegion, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::aim::TargetRegion, _impl_._oneof_case_);
};

void TargetRegion::set_allocated_rectangle(::aim::RectangleTargetRegion* rectangle) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (rectangle) {
    ::google::protobuf::Arena* submessage_arena = rectangle->GetArena();
    if (message_arena != submessage_arena) {
      rectangle = ::google::protobuf::internal::GetOwnedMessage(message_arena, rectangle, submessage_arena);
    }
    set_has_rectangle();
    _impl_.type_.rectangle_ = rectangle;
  }
  // @@protoc_insertion_point(field_set_allocated:aim.TargetRegion.rectangle)
}
void TargetRegion::set_allocated_ellipse(::aim::EllipseTargetRegion* ellipse) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (ellipse) {
    ::google::protobuf::Arena* submessage_arena = ellipse->GetArena();
    if (message_arena != submessage_arena) {
      ellipse = ::google::protobuf::internal::GetOwnedMessage(message_arena, ellipse, submessage_arena);
    }
    set_has_ellipse();
    _impl_.type_.ellipse_ = ellipse;
  }
  // @@protoc_insertion_point(field_set_allocated:aim.TargetRegion.ellipse)
}
TargetRegion::TargetRegion(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:aim.TargetRegion)
}
inline PROTOBUF_NDEBUG_INLINE TargetRegion::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::aim::TargetRegion& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        type_{},
        _oneof_case_{from._oneof_case_[0]} {}

TargetRegion::TargetRegion(
    ::google::protobuf::Arena* arena,
    const TargetRegion& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TargetRegion* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.x_offset_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::aim::RegionLength>(
                              arena, *from._impl_.x_offset_)
                        : nullptr;
  _impl_.y_offset_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::aim::RegionLength>(
                              arena, *from._impl_.y_offset_)
                        : nullptr;
  _impl_.percent_chance_ = from._impl_.percent_chance_;
  switch (type_case()) {
    case TYPE_NOT_SET:
      break;
      case kRectangle:
        _impl_.type_.rectangle_ = ::google::protobuf::Message::CopyConstruct<::aim::RectangleTargetRegion>(arena, *from._impl_.type_.rectangle_);
        break;
      case kEllipse:
        _impl_.type_.ellipse_ = ::google::protobuf::Message::CopyConstruct<::aim::EllipseTargetRegion>(arena, *from._impl_.type_.ellipse_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:aim.TargetRegion)
}
inline PROTOBUF_NDEBUG_INLINE TargetRegion::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        type_{},
        _oneof_case_{} {}

inline void TargetRegion::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_offset_),
           0,
           offsetof(Impl_, percent_chance_) -
               offsetof(Impl_, x_offset_) +
               sizeof(Impl_::percent_chance_));
}
TargetRegion::~TargetRegion() {
  // @@protoc_insertion_point(destructor:aim.TargetRegion)
  SharedDtor(*this);
}
inline void TargetRegion::SharedDtor(MessageLite& self) {
  TargetRegion& this_ = static_cast<TargetRegion&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.x_offset_;
  delete this_._impl_.y_offset_;
  if (this_.has_type()) {
    this_.clear_type();
  }
  this_._impl_.~Impl_();
}

void TargetRegion::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:aim.TargetRegion)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (type_case()) {
    case kRectangle: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.rectangle_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.rectangle_);
      }
      break;
    }
    case kEllipse: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.ellipse_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.ellipse_);
      }
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = TYPE_NOT_SET;
}


inline void* TargetRegion::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TargetRegion(arena);
}
constexpr auto TargetRegion::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TargetRegion),
                                            alignof(TargetRegion));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TargetRegion::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TargetRegion_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TargetRegion::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TargetRegion>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TargetRegion::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TargetRegion>(), &TargetRegion::ByteSizeLong,
            &TargetRegion::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TargetRegion, _impl_._cached_size_),
        false,
    },
    &TargetRegion::kDescriptorMethods,
    &descriptor_table_scenario_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TargetRegion::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 5, 4, 0, 2> TargetRegion::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TargetRegion, _impl_._has_bits_),
    0, // no _extensions_
    5, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::aim::TargetRegion>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float percent_chance = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 2, 0, PROTOBUF_FIELD_OFFSET(TargetRegion, _impl_.percent_chance_)}},
    // .aim.RegionLength x_offset = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(TargetRegion, _impl_.x_offset_)}},
    // .aim.RegionLength y_offset = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(TargetRegion, _impl_.y_offset_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float percent_chance = 1;
    {PROTOBUF_FIELD_OFFSET(TargetRegion, _impl_.percent_chance_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // .aim.RegionLength x_offset = 2;
    {PROTOBUF_FIELD_OFFSET(TargetRegion, _impl_.x_offset_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .aim.RegionLength y_offset = 3;
    {PROTOBUF_FIELD_OFFSET(TargetRegion, _impl_.y_offset_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .aim.RectangleTargetRegion rectangle = 4;
    {PROTOBUF_FIELD_OFFSET(TargetRegion, _impl_.type_.rectangle_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .aim.EllipseTargetRegion ellipse = 5;
    {PROTOBUF_FIELD_OFFSET(TargetRegion, _impl_.type_.ellipse_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::aim::RegionLength>()},
    {::_pbi::TcParser::GetTable<::aim::RegionLength>()},
    {::_pbi::TcParser::GetTable<::aim::RectangleTargetRegion>()},
    {::_pbi::TcParser::GetTable<::aim::EllipseTargetRegion>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void TargetRegion::Clear() {
// @@protoc_insertion_point(message_clear_start:aim.TargetRegion)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.x_offset_ != nullptr);
      _impl_.x_offset_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.y_offset_ != nullptr);
      _impl_.y_offset_->Clear();
    }
  }
  _impl_.percent_chance_ = 0;
  clear_type();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TargetRegion::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TargetRegion& this_ = static_cast<const TargetRegion&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TargetRegion::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TargetRegion& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:aim.TargetRegion)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // float percent_chance = 1;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_percent_chance(), target);
          }

          // .aim.RegionLength x_offset = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.x_offset_, this_._impl_.x_offset_->GetCachedSize(), target,
                stream);
          }

          // .aim.RegionLength y_offset = 3;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.y_offset_, this_._impl_.y_offset_->GetCachedSize(), target,
                stream);
          }

          switch (this_.type_case()) {
            case kRectangle: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  4, *this_._impl_.type_.rectangle_, this_._impl_.type_.rectangle_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kEllipse: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  5, *this_._impl_.type_.ellipse_, this_._impl_.type_.ellipse_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:aim.TargetRegion)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TargetRegion::ByteSizeLong(const MessageLite& base) {
          const TargetRegion& this_ = static_cast<const TargetRegion&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TargetRegion::ByteSizeLong() const {
          const TargetRegion& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:aim.TargetRegion)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // .aim.RegionLength x_offset = 2;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.x_offset_);
            }
            // .aim.RegionLength y_offset = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.y_offset_);
            }
            // float percent_chance = 1;
            if (cached_has_bits & 0x00000004u) {
              total_size += 5;
            }
          }
          switch (this_.type_case()) {
            // .aim.RectangleTargetRegion rectangle = 4;
            case kRectangle: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.type_.rectangle_);
              break;
            }
            // .aim.EllipseTargetRegion ellipse = 5;
            case kEllipse: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.type_.ellipse_);
              break;
            }
            case TYPE_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TargetRegion::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TargetRegion*>(&to_msg);
  auto& from = static_cast<const TargetRegion&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:aim.TargetRegion)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.x_offset_ != nullptr);
      if (_this->_impl_.x_offset_ == nullptr) {
        _this->_impl_.x_offset_ =
            ::google::protobuf::Message::CopyConstruct<::aim::RegionLength>(arena, *from._impl_.x_offset_);
      } else {
        _this->_impl_.x_offset_->MergeFrom(*from._impl_.x_offset_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.y_offset_ != nullptr);
      if (_this->_impl_.y_offset_ == nullptr) {
        _this->_impl_.y_offset_ =
            ::google::protobuf::Message::CopyConstruct<::aim::RegionLength>(arena, *from._impl_.y_offset_);
      } else {
        _this->_impl_.y_offset_->MergeFrom(*from._impl_.y_offset_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.percent_chance_ = from._impl_.percent_chance_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_type();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kRectangle: {
        if (oneof_needs_init) {
          _this->_impl_.type_.rectangle_ =
              ::google::protobuf::Message::CopyConstruct<::aim::RectangleTargetRegion>(arena, *from._impl_.type_.rectangle_);
        } else {
          _this->_impl_.type_.rectangle_->MergeFrom(from._internal_rectangle());
        }
        break;
      }
      case kEllipse: {
        if (oneof_needs_init) {
          _this->_impl_.type_.ellipse_ =
              ::google::protobuf::Message::CopyConstruct<::aim::EllipseTargetRegion>(arena, *from._impl_.type_.ellipse_);
        } else {
          _this->_impl_.type_.ellipse_->MergeFrom(from._internal_ellipse());
        }
        break;
      }
      case TYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TargetRegion::CopyFrom(const TargetRegion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aim.TargetRegion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TargetRegion::InternalSwap(TargetRegion* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TargetRegion, _impl_.percent_chance_)
      + sizeof(TargetRegion::_impl_.percent_chance_)
      - PROTOBUF_FIELD_OFFSET(TargetRegion, _impl_.x_offset_)>(
          reinterpret_cast<char*>(&_impl_.x_offset_),
          reinterpret_cast<char*>(&other->_impl_.x_offset_));
  swap(_impl_.type_, other->_impl_.type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata TargetRegion::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RectangleTargetRegion::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RectangleTargetRegion>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RectangleTargetRegion, _impl_._has_bits_);
};

RectangleTargetRegion::RectangleTargetRegion(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:aim.RectangleTargetRegion)
}
inline PROTOBUF_NDEBUG_INLINE RectangleTargetRegion::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::aim::RectangleTargetRegion& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RectangleTargetRegion::RectangleTargetRegion(
    ::google::protobuf::Arena* arena,
    const RectangleTargetRegion& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RectangleTargetRegion* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.x_length_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::aim::RegionLength>(
                              arena, *from._impl_.x_length_)
                        : nullptr;
  _impl_.y_length_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::aim::RegionLength>(
                              arena, *from._impl_.y_length_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:aim.RectangleTargetRegion)
}
inline PROTOBUF_NDEBUG_INLINE RectangleTargetRegion::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RectangleTargetRegion::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_length_),
           0,
           offsetof(Impl_, y_length_) -
               offsetof(Impl_, x_length_) +
               sizeof(Impl_::y_length_));
}
RectangleTargetRegion::~RectangleTargetRegion() {
  // @@protoc_insertion_point(destructor:aim.RectangleTargetRegion)
  SharedDtor(*this);
}
inline void RectangleTargetRegion::SharedDtor(MessageLite& self) {
  RectangleTargetRegion& this_ = static_cast<RectangleTargetRegion&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.x_length_;
  delete this_._impl_.y_length_;
  this_._impl_.~Impl_();
}

inline void* RectangleTargetRegion::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RectangleTargetRegion(arena);
}
constexpr auto RectangleTargetRegion::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RectangleTargetRegion),
                                            alignof(RectangleTargetRegion));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RectangleTargetRegion::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RectangleTargetRegion_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RectangleTargetRegion::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RectangleTargetRegion>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RectangleTargetRegion::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RectangleTargetRegion>(), &RectangleTargetRegion::ByteSizeLong,
            &RectangleTargetRegion::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RectangleTargetRegion, _impl_._cached_size_),
        false,
    },
    &RectangleTargetRegion::kDescriptorMethods,
    &descriptor_table_scenario_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RectangleTargetRegion::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> RectangleTargetRegion::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RectangleTargetRegion, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::aim::RectangleTargetRegion>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .aim.RegionLength y_length = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(RectangleTargetRegion, _impl_.y_length_)}},
    // .aim.RegionLength x_length = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RectangleTargetRegion, _impl_.x_length_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .aim.RegionLength x_length = 1;
    {PROTOBUF_FIELD_OFFSET(RectangleTargetRegion, _impl_.x_length_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .aim.RegionLength y_length = 2;
    {PROTOBUF_FIELD_OFFSET(RectangleTargetRegion, _impl_.y_length_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::aim::RegionLength>()},
    {::_pbi::TcParser::GetTable<::aim::RegionLength>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void RectangleTargetRegion::Clear() {
// @@protoc_insertion_point(message_clear_start:aim.RectangleTargetRegion)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.x_length_ != nullptr);
      _impl_.x_length_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.y_length_ != nullptr);
      _impl_.y_length_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RectangleTargetRegion::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RectangleTargetRegion& this_ = static_cast<const RectangleTargetRegion&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RectangleTargetRegion::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RectangleTargetRegion& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:aim.RectangleTargetRegion)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .aim.RegionLength x_length = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.x_length_, this_._impl_.x_length_->GetCachedSize(), target,
                stream);
          }

          // .aim.RegionLength y_length = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.y_length_, this_._impl_.y_length_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:aim.RectangleTargetRegion)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RectangleTargetRegion::ByteSizeLong(const MessageLite& base) {
          const RectangleTargetRegion& this_ = static_cast<const RectangleTargetRegion&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RectangleTargetRegion::ByteSizeLong() const {
          const RectangleTargetRegion& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:aim.RectangleTargetRegion)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .aim.RegionLength x_length = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.x_length_);
            }
            // .aim.RegionLength y_length = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.y_length_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RectangleTargetRegion::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RectangleTargetRegion*>(&to_msg);
  auto& from = static_cast<const RectangleTargetRegion&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:aim.RectangleTargetRegion)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.x_length_ != nullptr);
      if (_this->_impl_.x_length_ == nullptr) {
        _this->_impl_.x_length_ =
            ::google::protobuf::Message::CopyConstruct<::aim::RegionLength>(arena, *from._impl_.x_length_);
      } else {
        _this->_impl_.x_length_->MergeFrom(*from._impl_.x_length_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.y_length_ != nullptr);
      if (_this->_impl_.y_length_ == nullptr) {
        _this->_impl_.y_length_ =
            ::google::protobuf::Message::CopyConstruct<::aim::RegionLength>(arena, *from._impl_.y_length_);
      } else {
        _this->_impl_.y_length_->MergeFrom(*from._impl_.y_length_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RectangleTargetRegion::CopyFrom(const RectangleTargetRegion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aim.RectangleTargetRegion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RectangleTargetRegion::InternalSwap(RectangleTargetRegion* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RectangleTargetRegion, _impl_.y_length_)
      + sizeof(RectangleTargetRegion::_impl_.y_length_)
      - PROTOBUF_FIELD_OFFSET(RectangleTargetRegion, _impl_.x_length_)>(
          reinterpret_cast<char*>(&_impl_.x_length_),
          reinterpret_cast<char*>(&other->_impl_.x_length_));
}

::google::protobuf::Metadata RectangleTargetRegion::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EllipseTargetRegion::_Internal {
 public:
  using HasBits =
      decltype(std::declval<EllipseTargetRegion>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EllipseTargetRegion, _impl_._has_bits_);
};

EllipseTargetRegion::EllipseTargetRegion(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:aim.EllipseTargetRegion)
}
inline PROTOBUF_NDEBUG_INLINE EllipseTargetRegion::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::aim::EllipseTargetRegion& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

EllipseTargetRegion::EllipseTargetRegion(
    ::google::protobuf::Arena* arena,
    const EllipseTargetRegion& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EllipseTargetRegion* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.x_diamter_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::aim::RegionLength>(
                              arena, *from._impl_.x_diamter_)
                        : nullptr;
  _impl_.y_diamter_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::aim::RegionLength>(
                              arena, *from._impl_.y_diamter_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:aim.EllipseTargetRegion)
}
inline PROTOBUF_NDEBUG_INLINE EllipseTargetRegion::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void EllipseTargetRegion::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_diamter_),
           0,
           offsetof(Impl_, y_diamter_) -
               offsetof(Impl_, x_diamter_) +
               sizeof(Impl_::y_diamter_));
}
EllipseTargetRegion::~EllipseTargetRegion() {
  // @@protoc_insertion_point(destructor:aim.EllipseTargetRegion)
  SharedDtor(*this);
}
inline void EllipseTargetRegion::SharedDtor(MessageLite& self) {
  EllipseTargetRegion& this_ = static_cast<EllipseTargetRegion&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.x_diamter_;
  delete this_._impl_.y_diamter_;
  this_._impl_.~Impl_();
}

inline void* EllipseTargetRegion::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EllipseTargetRegion(arena);
}
constexpr auto EllipseTargetRegion::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(EllipseTargetRegion),
                                            alignof(EllipseTargetRegion));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EllipseTargetRegion::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EllipseTargetRegion_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EllipseTargetRegion::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EllipseTargetRegion>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EllipseTargetRegion::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EllipseTargetRegion>(), &EllipseTargetRegion::ByteSizeLong,
            &EllipseTargetRegion::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EllipseTargetRegion, _impl_._cached_size_),
        false,
    },
    &EllipseTargetRegion::kDescriptorMethods,
    &descriptor_table_scenario_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EllipseTargetRegion::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> EllipseTargetRegion::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EllipseTargetRegion, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::aim::EllipseTargetRegion>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .aim.RegionLength y_diamter = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(EllipseTargetRegion, _impl_.y_diamter_)}},
    // .aim.RegionLength x_diamter = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EllipseTargetRegion, _impl_.x_diamter_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .aim.RegionLength x_diamter = 1;
    {PROTOBUF_FIELD_OFFSET(EllipseTargetRegion, _impl_.x_diamter_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .aim.RegionLength y_diamter = 2;
    {PROTOBUF_FIELD_OFFSET(EllipseTargetRegion, _impl_.y_diamter_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::aim::RegionLength>()},
    {::_pbi::TcParser::GetTable<::aim::RegionLength>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void EllipseTargetRegion::Clear() {
// @@protoc_insertion_point(message_clear_start:aim.EllipseTargetRegion)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.x_diamter_ != nullptr);
      _impl_.x_diamter_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.y_diamter_ != nullptr);
      _impl_.y_diamter_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EllipseTargetRegion::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EllipseTargetRegion& this_ = static_cast<const EllipseTargetRegion&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EllipseTargetRegion::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EllipseTargetRegion& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:aim.EllipseTargetRegion)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .aim.RegionLength x_diamter = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.x_diamter_, this_._impl_.x_diamter_->GetCachedSize(), target,
                stream);
          }

          // .aim.RegionLength y_diamter = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.y_diamter_, this_._impl_.y_diamter_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:aim.EllipseTargetRegion)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EllipseTargetRegion::ByteSizeLong(const MessageLite& base) {
          const EllipseTargetRegion& this_ = static_cast<const EllipseTargetRegion&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EllipseTargetRegion::ByteSizeLong() const {
          const EllipseTargetRegion& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:aim.EllipseTargetRegion)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .aim.RegionLength x_diamter = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.x_diamter_);
            }
            // .aim.RegionLength y_diamter = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.y_diamter_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EllipseTargetRegion::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EllipseTargetRegion*>(&to_msg);
  auto& from = static_cast<const EllipseTargetRegion&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:aim.EllipseTargetRegion)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.x_diamter_ != nullptr);
      if (_this->_impl_.x_diamter_ == nullptr) {
        _this->_impl_.x_diamter_ =
            ::google::protobuf::Message::CopyConstruct<::aim::RegionLength>(arena, *from._impl_.x_diamter_);
      } else {
        _this->_impl_.x_diamter_->MergeFrom(*from._impl_.x_diamter_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.y_diamter_ != nullptr);
      if (_this->_impl_.y_diamter_ == nullptr) {
        _this->_impl_.y_diamter_ =
            ::google::protobuf::Message::CopyConstruct<::aim::RegionLength>(arena, *from._impl_.y_diamter_);
      } else {
        _this->_impl_.y_diamter_->MergeFrom(*from._impl_.y_diamter_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EllipseTargetRegion::CopyFrom(const EllipseTargetRegion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aim.EllipseTargetRegion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EllipseTargetRegion::InternalSwap(EllipseTargetRegion* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EllipseTargetRegion, _impl_.y_diamter_)
      + sizeof(EllipseTargetRegion::_impl_.y_diamter_)
      - PROTOBUF_FIELD_OFFSET(EllipseTargetRegion, _impl_.x_diamter_)>(
          reinterpret_cast<char*>(&_impl_.x_diamter_),
          reinterpret_cast<char*>(&other->_impl_.x_diamter_));
}

::google::protobuf::Metadata EllipseTargetRegion::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TargetPlacementStrategy::_Internal {
 public:
  using HasBits =
      decltype(std::declval<TargetPlacementStrategy>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TargetPlacementStrategy, _impl_._has_bits_);
};

TargetPlacementStrategy::TargetPlacementStrategy(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:aim.TargetPlacementStrategy)
}
inline PROTOBUF_NDEBUG_INLINE TargetPlacementStrategy::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::aim::TargetPlacementStrategy& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        regions_{visibility, arena, from.regions_} {}

TargetPlacementStrategy::TargetPlacementStrategy(
    ::google::protobuf::Arena* arena,
    const TargetPlacementStrategy& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TargetPlacementStrategy* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, min_distance_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, min_distance_),
           offsetof(Impl_, fixed_distance_jitter_) -
               offsetof(Impl_, min_distance_) +
               sizeof(Impl_::fixed_distance_jitter_));

  // @@protoc_insertion_point(copy_constructor:aim.TargetPlacementStrategy)
}
inline PROTOBUF_NDEBUG_INLINE TargetPlacementStrategy::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        regions_{visibility, arena} {}

inline void TargetPlacementStrategy::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, min_distance_),
           0,
           offsetof(Impl_, fixed_distance_jitter_) -
               offsetof(Impl_, min_distance_) +
               sizeof(Impl_::fixed_distance_jitter_));
}
TargetPlacementStrategy::~TargetPlacementStrategy() {
  // @@protoc_insertion_point(destructor:aim.TargetPlacementStrategy)
  SharedDtor(*this);
}
inline void TargetPlacementStrategy::SharedDtor(MessageLite& self) {
  TargetPlacementStrategy& this_ = static_cast<TargetPlacementStrategy&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* TargetPlacementStrategy::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TargetPlacementStrategy(arena);
}
constexpr auto TargetPlacementStrategy::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TargetPlacementStrategy, _impl_.regions_) +
          decltype(TargetPlacementStrategy::_impl_.regions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(TargetPlacementStrategy), alignof(TargetPlacementStrategy), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TargetPlacementStrategy::PlacementNew_,
                                 sizeof(TargetPlacementStrategy),
                                 alignof(TargetPlacementStrategy));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TargetPlacementStrategy::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TargetPlacementStrategy_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TargetPlacementStrategy::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TargetPlacementStrategy>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TargetPlacementStrategy::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TargetPlacementStrategy>(), &TargetPlacementStrategy::ByteSizeLong,
            &TargetPlacementStrategy::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TargetPlacementStrategy, _impl_._cached_size_),
        false,
    },
    &TargetPlacementStrategy::kDescriptorMethods,
    &descriptor_table_scenario_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TargetPlacementStrategy::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 0, 2> TargetPlacementStrategy::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TargetPlacementStrategy, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::aim::TargetPlacementStrategy>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .aim.TargetRegion regions = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TargetPlacementStrategy, _impl_.regions_)}},
    // float min_distance = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 0, 0, PROTOBUF_FIELD_OFFSET(TargetPlacementStrategy, _impl_.min_distance_)}},
    // bool alternate_regions = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TargetPlacementStrategy, _impl_.alternate_regions_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(TargetPlacementStrategy, _impl_.alternate_regions_)}},
    // float fixed_distance_from_last_target = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 2, 0, PROTOBUF_FIELD_OFFSET(TargetPlacementStrategy, _impl_.fixed_distance_from_last_target_)}},
    // float fixed_distance_jitter = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 3, 0, PROTOBUF_FIELD_OFFSET(TargetPlacementStrategy, _impl_.fixed_distance_jitter_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .aim.TargetRegion regions = 1;
    {PROTOBUF_FIELD_OFFSET(TargetPlacementStrategy, _impl_.regions_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // float min_distance = 2;
    {PROTOBUF_FIELD_OFFSET(TargetPlacementStrategy, _impl_.min_distance_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // bool alternate_regions = 3;
    {PROTOBUF_FIELD_OFFSET(TargetPlacementStrategy, _impl_.alternate_regions_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // float fixed_distance_from_last_target = 4;
    {PROTOBUF_FIELD_OFFSET(TargetPlacementStrategy, _impl_.fixed_distance_from_last_target_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float fixed_distance_jitter = 5;
    {PROTOBUF_FIELD_OFFSET(TargetPlacementStrategy, _impl_.fixed_distance_jitter_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }}, {{
    {::_pbi::TcParser::GetTable<::aim::TargetRegion>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void TargetPlacementStrategy::Clear() {
// @@protoc_insertion_point(message_clear_start:aim.TargetPlacementStrategy)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.regions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.min_distance_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.fixed_distance_jitter_) -
        reinterpret_cast<char*>(&_impl_.min_distance_)) + sizeof(_impl_.fixed_distance_jitter_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TargetPlacementStrategy::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TargetPlacementStrategy& this_ = static_cast<const TargetPlacementStrategy&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TargetPlacementStrategy::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TargetPlacementStrategy& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:aim.TargetPlacementStrategy)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .aim.TargetRegion regions = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_regions_size());
               i < n; i++) {
            const auto& repfield = this_._internal_regions().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // float min_distance = 2;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_min_distance(), target);
          }

          // bool alternate_regions = 3;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_alternate_regions(), target);
          }

          // float fixed_distance_from_last_target = 4;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                4, this_._internal_fixed_distance_from_last_target(), target);
          }

          // float fixed_distance_jitter = 5;
          if (cached_has_bits & 0x00000008u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                5, this_._internal_fixed_distance_jitter(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:aim.TargetPlacementStrategy)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TargetPlacementStrategy::ByteSizeLong(const MessageLite& base) {
          const TargetPlacementStrategy& this_ = static_cast<const TargetPlacementStrategy&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TargetPlacementStrategy::ByteSizeLong() const {
          const TargetPlacementStrategy& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:aim.TargetPlacementStrategy)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .aim.TargetRegion regions = 1;
            {
              total_size += 1UL * this_._internal_regions_size();
              for (const auto& msg : this_._internal_regions()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000000fu) {
            // float min_distance = 2;
            if (cached_has_bits & 0x00000001u) {
              total_size += 5;
            }
            // bool alternate_regions = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += 2;
            }
            // float fixed_distance_from_last_target = 4;
            if (cached_has_bits & 0x00000004u) {
              total_size += 5;
            }
            // float fixed_distance_jitter = 5;
            if (cached_has_bits & 0x00000008u) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TargetPlacementStrategy::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TargetPlacementStrategy*>(&to_msg);
  auto& from = static_cast<const TargetPlacementStrategy&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:aim.TargetPlacementStrategy)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_regions()->MergeFrom(
      from._internal_regions());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.min_distance_ = from._impl_.min_distance_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.alternate_regions_ = from._impl_.alternate_regions_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.fixed_distance_from_last_target_ = from._impl_.fixed_distance_from_last_target_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.fixed_distance_jitter_ = from._impl_.fixed_distance_jitter_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TargetPlacementStrategy::CopyFrom(const TargetPlacementStrategy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aim.TargetPlacementStrategy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TargetPlacementStrategy::InternalSwap(TargetPlacementStrategy* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.regions_.InternalSwap(&other->_impl_.regions_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TargetPlacementStrategy, _impl_.fixed_distance_jitter_)
      + sizeof(TargetPlacementStrategy::_impl_.fixed_distance_jitter_)
      - PROTOBUF_FIELD_OFFSET(TargetPlacementStrategy, _impl_.min_distance_)>(
          reinterpret_cast<char*>(&_impl_.min_distance_),
          reinterpret_cast<char*>(&other->_impl_.min_distance_));
}

::google::protobuf::Metadata TargetPlacementStrategy::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ScenarioDef::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ScenarioDef>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ScenarioDef, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::aim::ScenarioDef, _impl_._oneof_case_);
};

void ScenarioDef::set_allocated_static_def(::aim::StaticScenarioDef* static_def) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (static_def) {
    ::google::protobuf::Arena* submessage_arena = static_def->GetArena();
    if (message_arena != submessage_arena) {
      static_def = ::google::protobuf::internal::GetOwnedMessage(message_arena, static_def, submessage_arena);
    }
    set_has_static_def();
    _impl_.type_.static_def_ = static_def;
  }
  // @@protoc_insertion_point(field_set_allocated:aim.ScenarioDef.static_def)
}
void ScenarioDef::set_allocated_centering_def(::aim::CenteringScenarioDef* centering_def) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (centering_def) {
    ::google::protobuf::Arena* submessage_arena = centering_def->GetArena();
    if (message_arena != submessage_arena) {
      centering_def = ::google::protobuf::internal::GetOwnedMessage(message_arena, centering_def, submessage_arena);
    }
    set_has_centering_def();
    _impl_.type_.centering_def_ = centering_def;
  }
  // @@protoc_insertion_point(field_set_allocated:aim.ScenarioDef.centering_def)
}
ScenarioDef::ScenarioDef(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:aim.ScenarioDef)
}
inline PROTOBUF_NDEBUG_INLINE ScenarioDef::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::aim::ScenarioDef& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        scenario_id_(arena, from.scenario_id_),
        display_name_(arena, from.display_name_),
        type_{},
        _oneof_case_{from._oneof_case_[0]} {}

ScenarioDef::ScenarioDef(
    ::google::protobuf::Arena* arena,
    const ScenarioDef& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ScenarioDef* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.room_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::aim::Room>(
                              arena, *from._impl_.room_)
                        : nullptr;
  _impl_.duration_seconds_ = from._impl_.duration_seconds_;
  switch (type_case()) {
    case TYPE_NOT_SET:
      break;
      case kStaticDef:
        _impl_.type_.static_def_ = ::google::protobuf::Message::CopyConstruct<::aim::StaticScenarioDef>(arena, *from._impl_.type_.static_def_);
        break;
      case kCenteringDef:
        _impl_.type_.centering_def_ = ::google::protobuf::Message::CopyConstruct<::aim::CenteringScenarioDef>(arena, *from._impl_.type_.centering_def_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:aim.ScenarioDef)
}
inline PROTOBUF_NDEBUG_INLINE ScenarioDef::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        scenario_id_(arena),
        display_name_(arena),
        type_{},
        _oneof_case_{} {}

inline void ScenarioDef::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, room_),
           0,
           offsetof(Impl_, duration_seconds_) -
               offsetof(Impl_, room_) +
               sizeof(Impl_::duration_seconds_));
}
ScenarioDef::~ScenarioDef() {
  // @@protoc_insertion_point(destructor:aim.ScenarioDef)
  SharedDtor(*this);
}
inline void ScenarioDef::SharedDtor(MessageLite& self) {
  ScenarioDef& this_ = static_cast<ScenarioDef&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.scenario_id_.Destroy();
  this_._impl_.display_name_.Destroy();
  delete this_._impl_.room_;
  if (this_.has_type()) {
    this_.clear_type();
  }
  this_._impl_.~Impl_();
}

void ScenarioDef::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:aim.ScenarioDef)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (type_case()) {
    case kStaticDef: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.static_def_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.static_def_);
      }
      break;
    }
    case kCenteringDef: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.centering_def_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.centering_def_);
      }
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = TYPE_NOT_SET;
}


inline void* ScenarioDef::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ScenarioDef(arena);
}
constexpr auto ScenarioDef::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ScenarioDef),
                                            alignof(ScenarioDef));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ScenarioDef::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ScenarioDef_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ScenarioDef::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ScenarioDef>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ScenarioDef::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ScenarioDef>(), &ScenarioDef::ByteSizeLong,
            &ScenarioDef::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ScenarioDef, _impl_._cached_size_),
        false,
    },
    &ScenarioDef::kDescriptorMethods,
    &descriptor_table_scenario_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ScenarioDef::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 6, 3, 47, 2> ScenarioDef::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ScenarioDef, _impl_._has_bits_),
    0, // no _extensions_
    6, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::aim::ScenarioDef>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string display_name = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(ScenarioDef, _impl_.display_name_)}},
    // string scenario_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ScenarioDef, _impl_.scenario_id_)}},
    // float duration_seconds = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 3, 0, PROTOBUF_FIELD_OFFSET(ScenarioDef, _impl_.duration_seconds_)}},
    // .aim.Room room = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(ScenarioDef, _impl_.room_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string scenario_id = 1;
    {PROTOBUF_FIELD_OFFSET(ScenarioDef, _impl_.scenario_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // float duration_seconds = 2;
    {PROTOBUF_FIELD_OFFSET(ScenarioDef, _impl_.duration_seconds_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // .aim.Room room = 3;
    {PROTOBUF_FIELD_OFFSET(ScenarioDef, _impl_.room_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string display_name = 4;
    {PROTOBUF_FIELD_OFFSET(ScenarioDef, _impl_.display_name_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .aim.StaticScenarioDef static_def = 5;
    {PROTOBUF_FIELD_OFFSET(ScenarioDef, _impl_.type_.static_def_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .aim.CenteringScenarioDef centering_def = 6;
    {PROTOBUF_FIELD_OFFSET(ScenarioDef, _impl_.type_.centering_def_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::aim::Room>()},
    {::_pbi::TcParser::GetTable<::aim::StaticScenarioDef>()},
    {::_pbi::TcParser::GetTable<::aim::CenteringScenarioDef>()},
  }}, {{
    "\17\13\0\0\14\0\0\0"
    "aim.ScenarioDef"
    "scenario_id"
    "display_name"
  }},
};

PROTOBUF_NOINLINE void ScenarioDef::Clear() {
// @@protoc_insertion_point(message_clear_start:aim.ScenarioDef)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.scenario_id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.display_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.room_ != nullptr);
      _impl_.room_->Clear();
    }
  }
  _impl_.duration_seconds_ = 0;
  clear_type();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ScenarioDef::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ScenarioDef& this_ = static_cast<const ScenarioDef&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ScenarioDef::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ScenarioDef& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:aim.ScenarioDef)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // string scenario_id = 1;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_scenario_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "aim.ScenarioDef.scenario_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // float duration_seconds = 2;
          if (cached_has_bits & 0x00000008u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_duration_seconds(), target);
          }

          // .aim.Room room = 3;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.room_, this_._impl_.room_->GetCachedSize(), target,
                stream);
          }

          // string display_name = 4;
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_display_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "aim.ScenarioDef.display_name");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          switch (this_.type_case()) {
            case kStaticDef: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  5, *this_._impl_.type_.static_def_, this_._impl_.type_.static_def_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kCenteringDef: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  6, *this_._impl_.type_.centering_def_, this_._impl_.type_.centering_def_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:aim.ScenarioDef)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ScenarioDef::ByteSizeLong(const MessageLite& base) {
          const ScenarioDef& this_ = static_cast<const ScenarioDef&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ScenarioDef::ByteSizeLong() const {
          const ScenarioDef& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:aim.ScenarioDef)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000000fu) {
            // string scenario_id = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_scenario_id());
            }
            // string display_name = 4;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_display_name());
            }
            // .aim.Room room = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.room_);
            }
            // float duration_seconds = 2;
            if (cached_has_bits & 0x00000008u) {
              total_size += 5;
            }
          }
          switch (this_.type_case()) {
            // .aim.StaticScenarioDef static_def = 5;
            case kStaticDef: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.type_.static_def_);
              break;
            }
            // .aim.CenteringScenarioDef centering_def = 6;
            case kCenteringDef: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.type_.centering_def_);
              break;
            }
            case TYPE_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ScenarioDef::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ScenarioDef*>(&to_msg);
  auto& from = static_cast<const ScenarioDef&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:aim.ScenarioDef)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_scenario_id(from._internal_scenario_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_display_name(from._internal_display_name());
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.room_ != nullptr);
      if (_this->_impl_.room_ == nullptr) {
        _this->_impl_.room_ =
            ::google::protobuf::Message::CopyConstruct<::aim::Room>(arena, *from._impl_.room_);
      } else {
        _this->_impl_.room_->MergeFrom(*from._impl_.room_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.duration_seconds_ = from._impl_.duration_seconds_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_type();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kStaticDef: {
        if (oneof_needs_init) {
          _this->_impl_.type_.static_def_ =
              ::google::protobuf::Message::CopyConstruct<::aim::StaticScenarioDef>(arena, *from._impl_.type_.static_def_);
        } else {
          _this->_impl_.type_.static_def_->MergeFrom(from._internal_static_def());
        }
        break;
      }
      case kCenteringDef: {
        if (oneof_needs_init) {
          _this->_impl_.type_.centering_def_ =
              ::google::protobuf::Message::CopyConstruct<::aim::CenteringScenarioDef>(arena, *from._impl_.type_.centering_def_);
        } else {
          _this->_impl_.type_.centering_def_->MergeFrom(from._internal_centering_def());
        }
        break;
      }
      case TYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ScenarioDef::CopyFrom(const ScenarioDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aim.ScenarioDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ScenarioDef::InternalSwap(ScenarioDef* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.scenario_id_, &other->_impl_.scenario_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.display_name_, &other->_impl_.display_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ScenarioDef, _impl_.duration_seconds_)
      + sizeof(ScenarioDef::_impl_.duration_seconds_)
      - PROTOBUF_FIELD_OFFSET(ScenarioDef, _impl_.room_)>(
          reinterpret_cast<char*>(&_impl_.room_),
          reinterpret_cast<char*>(&other->_impl_.room_));
  swap(_impl_.type_, other->_impl_.type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata ScenarioDef::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StaticScenarioDef::_Internal {
 public:
  using HasBits =
      decltype(std::declval<StaticScenarioDef>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(StaticScenarioDef, _impl_._has_bits_);
};

StaticScenarioDef::StaticScenarioDef(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:aim.StaticScenarioDef)
}
inline PROTOBUF_NDEBUG_INLINE StaticScenarioDef::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::aim::StaticScenarioDef& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

StaticScenarioDef::StaticScenarioDef(
    ::google::protobuf::Arena* arena,
    const StaticScenarioDef& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StaticScenarioDef* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.target_placement_strategy_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::aim::TargetPlacementStrategy>(
                              arena, *from._impl_.target_placement_strategy_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, num_targets_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, num_targets_),
           offsetof(Impl_, newest_target_is_ghost_) -
               offsetof(Impl_, num_targets_) +
               sizeof(Impl_::newest_target_is_ghost_));

  // @@protoc_insertion_point(copy_constructor:aim.StaticScenarioDef)
}
inline PROTOBUF_NDEBUG_INLINE StaticScenarioDef::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StaticScenarioDef::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, target_placement_strategy_),
           0,
           offsetof(Impl_, newest_target_is_ghost_) -
               offsetof(Impl_, target_placement_strategy_) +
               sizeof(Impl_::newest_target_is_ghost_));
}
StaticScenarioDef::~StaticScenarioDef() {
  // @@protoc_insertion_point(destructor:aim.StaticScenarioDef)
  SharedDtor(*this);
}
inline void StaticScenarioDef::SharedDtor(MessageLite& self) {
  StaticScenarioDef& this_ = static_cast<StaticScenarioDef&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.target_placement_strategy_;
  this_._impl_.~Impl_();
}

inline void* StaticScenarioDef::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) StaticScenarioDef(arena);
}
constexpr auto StaticScenarioDef::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(StaticScenarioDef),
                                            alignof(StaticScenarioDef));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull StaticScenarioDef::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_StaticScenarioDef_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &StaticScenarioDef::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<StaticScenarioDef>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &StaticScenarioDef::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<StaticScenarioDef>(), &StaticScenarioDef::ByteSizeLong,
            &StaticScenarioDef::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(StaticScenarioDef, _impl_._cached_size_),
        false,
    },
    &StaticScenarioDef::kDescriptorMethods,
    &descriptor_table_scenario_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* StaticScenarioDef::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 0, 2> StaticScenarioDef::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StaticScenarioDef, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::aim::StaticScenarioDef>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 num_targets = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StaticScenarioDef, _impl_.num_targets_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(StaticScenarioDef, _impl_.num_targets_)}},
    // float target_radius = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 2, 0, PROTOBUF_FIELD_OFFSET(StaticScenarioDef, _impl_.target_radius_)}},
    // bool is_poke_ball = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(StaticScenarioDef, _impl_.is_poke_ball_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(StaticScenarioDef, _impl_.is_poke_ball_)}},
    // bool remove_closest_target_on_miss = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(StaticScenarioDef, _impl_.remove_closest_target_on_miss_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(StaticScenarioDef, _impl_.remove_closest_target_on_miss_)}},
    // .aim.TargetPlacementStrategy target_placement_strategy = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(StaticScenarioDef, _impl_.target_placement_strategy_)}},
    // bool newest_target_is_ghost = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(StaticScenarioDef, _impl_.newest_target_is_ghost_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(StaticScenarioDef, _impl_.newest_target_is_ghost_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 num_targets = 1;
    {PROTOBUF_FIELD_OFFSET(StaticScenarioDef, _impl_.num_targets_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // float target_radius = 2;
    {PROTOBUF_FIELD_OFFSET(StaticScenarioDef, _impl_.target_radius_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // bool is_poke_ball = 3;
    {PROTOBUF_FIELD_OFFSET(StaticScenarioDef, _impl_.is_poke_ball_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool remove_closest_target_on_miss = 4;
    {PROTOBUF_FIELD_OFFSET(StaticScenarioDef, _impl_.remove_closest_target_on_miss_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // .aim.TargetPlacementStrategy target_placement_strategy = 5;
    {PROTOBUF_FIELD_OFFSET(StaticScenarioDef, _impl_.target_placement_strategy_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool newest_target_is_ghost = 6;
    {PROTOBUF_FIELD_OFFSET(StaticScenarioDef, _impl_.newest_target_is_ghost_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::aim::TargetPlacementStrategy>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void StaticScenarioDef::Clear() {
// @@protoc_insertion_point(message_clear_start:aim.StaticScenarioDef)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.target_placement_strategy_ != nullptr);
    _impl_.target_placement_strategy_->Clear();
  }
  if (cached_has_bits & 0x0000003eu) {
    ::memset(&_impl_.num_targets_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.newest_target_is_ghost_) -
        reinterpret_cast<char*>(&_impl_.num_targets_)) + sizeof(_impl_.newest_target_is_ghost_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* StaticScenarioDef::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const StaticScenarioDef& this_ = static_cast<const StaticScenarioDef&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* StaticScenarioDef::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const StaticScenarioDef& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:aim.StaticScenarioDef)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // int32 num_targets = 1;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_num_targets(), target);
          }

          // float target_radius = 2;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_target_radius(), target);
          }

          // bool is_poke_ball = 3;
          if (cached_has_bits & 0x00000008u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_is_poke_ball(), target);
          }

          // bool remove_closest_target_on_miss = 4;
          if (cached_has_bits & 0x00000010u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_remove_closest_target_on_miss(), target);
          }

          // .aim.TargetPlacementStrategy target_placement_strategy = 5;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.target_placement_strategy_, this_._impl_.target_placement_strategy_->GetCachedSize(), target,
                stream);
          }

          // bool newest_target_is_ghost = 6;
          if (cached_has_bits & 0x00000020u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                6, this_._internal_newest_target_is_ghost(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:aim.StaticScenarioDef)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t StaticScenarioDef::ByteSizeLong(const MessageLite& base) {
          const StaticScenarioDef& this_ = static_cast<const StaticScenarioDef&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t StaticScenarioDef::ByteSizeLong() const {
          const StaticScenarioDef& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:aim.StaticScenarioDef)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000003fu) {
            // .aim.TargetPlacementStrategy target_placement_strategy = 5;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.target_placement_strategy_);
            }
            // int32 num_targets = 1;
            if (cached_has_bits & 0x00000002u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_num_targets());
            }
            // float target_radius = 2;
            if (cached_has_bits & 0x00000004u) {
              total_size += 5;
            }
            // bool is_poke_ball = 3;
            if (cached_has_bits & 0x00000008u) {
              total_size += 2;
            }
            // bool remove_closest_target_on_miss = 4;
            if (cached_has_bits & 0x00000010u) {
              total_size += 2;
            }
            // bool newest_target_is_ghost = 6;
            if (cached_has_bits & 0x00000020u) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void StaticScenarioDef::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StaticScenarioDef*>(&to_msg);
  auto& from = static_cast<const StaticScenarioDef&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:aim.StaticScenarioDef)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.target_placement_strategy_ != nullptr);
      if (_this->_impl_.target_placement_strategy_ == nullptr) {
        _this->_impl_.target_placement_strategy_ =
            ::google::protobuf::Message::CopyConstruct<::aim::TargetPlacementStrategy>(arena, *from._impl_.target_placement_strategy_);
      } else {
        _this->_impl_.target_placement_strategy_->MergeFrom(*from._impl_.target_placement_strategy_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.num_targets_ = from._impl_.num_targets_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.target_radius_ = from._impl_.target_radius_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.is_poke_ball_ = from._impl_.is_poke_ball_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.remove_closest_target_on_miss_ = from._impl_.remove_closest_target_on_miss_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.newest_target_is_ghost_ = from._impl_.newest_target_is_ghost_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StaticScenarioDef::CopyFrom(const StaticScenarioDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aim.StaticScenarioDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StaticScenarioDef::InternalSwap(StaticScenarioDef* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StaticScenarioDef, _impl_.newest_target_is_ghost_)
      + sizeof(StaticScenarioDef::_impl_.newest_target_is_ghost_)
      - PROTOBUF_FIELD_OFFSET(StaticScenarioDef, _impl_.target_placement_strategy_)>(
          reinterpret_cast<char*>(&_impl_.target_placement_strategy_),
          reinterpret_cast<char*>(&other->_impl_.target_placement_strategy_));
}

::google::protobuf::Metadata StaticScenarioDef::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CenteringScenarioDef::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CenteringScenarioDef>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CenteringScenarioDef, _impl_._has_bits_);
};

void CenteringScenarioDef::clear_start_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.start_position_ != nullptr) _impl_.start_position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CenteringScenarioDef::clear_end_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.end_position_ != nullptr) _impl_.end_position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
CenteringScenarioDef::CenteringScenarioDef(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:aim.CenteringScenarioDef)
}
inline PROTOBUF_NDEBUG_INLINE CenteringScenarioDef::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::aim::CenteringScenarioDef& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CenteringScenarioDef::CenteringScenarioDef(
    ::google::protobuf::Arena* arena,
    const CenteringScenarioDef& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CenteringScenarioDef* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.start_position_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::aim::StoredVec3>(
                              arena, *from._impl_.start_position_)
                        : nullptr;
  _impl_.end_position_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::aim::StoredVec3>(
                              arena, *from._impl_.end_position_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, target_width_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, target_width_),
           offsetof(Impl_, show_start_and_end_) -
               offsetof(Impl_, target_width_) +
               sizeof(Impl_::show_start_and_end_));

  // @@protoc_insertion_point(copy_constructor:aim.CenteringScenarioDef)
}
inline PROTOBUF_NDEBUG_INLINE CenteringScenarioDef::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CenteringScenarioDef::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, start_position_),
           0,
           offsetof(Impl_, show_start_and_end_) -
               offsetof(Impl_, start_position_) +
               sizeof(Impl_::show_start_and_end_));
}
CenteringScenarioDef::~CenteringScenarioDef() {
  // @@protoc_insertion_point(destructor:aim.CenteringScenarioDef)
  SharedDtor(*this);
}
inline void CenteringScenarioDef::SharedDtor(MessageLite& self) {
  CenteringScenarioDef& this_ = static_cast<CenteringScenarioDef&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.start_position_;
  delete this_._impl_.end_position_;
  this_._impl_.~Impl_();
}

inline void* CenteringScenarioDef::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CenteringScenarioDef(arena);
}
constexpr auto CenteringScenarioDef::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CenteringScenarioDef),
                                            alignof(CenteringScenarioDef));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CenteringScenarioDef::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CenteringScenarioDef_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CenteringScenarioDef::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CenteringScenarioDef>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CenteringScenarioDef::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CenteringScenarioDef>(), &CenteringScenarioDef::ByteSizeLong,
            &CenteringScenarioDef::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CenteringScenarioDef, _impl_._cached_size_),
        false,
    },
    &CenteringScenarioDef::kDescriptorMethods,
    &descriptor_table_scenario_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CenteringScenarioDef::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 2, 0, 2> CenteringScenarioDef::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CenteringScenarioDef, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::aim::CenteringScenarioDef>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float target_width = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 2, 0, PROTOBUF_FIELD_OFFSET(CenteringScenarioDef, _impl_.target_width_)}},
    // float target_height = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 3, 0, PROTOBUF_FIELD_OFFSET(CenteringScenarioDef, _impl_.target_height_)}},
    // float speed = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 4, 0, PROTOBUF_FIELD_OFFSET(CenteringScenarioDef, _impl_.speed_)}},
    // .aim.StoredVec3 start_position = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(CenteringScenarioDef, _impl_.start_position_)}},
    // .aim.StoredVec3 end_position = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 1, PROTOBUF_FIELD_OFFSET(CenteringScenarioDef, _impl_.end_position_)}},
    // bool show_start_and_end = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CenteringScenarioDef, _impl_.show_start_and_end_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(CenteringScenarioDef, _impl_.show_start_and_end_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // float target_width = 1;
    {PROTOBUF_FIELD_OFFSET(CenteringScenarioDef, _impl_.target_width_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float target_height = 2;
    {PROTOBUF_FIELD_OFFSET(CenteringScenarioDef, _impl_.target_height_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float speed = 3;
    {PROTOBUF_FIELD_OFFSET(CenteringScenarioDef, _impl_.speed_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // .aim.StoredVec3 start_position = 4;
    {PROTOBUF_FIELD_OFFSET(CenteringScenarioDef, _impl_.start_position_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .aim.StoredVec3 end_position = 5;
    {PROTOBUF_FIELD_OFFSET(CenteringScenarioDef, _impl_.end_position_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool show_start_and_end = 6;
    {PROTOBUF_FIELD_OFFSET(CenteringScenarioDef, _impl_.show_start_and_end_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::aim::StoredVec3>()},
    {::_pbi::TcParser::GetTable<::aim::StoredVec3>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CenteringScenarioDef::Clear() {
// @@protoc_insertion_point(message_clear_start:aim.CenteringScenarioDef)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.start_position_ != nullptr);
      _impl_.start_position_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.end_position_ != nullptr);
      _impl_.end_position_->Clear();
    }
  }
  if (cached_has_bits & 0x0000003cu) {
    ::memset(&_impl_.target_width_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.show_start_and_end_) -
        reinterpret_cast<char*>(&_impl_.target_width_)) + sizeof(_impl_.show_start_and_end_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CenteringScenarioDef::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CenteringScenarioDef& this_ = static_cast<const CenteringScenarioDef&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CenteringScenarioDef::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CenteringScenarioDef& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:aim.CenteringScenarioDef)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // float target_width = 1;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_target_width(), target);
          }

          // float target_height = 2;
          if (cached_has_bits & 0x00000008u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_target_height(), target);
          }

          // float speed = 3;
          if (cached_has_bits & 0x00000010u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_speed(), target);
          }

          // .aim.StoredVec3 start_position = 4;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.start_position_, this_._impl_.start_position_->GetCachedSize(), target,
                stream);
          }

          // .aim.StoredVec3 end_position = 5;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.end_position_, this_._impl_.end_position_->GetCachedSize(), target,
                stream);
          }

          // bool show_start_and_end = 6;
          if (cached_has_bits & 0x00000020u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                6, this_._internal_show_start_and_end(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:aim.CenteringScenarioDef)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CenteringScenarioDef::ByteSizeLong(const MessageLite& base) {
          const CenteringScenarioDef& this_ = static_cast<const CenteringScenarioDef&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CenteringScenarioDef::ByteSizeLong() const {
          const CenteringScenarioDef& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:aim.CenteringScenarioDef)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000003fu) {
            // .aim.StoredVec3 start_position = 4;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.start_position_);
            }
            // .aim.StoredVec3 end_position = 5;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.end_position_);
            }
            // float target_width = 1;
            if (cached_has_bits & 0x00000004u) {
              total_size += 5;
            }
            // float target_height = 2;
            if (cached_has_bits & 0x00000008u) {
              total_size += 5;
            }
            // float speed = 3;
            if (cached_has_bits & 0x00000010u) {
              total_size += 5;
            }
            // bool show_start_and_end = 6;
            if (cached_has_bits & 0x00000020u) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CenteringScenarioDef::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CenteringScenarioDef*>(&to_msg);
  auto& from = static_cast<const CenteringScenarioDef&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:aim.CenteringScenarioDef)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.start_position_ != nullptr);
      if (_this->_impl_.start_position_ == nullptr) {
        _this->_impl_.start_position_ =
            ::google::protobuf::Message::CopyConstruct<::aim::StoredVec3>(arena, *from._impl_.start_position_);
      } else {
        _this->_impl_.start_position_->MergeFrom(*from._impl_.start_position_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.end_position_ != nullptr);
      if (_this->_impl_.end_position_ == nullptr) {
        _this->_impl_.end_position_ =
            ::google::protobuf::Message::CopyConstruct<::aim::StoredVec3>(arena, *from._impl_.end_position_);
      } else {
        _this->_impl_.end_position_->MergeFrom(*from._impl_.end_position_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.target_width_ = from._impl_.target_width_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.target_height_ = from._impl_.target_height_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.speed_ = from._impl_.speed_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.show_start_and_end_ = from._impl_.show_start_and_end_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CenteringScenarioDef::CopyFrom(const CenteringScenarioDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aim.CenteringScenarioDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CenteringScenarioDef::InternalSwap(CenteringScenarioDef* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CenteringScenarioDef, _impl_.show_start_and_end_)
      + sizeof(CenteringScenarioDef::_impl_.show_start_and_end_)
      - PROTOBUF_FIELD_OFFSET(CenteringScenarioDef, _impl_.start_position_)>(
          reinterpret_cast<char*>(&_impl_.start_position_),
          reinterpret_cast<char*>(&other->_impl_.start_position_));
}

::google::protobuf::Metadata CenteringScenarioDef::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace aim
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_scenario_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
