// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: playlist.proto
// Protobuf C++ Version: 5.29.3

#include "playlist.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace aim {

inline constexpr PlaylistItem::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        scenario_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        num_plays_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PlaylistItem::PlaylistItem(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PlaylistItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlaylistItemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlaylistItemDefaultTypeInternal() {}
  union {
    PlaylistItem _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlaylistItemDefaultTypeInternal _PlaylistItem_default_instance_;

inline constexpr Playlist::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        items_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR Playlist::Playlist(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PlaylistDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlaylistDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlaylistDefaultTypeInternal() {}
  union {
    Playlist _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlaylistDefaultTypeInternal _Playlist_default_instance_;
}  // namespace aim
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_playlist_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_playlist_2eproto = nullptr;
const ::uint32_t
    TableStruct_playlist_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::aim::Playlist, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::aim::Playlist, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::aim::Playlist, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::aim::Playlist, _impl_.items_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::aim::PlaylistItem, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::aim::PlaylistItem, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::aim::PlaylistItem, _impl_.scenario_id_),
        PROTOBUF_FIELD_OFFSET(::aim::PlaylistItem, _impl_.num_plays_),
        0,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::aim::Playlist)},
        {12, 22, -1, sizeof(::aim::PlaylistItem)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::aim::_Playlist_default_instance_._instance,
    &::aim::_PlaylistItem_default_instance_._instance,
};
const char descriptor_table_protodef_playlist_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\016playlist.proto\022\003aim\":\n\010Playlist\022\014\n\004nam"
    "e\030\001 \001(\t\022 \n\005items\030\002 \003(\0132\021.aim.PlaylistIte"
    "m\"6\n\014PlaylistItem\022\023\n\013scenario_id\030\001 \001(\t\022\021"
    "\n\tnum_plays\030\002 \001(\005b\010editionsp\350\007"
};
static ::absl::once_flag descriptor_table_playlist_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_playlist_2eproto = {
    false,
    false,
    150,
    descriptor_table_protodef_playlist_2eproto,
    "playlist.proto",
    &descriptor_table_playlist_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_playlist_2eproto::offsets,
    file_level_enum_descriptors_playlist_2eproto,
    file_level_service_descriptors_playlist_2eproto,
};
namespace aim {
// ===================================================================

class Playlist::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Playlist>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Playlist, _impl_._has_bits_);
};

Playlist::Playlist(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:aim.Playlist)
}
inline PROTOBUF_NDEBUG_INLINE Playlist::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::aim::Playlist& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        items_{visibility, arena, from.items_},
        name_(arena, from.name_) {}

Playlist::Playlist(
    ::google::protobuf::Arena* arena,
    const Playlist& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Playlist* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:aim.Playlist)
}
inline PROTOBUF_NDEBUG_INLINE Playlist::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        items_{visibility, arena},
        name_(arena) {}

inline void Playlist::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Playlist::~Playlist() {
  // @@protoc_insertion_point(destructor:aim.Playlist)
  SharedDtor(*this);
}
inline void Playlist::SharedDtor(MessageLite& self) {
  Playlist& this_ = static_cast<Playlist&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Playlist::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Playlist(arena);
}
constexpr auto Playlist::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Playlist, _impl_.items_) +
          decltype(Playlist::_impl_.items_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Playlist), alignof(Playlist), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Playlist::PlacementNew_,
                                 sizeof(Playlist),
                                 alignof(Playlist));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Playlist::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Playlist_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Playlist::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Playlist>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Playlist::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Playlist>(), &Playlist::ByteSizeLong,
            &Playlist::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Playlist, _impl_._cached_size_),
        false,
    },
    &Playlist::kDescriptorMethods,
    &descriptor_table_playlist_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Playlist::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 25, 2> Playlist::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Playlist, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::aim::Playlist>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .aim.PlaylistItem items = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Playlist, _impl_.items_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Playlist, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(Playlist, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .aim.PlaylistItem items = 2;
    {PROTOBUF_FIELD_OFFSET(Playlist, _impl_.items_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::aim::PlaylistItem>()},
  }}, {{
    "\14\4\0\0\0\0\0\0"
    "aim.Playlist"
    "name"
  }},
};

PROTOBUF_NOINLINE void Playlist::Clear() {
// @@protoc_insertion_point(message_clear_start:aim.Playlist)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Playlist::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Playlist& this_ = static_cast<const Playlist&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Playlist::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Playlist& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:aim.Playlist)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // string name = 1;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "aim.Playlist.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated .aim.PlaylistItem items = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_items_size());
               i < n; i++) {
            const auto& repfield = this_._internal_items().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:aim.Playlist)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Playlist::ByteSizeLong(const MessageLite& base) {
          const Playlist& this_ = static_cast<const Playlist&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Playlist::ByteSizeLong() const {
          const Playlist& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:aim.Playlist)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .aim.PlaylistItem items = 2;
            {
              total_size += 1UL * this_._internal_items_size();
              for (const auto& msg : this_._internal_items()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string name = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Playlist::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Playlist*>(&to_msg);
  auto& from = static_cast<const Playlist&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:aim.Playlist)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_items()->MergeFrom(
      from._internal_items());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Playlist::CopyFrom(const Playlist& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aim.Playlist)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Playlist::InternalSwap(Playlist* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
}

::google::protobuf::Metadata Playlist::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PlaylistItem::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PlaylistItem>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PlaylistItem, _impl_._has_bits_);
};

PlaylistItem::PlaylistItem(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:aim.PlaylistItem)
}
inline PROTOBUF_NDEBUG_INLINE PlaylistItem::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::aim::PlaylistItem& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        scenario_id_(arena, from.scenario_id_) {}

PlaylistItem::PlaylistItem(
    ::google::protobuf::Arena* arena,
    const PlaylistItem& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PlaylistItem* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.num_plays_ = from._impl_.num_plays_;

  // @@protoc_insertion_point(copy_constructor:aim.PlaylistItem)
}
inline PROTOBUF_NDEBUG_INLINE PlaylistItem::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        scenario_id_(arena) {}

inline void PlaylistItem::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.num_plays_ = {};
}
PlaylistItem::~PlaylistItem() {
  // @@protoc_insertion_point(destructor:aim.PlaylistItem)
  SharedDtor(*this);
}
inline void PlaylistItem::SharedDtor(MessageLite& self) {
  PlaylistItem& this_ = static_cast<PlaylistItem&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.scenario_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PlaylistItem::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PlaylistItem(arena);
}
constexpr auto PlaylistItem::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PlaylistItem),
                                            alignof(PlaylistItem));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PlaylistItem::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PlaylistItem_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PlaylistItem::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PlaylistItem>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PlaylistItem::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PlaylistItem>(), &PlaylistItem::ByteSizeLong,
            &PlaylistItem::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PlaylistItem, _impl_._cached_size_),
        false,
    },
    &PlaylistItem::kDescriptorMethods,
    &descriptor_table_playlist_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PlaylistItem::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 36, 2> PlaylistItem::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PlaylistItem, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::aim::PlaylistItem>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 num_plays = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlaylistItem, _impl_.num_plays_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(PlaylistItem, _impl_.num_plays_)}},
    // string scenario_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PlaylistItem, _impl_.scenario_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string scenario_id = 1;
    {PROTOBUF_FIELD_OFFSET(PlaylistItem, _impl_.scenario_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 num_plays = 2;
    {PROTOBUF_FIELD_OFFSET(PlaylistItem, _impl_.num_plays_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\20\13\0\0\0\0\0\0"
    "aim.PlaylistItem"
    "scenario_id"
  }},
};

PROTOBUF_NOINLINE void PlaylistItem::Clear() {
// @@protoc_insertion_point(message_clear_start:aim.PlaylistItem)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.scenario_id_.ClearNonDefaultToEmpty();
  }
  _impl_.num_plays_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PlaylistItem::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PlaylistItem& this_ = static_cast<const PlaylistItem&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PlaylistItem::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PlaylistItem& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:aim.PlaylistItem)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // string scenario_id = 1;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_scenario_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "aim.PlaylistItem.scenario_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // int32 num_plays = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_num_plays(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:aim.PlaylistItem)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PlaylistItem::ByteSizeLong(const MessageLite& base) {
          const PlaylistItem& this_ = static_cast<const PlaylistItem&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PlaylistItem::ByteSizeLong() const {
          const PlaylistItem& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:aim.PlaylistItem)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // string scenario_id = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_scenario_id());
            }
            // int32 num_plays = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_num_plays());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PlaylistItem::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PlaylistItem*>(&to_msg);
  auto& from = static_cast<const PlaylistItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:aim.PlaylistItem)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_scenario_id(from._internal_scenario_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.num_plays_ = from._impl_.num_plays_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlaylistItem::CopyFrom(const PlaylistItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aim.PlaylistItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PlaylistItem::InternalSwap(PlaylistItem* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.scenario_id_, &other->_impl_.scenario_id_, arena);
        swap(_impl_.num_plays_, other->_impl_.num_plays_);
}

::google::protobuf::Metadata PlaylistItem::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace aim
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_playlist_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
