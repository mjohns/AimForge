// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: playlist.proto
// Protobuf C++ Version: 5.29.3

#include "playlist.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace aim {

inline constexpr PlaylistItem::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        scenario_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        num_plays_{0},
        auto_next_{false} {}

template <typename>
PROTOBUF_CONSTEXPR PlaylistItem::PlaylistItem(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PlaylistItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlaylistItemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlaylistItemDefaultTypeInternal() {}
  union {
    PlaylistItem _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlaylistItemDefaultTypeInternal _PlaylistItem_default_instance_;

inline constexpr PlaylistDef::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : items_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PlaylistDef::PlaylistDef(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PlaylistDefDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlaylistDefDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlaylistDefDefaultTypeInternal() {}
  union {
    PlaylistDef _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlaylistDefDefaultTypeInternal _PlaylistDef_default_instance_;
}  // namespace aim
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_playlist_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_playlist_2eproto = nullptr;
const ::uint32_t
    TableStruct_playlist_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::aim::PlaylistDef, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::aim::PlaylistDef, _impl_.items_),
        PROTOBUF_FIELD_OFFSET(::aim::PlaylistItem, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::aim::PlaylistItem, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::aim::PlaylistItem, _impl_.scenario_),
        PROTOBUF_FIELD_OFFSET(::aim::PlaylistItem, _impl_.num_plays_),
        PROTOBUF_FIELD_OFFSET(::aim::PlaylistItem, _impl_.auto_next_),
        0,
        1,
        2,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::aim::PlaylistDef)},
        {9, 20, -1, sizeof(::aim::PlaylistItem)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::aim::_PlaylistDef_default_instance_._instance,
    &::aim::_PlaylistItem_default_instance_._instance,
};
const char descriptor_table_protodef_playlist_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\016playlist.proto\022\003aim\"/\n\013PlaylistDef\022 \n\005"
    "items\030\001 \003(\0132\021.aim.PlaylistItem\"F\n\014Playli"
    "stItem\022\020\n\010scenario\030\001 \001(\t\022\021\n\tnum_plays\030\002 "
    "\001(\005\022\021\n\tauto_next\030\003 \001(\010b\010editionsp\350\007"
};
static ::absl::once_flag descriptor_table_playlist_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_playlist_2eproto = {
    false,
    false,
    155,
    descriptor_table_protodef_playlist_2eproto,
    "playlist.proto",
    &descriptor_table_playlist_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_playlist_2eproto::offsets,
    file_level_enum_descriptors_playlist_2eproto,
    file_level_service_descriptors_playlist_2eproto,
};
namespace aim {
// ===================================================================

class PlaylistDef::_Internal {
 public:
};

PlaylistDef::PlaylistDef(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:aim.PlaylistDef)
}
inline PROTOBUF_NDEBUG_INLINE PlaylistDef::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::aim::PlaylistDef& from_msg)
      : items_{visibility, arena, from.items_},
        _cached_size_{0} {}

PlaylistDef::PlaylistDef(
    ::google::protobuf::Arena* arena,
    const PlaylistDef& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PlaylistDef* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:aim.PlaylistDef)
}
inline PROTOBUF_NDEBUG_INLINE PlaylistDef::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : items_{visibility, arena},
        _cached_size_{0} {}

inline void PlaylistDef::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PlaylistDef::~PlaylistDef() {
  // @@protoc_insertion_point(destructor:aim.PlaylistDef)
  SharedDtor(*this);
}
inline void PlaylistDef::SharedDtor(MessageLite& self) {
  PlaylistDef& this_ = static_cast<PlaylistDef&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PlaylistDef::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PlaylistDef(arena);
}
constexpr auto PlaylistDef::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PlaylistDef, _impl_.items_) +
          decltype(PlaylistDef::_impl_.items_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(PlaylistDef), alignof(PlaylistDef), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PlaylistDef::PlacementNew_,
                                 sizeof(PlaylistDef),
                                 alignof(PlaylistDef));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PlaylistDef::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PlaylistDef_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PlaylistDef::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PlaylistDef>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PlaylistDef::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PlaylistDef>(), &PlaylistDef::ByteSizeLong,
            &PlaylistDef::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PlaylistDef, _impl_._cached_size_),
        false,
    },
    &PlaylistDef::kDescriptorMethods,
    &descriptor_table_playlist_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PlaylistDef::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> PlaylistDef::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::aim::PlaylistDef>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .aim.PlaylistItem items = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PlaylistDef, _impl_.items_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .aim.PlaylistItem items = 1;
    {PROTOBUF_FIELD_OFFSET(PlaylistDef, _impl_.items_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::aim::PlaylistItem>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PlaylistDef::Clear() {
// @@protoc_insertion_point(message_clear_start:aim.PlaylistDef)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PlaylistDef::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PlaylistDef& this_ = static_cast<const PlaylistDef&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PlaylistDef::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PlaylistDef& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:aim.PlaylistDef)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .aim.PlaylistItem items = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_items_size());
               i < n; i++) {
            const auto& repfield = this_._internal_items().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:aim.PlaylistDef)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PlaylistDef::ByteSizeLong(const MessageLite& base) {
          const PlaylistDef& this_ = static_cast<const PlaylistDef&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PlaylistDef::ByteSizeLong() const {
          const PlaylistDef& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:aim.PlaylistDef)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .aim.PlaylistItem items = 1;
            {
              total_size += 1UL * this_._internal_items_size();
              for (const auto& msg : this_._internal_items()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PlaylistDef::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PlaylistDef*>(&to_msg);
  auto& from = static_cast<const PlaylistDef&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:aim.PlaylistDef)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_items()->MergeFrom(
      from._internal_items());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlaylistDef::CopyFrom(const PlaylistDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aim.PlaylistDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PlaylistDef::InternalSwap(PlaylistDef* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
}

::google::protobuf::Metadata PlaylistDef::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PlaylistItem::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PlaylistItem>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PlaylistItem, _impl_._has_bits_);
};

PlaylistItem::PlaylistItem(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:aim.PlaylistItem)
}
inline PROTOBUF_NDEBUG_INLINE PlaylistItem::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::aim::PlaylistItem& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        scenario_(arena, from.scenario_) {}

PlaylistItem::PlaylistItem(
    ::google::protobuf::Arena* arena,
    const PlaylistItem& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PlaylistItem* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, num_plays_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, num_plays_),
           offsetof(Impl_, auto_next_) -
               offsetof(Impl_, num_plays_) +
               sizeof(Impl_::auto_next_));

  // @@protoc_insertion_point(copy_constructor:aim.PlaylistItem)
}
inline PROTOBUF_NDEBUG_INLINE PlaylistItem::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        scenario_(arena) {}

inline void PlaylistItem::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, num_plays_),
           0,
           offsetof(Impl_, auto_next_) -
               offsetof(Impl_, num_plays_) +
               sizeof(Impl_::auto_next_));
}
PlaylistItem::~PlaylistItem() {
  // @@protoc_insertion_point(destructor:aim.PlaylistItem)
  SharedDtor(*this);
}
inline void PlaylistItem::SharedDtor(MessageLite& self) {
  PlaylistItem& this_ = static_cast<PlaylistItem&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.scenario_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PlaylistItem::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PlaylistItem(arena);
}
constexpr auto PlaylistItem::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PlaylistItem),
                                            alignof(PlaylistItem));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PlaylistItem::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PlaylistItem_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PlaylistItem::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PlaylistItem>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PlaylistItem::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PlaylistItem>(), &PlaylistItem::ByteSizeLong,
            &PlaylistItem::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PlaylistItem, _impl_._cached_size_),
        false,
    },
    &PlaylistItem::kDescriptorMethods,
    &descriptor_table_playlist_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PlaylistItem::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 33, 2> PlaylistItem::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PlaylistItem, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::aim::PlaylistItem>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string scenario = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PlaylistItem, _impl_.scenario_)}},
    // int32 num_plays = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlaylistItem, _impl_.num_plays_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(PlaylistItem, _impl_.num_plays_)}},
    // bool auto_next = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PlaylistItem, _impl_.auto_next_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(PlaylistItem, _impl_.auto_next_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string scenario = 1;
    {PROTOBUF_FIELD_OFFSET(PlaylistItem, _impl_.scenario_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 num_plays = 2;
    {PROTOBUF_FIELD_OFFSET(PlaylistItem, _impl_.num_plays_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // bool auto_next = 3;
    {PROTOBUF_FIELD_OFFSET(PlaylistItem, _impl_.auto_next_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\20\10\0\0\0\0\0\0"
    "aim.PlaylistItem"
    "scenario"
  }},
};

PROTOBUF_NOINLINE void PlaylistItem::Clear() {
// @@protoc_insertion_point(message_clear_start:aim.PlaylistItem)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.scenario_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.num_plays_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.auto_next_) -
        reinterpret_cast<char*>(&_impl_.num_plays_)) + sizeof(_impl_.auto_next_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PlaylistItem::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PlaylistItem& this_ = static_cast<const PlaylistItem&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PlaylistItem::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PlaylistItem& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:aim.PlaylistItem)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // string scenario = 1;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_scenario();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "aim.PlaylistItem.scenario");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // int32 num_plays = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_num_plays(), target);
          }

          // bool auto_next = 3;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_auto_next(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:aim.PlaylistItem)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PlaylistItem::ByteSizeLong(const MessageLite& base) {
          const PlaylistItem& this_ = static_cast<const PlaylistItem&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PlaylistItem::ByteSizeLong() const {
          const PlaylistItem& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:aim.PlaylistItem)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // string scenario = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_scenario());
            }
            // int32 num_plays = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_num_plays());
            }
            // bool auto_next = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PlaylistItem::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PlaylistItem*>(&to_msg);
  auto& from = static_cast<const PlaylistItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:aim.PlaylistItem)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_scenario(from._internal_scenario());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.num_plays_ = from._impl_.num_plays_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.auto_next_ = from._impl_.auto_next_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlaylistItem::CopyFrom(const PlaylistItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aim.PlaylistItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PlaylistItem::InternalSwap(PlaylistItem* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.scenario_, &other->_impl_.scenario_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlaylistItem, _impl_.auto_next_)
      + sizeof(PlaylistItem::_impl_.auto_next_)
      - PROTOBUF_FIELD_OFFSET(PlaylistItem, _impl_.num_plays_)>(
          reinterpret_cast<char*>(&_impl_.num_plays_),
          reinterpret_cast<char*>(&other->_impl_.num_plays_));
}

::google::protobuf::Metadata PlaylistItem::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace aim
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_playlist_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
