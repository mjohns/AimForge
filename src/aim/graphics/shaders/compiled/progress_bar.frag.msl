#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct type_UniformBlock
{
    float4 LeftColor;
    float4 RightColor;
    float Progress;
};

struct main0_out
{
    float4 out_var_SV_Target0 [[color(0)]];
};

struct main0_in
{
    float2 in_var_TEXCOORD0 [[user(locn0)]];
};

fragment main0_out main0(main0_in in [[stage_in]], constant type_UniformBlock& UniformBlock [[buffer(0)]])
{
    main0_out out = {};
    float4 _39;
    do
    {
        if (in.in_var_TEXCOORD0.x > UniformBlock.Progress)
        {
            _39 = UniformBlock.RightColor;
            break;
        }
        else
        {
            _39 = UniformBlock.LeftColor;
            break;
        }
        break; // unreachable workaround
    } while(false);
    out.out_var_SV_Target0 = _39;
    return out;
}

